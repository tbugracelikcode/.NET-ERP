<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="BigPackage" xml:space="preserve">
    <value>Big Package</value>
  </data>
  <data name="CloseButton" xml:space="preserve">
    <value>Close</value>
  </data>
  <data name="Code" xml:space="preserve">
    <value>FICHE CODE</value>
  </data>
  <data name="CodeControlManager" xml:space="preserve">
    <value>There is a record with the same code.</value>
  </data>
  <data name="CodeLabel" xml:space="preserve">
    <value>Package Fiche Code:</value>
  </data>
  <data name="CreateLinesButton" xml:space="preserve">
    <value>Create Lines</value>
  </data>
  <data name="CustomerCode" xml:space="preserve">
    <value>CUSTOMER CODE</value>
  </data>
  <data name="CustomerCodeLabel" xml:space="preserve">
    <value>Customer Code:</value>
  </data>
  <data name="Date_Label" xml:space="preserve">
    <value>Date:</value>
  </data>
  <data name="DeleteConfirmationDescriptionBase" xml:space="preserve">
    <value>Are you sure you want to delete?</value>
  </data>
  <data name="DeleteConfirmationTitleBase" xml:space="preserve">
    <value>Confirmation</value>
  </data>
  <data name="DeleteControlManager" xml:space="preserve">
    <value>Records with transaction cannot be deleted.</value>
  </data>
  <data name="DeleteSuccessMessage" xml:space="preserve">
    <value>The record deleted successfully.</value>
  </data>
  <data name="EditModalTitle" xml:space="preserve">
    <value>Package Fiches</value>
  </data>
  <data name="Error" xml:space="preserve">
    <value>Error</value>
  </data>
  <data name="ExportFileName" xml:space="preserve">
    <value>PackageFiches</value>
  </data>
  <data name="ExportTitle" xml:space="preserve">
    <value>Package Fiches</value>
  </data>
  <data name="FinishedProductCode" xml:space="preserve">
    <value>FINISHED PRODUCT CODE</value>
  </data>
  <data name="LineGridPackingDate" xml:space="preserve">
    <value>PACKING DATE</value>
  </data>
  <data name="LineGridProductCode" xml:space="preserve">
    <value>PRODUCT CODE</value>
  </data>
  <data name="LineGridProductionOrderFicheNo" xml:space="preserve">
    <value>PRODUCTION ORDER REFERANCE NO</value>
  </data>
  <data name="LineGridProductName" xml:space="preserve">
    <value>PRODUCT NAME</value>
  </data>
  <data name="LineGridQuantity" xml:space="preserve">
    <value>QUANTITY</value>
  </data>
  <data name="LoadingCaption" xml:space="preserve">
    <value>Please wait..</value>
  </data>
  <data name="LoadingText" xml:space="preserve">
    <value>The records are loading..</value>
  </data>
  <data name="MessagePopupInformationDescriptionBase" xml:space="preserve">
    <value>The record you selected is using by {0}.</value>
  </data>
  <data name="MessagePopupInformationTitleBase" xml:space="preserve">
    <value>Information</value>
  </data>
  <data name="NumberofPackage" xml:space="preserve">
    <value>NUMBER OF PACKAGE</value>
  </data>
  <data name="NumberofPackageLabel" xml:space="preserve">
    <value>Number of Package:</value>
  </data>
  <data name="PackageContent" xml:space="preserve">
    <value>PACKAGE CONTENTS</value>
  </data>
  <data name="PackageContentLabel" xml:space="preserve">
    <value>Package Contents:</value>
  </data>
  <data name="PackageFichesContextAdd" xml:space="preserve">
    <value>Add</value>
  </data>
  <data name="PackageFichesContextChange" xml:space="preserve">
    <value>Change</value>
  </data>
  <data name="PackageFichesContextDelete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="PackageFichesContextRefresh" xml:space="preserve">
    <value>Refresh</value>
  </data>
  <data name="PackageTypeComboBoxLabel" xml:space="preserve">
    <value>Package Type:</value>
  </data>
  <data name="PalletNumberLabel" xml:space="preserve">
    <value>Pallet Number:</value>
  </data>
  <data name="ProductCode" xml:space="preserve">
    <value>PRODUCT CODE</value>
  </data>
  <data name="ProductCodeLabel" xml:space="preserve">
    <value>Product Code:</value>
  </data>
  <data name="ProductionOrderModalTitle" xml:space="preserve">
    <value>Production Orders</value>
  </data>
  <data name="ProductionOrderNr" xml:space="preserve">
    <value>PRODUCTION ORDER FICHE NO</value>
  </data>
  <data name="ProductionOrdersNoLabel" xml:space="preserve">
    <value>Production Order Referance No:</value>
  </data>
  <data name="ProductModalGridCode" xml:space="preserve">
    <value>PRODUCT CODE</value>
  </data>
  <data name="ProductModalGridName" xml:space="preserve">
    <value>PRODUCT NAME</value>
  </data>
  <data name="ProductPalletOrderLabel" xml:space="preserve">
    <value>Product Pallet Order:</value>
  </data>
  <data name="ProductsModalTitle" xml:space="preserve">
    <value>Products</value>
  </data>
  <data name="ProductUnitWeightLabel" xml:space="preserve">
    <value>Defined Unit Weight (kg.):</value>
  </data>
  <data name="SalesOrderCustomerOrderNo" xml:space="preserve">
    <value>CUSTOMER ORDER NO</value>
  </data>
  <data name="SalesOrderCustomerOrderNoLabel" xml:space="preserve">
    <value>Customer Order Number:</value>
  </data>
  <data name="SalesOrderFicheNo" xml:space="preserve">
    <value>ORDER FICHE NO</value>
  </data>
  <data name="SalesOrderFicheNoLabel" xml:space="preserve">
    <value>Order Number:</value>
  </data>
  <data name="SalesOrderModalGridCurrentAccountCardName" xml:space="preserve">
    <value>CURRENT ACCOUNT NAME</value>
  </data>
  <data name="SalesOrderModalGridDate_" xml:space="preserve">
    <value>ORDER DATE</value>
  </data>
  <data name="SalesOrderModalGridFicheNo" xml:space="preserve">
    <value>ORDER FICHE NO</value>
  </data>
  <data name="SalesOrdersModalTitle" xml:space="preserve">
    <value>Sales Orders</value>
  </data>
  <data name="SaveButton" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="SmallPackage" xml:space="preserve">
    <value>Small Package</value>
  </data>
  <data name="UICurrentMenu" xml:space="preserve">
    <value>Package Fiches</value>
  </data>
  <data name="UIPreviousMenu" xml:space="preserve">
    <value>Shipment Management &gt; Transactions</value>
  </data>
  <data name="UIWarningPackageMessage" xml:space="preserve">
    <value>The number of packages and package contents must be greater than 0.</value>
  </data>
  <data name="UIWarningPackageTitle" xml:space="preserve">
    <value>Warning</value>
  </data>
  <data name="UIWarningSalesOrderMessage" xml:space="preserve">
    <value>Product selection cannot be made without selecting a Sales Order.</value>
  </data>
  <data name="UIWarningSalesOrderTitle" xml:space="preserve">
    <value>Warning</value>
  </data>
  <data name="UnitWeightLabel" xml:space="preserve">
    <value>Unit Weight (kg.) :</value>
  </data>
  <data name="UpdateControlManager" xml:space="preserve">
    <value>There is a record with the same code.</value>
  </data>
  <data name="ValidatorCodeEmpty" xml:space="preserve">
    <value>Please enter the package fiche code.</value>
  </data>
  <data name="ValidatorCodeMaxLenght" xml:space="preserve">
    <value>Package fichecode cannot exceed 17 characters.</value>
  </data>
  <data name="ValidatorProductID" xml:space="preserve">
    <value>Please select a product.</value>
  </data>
  <data name="ValidatorSalesOrderID" xml:space="preserve">
    <value>Please select a sales order.</value>
  </data>
</root>