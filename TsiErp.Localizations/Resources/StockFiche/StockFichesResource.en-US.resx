<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="BranchCode" xml:space="preserve">
    <value>BRANCH CODE</value>
  </data>
  <data name="BranchModalGridCode" xml:space="preserve">
    <value>BRANCH CODE</value>
  </data>
  <data name="BranchModalGridDescription" xml:space="preserve">
    <value>DESCRIPTION</value>
  </data>
  <data name="BranchModalGridName" xml:space="preserve">
    <value>BRANCH NAME</value>
  </data>
  <data name="BranchModalTitle" xml:space="preserve">
    <value>Branches</value>
  </data>
  <data name="BranchNameLabel" xml:space="preserve">
    <value>Branch Code:</value>
  </data>
  <data name="CloseButton" xml:space="preserve">
    <value>Close</value>
  </data>
  <data name="CodeControlManager" xml:space="preserve">
    <value>There is a record with the same number.</value>
  </data>
  <data name="CurrencyCodeLabel" xml:space="preserve">
    <value>Local Currency Code:</value>
  </data>
  <data name="CurrencyModalGridCode" xml:space="preserve">
    <value>CURRENCY CODE</value>
  </data>
  <data name="CurrencyModalGridName" xml:space="preserve">
    <value>CURRENCY NAME</value>
  </data>
  <data name="CurrencyModalTitle" xml:space="preserve">
    <value>Currencies</value>
  </data>
  <data name="Date_" xml:space="preserve">
    <value>DATE</value>
  </data>
  <data name="Date_Label" xml:space="preserve">
    <value>Date:</value>
  </data>
  <data name="DeleteConfirmationDescriptionBase" xml:space="preserve">
    <value>Are you sure you want to delete?</value>
  </data>
  <data name="DeleteConfirmationTitleBase" xml:space="preserve">
    <value>Confirmation</value>
  </data>
  <data name="Description_Label" xml:space="preserve">
    <value>Description:</value>
  </data>
  <data name="EditLineModalTitle" xml:space="preserve">
    <value>Stock Fiche Lines</value>
  </data>
  <data name="EditModalTitle" xml:space="preserve">
    <value>Stock Fiches</value>
  </data>
  <data name="EnumConsume" xml:space="preserve">
    <value>Consumption Fiche</value>
  </data>
  <data name="EnumProductionIncome" xml:space="preserve">
    <value>Production Input Fiche</value>
  </data>
  <data name="EnumReserved" xml:space="preserve">
    <value>Add Reserved Fiche</value>
  </data>
  <data name="EnumStockIncome" xml:space="preserve">
    <value>Stock Input Fiche</value>
  </data>
  <data name="EnumStockOutput" xml:space="preserve">
    <value>Stock Output Fiche</value>
  </data>
  <data name="EnumWarehouse" xml:space="preserve">
    <value>Shipped to Warehouse Fiche</value>
  </data>
  <data name="EnumWastage" xml:space="preserve">
    <value>Wastege Fiche</value>
  </data>
  <data name="Error" xml:space="preserve">
    <value>Error</value>
  </data>
  <data name="ExchangeRateLabel" xml:space="preserve">
    <value>Exchange Rate:</value>
  </data>
  <data name="FicheNo" xml:space="preserve">
    <value>STOCK FICHE NUMBER</value>
  </data>
  <data name="FicheNoLabel" xml:space="preserve">
    <value>Stock Fiche Number:</value>
  </data>
  <data name="FicheType" xml:space="preserve">
    <value>FICHE TYPE</value>
  </data>
  <data name="FicheTypeLabel" xml:space="preserve">
    <value>Fiche Type:</value>
  </data>
  <data name="InputTransaction" xml:space="preserve">
    <value>Income</value>
  </data>
  <data name="LineAmountLineLabel" xml:space="preserve">
    <value>Line Amount:</value>
  </data>
  <data name="LineDescriptionLineLabel" xml:space="preserve">
    <value>Line Description:</value>
  </data>
  <data name="LineGridLineAmount" xml:space="preserve">
    <value>LINE PRICE</value>
  </data>
  <data name="LineGridPartyNo" xml:space="preserve">
    <value>PARTY NO</value>
  </data>
  <data name="LineGridProductCode" xml:space="preserve">
    <value>PRODUCT CODE</value>
  </data>
  <data name="LineGridProductName" xml:space="preserve">
    <value>PRODUCT NAME</value>
  </data>
  <data name="LineGridQuantity" xml:space="preserve">
    <value>QUANTITY</value>
  </data>
  <data name="LineGridUnitPrice" xml:space="preserve">
    <value>UNIT PRICE</value>
  </data>
  <data name="LineGridUnitSetCode" xml:space="preserve">
    <value>UNIT SET</value>
  </data>
  <data name="LinkedModuleProductionManagement" xml:space="preserve">
    <value>Production Management</value>
  </data>
  <data name="LinkedModulePurchaseManagement" xml:space="preserve">
    <value>Purchase Management</value>
  </data>
  <data name="LoadingCaption" xml:space="preserve">
    <value>Please wait..</value>
  </data>
  <data name="LoadingText" xml:space="preserve">
    <value>The records are loading..</value>
  </data>
  <data name="MessagePopupInformationDescriptionBase" xml:space="preserve">
    <value>The record you selected is using by {0}.</value>
  </data>
  <data name="MessagePopupInformationTitleBase" xml:space="preserve">
    <value>Information</value>
  </data>
  <data name="NetAmount" xml:space="preserve">
    <value>NET AMOUNT</value>
  </data>
  <data name="NetAmountLabel" xml:space="preserve">
    <value>Net Amount:</value>
  </data>
  <data name="OutputTransaction" xml:space="preserve">
    <value>Outgoing</value>
  </data>
  <data name="PartyNoLabel" xml:space="preserve">
    <value>Party No:</value>
  </data>
  <data name="ProcessAdd" xml:space="preserve">
    <value>Add</value>
  </data>
  <data name="ProcessDelete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="ProcessRefresh" xml:space="preserve">
    <value>Change</value>
  </data>
  <data name="ProductCodeLineLabel" xml:space="preserve">
    <value>Product Code:</value>
  </data>
  <data name="ProductionDateReferanceLabel" xml:space="preserve">
    <value>Production Date Referance:</value>
  </data>
  <data name="ProductionOrderCodeLabel" xml:space="preserve">
    <value>Production Order Receipt Nr:</value>
  </data>
  <data name="ProductionOrderModalGridFicheNo" xml:space="preserve">
    <value>PRODUCTION ORDER RECEIPT NR</value>
  </data>
  <data name="ProductionOrderModalGridFinishedProductCode" xml:space="preserve">
    <value>FINISHED PRODUCT CODE</value>
  </data>
  <data name="ProductionOrderModalGridPlannedQuantity" xml:space="preserve">
    <value>PLANNED QUANTITY</value>
  </data>
  <data name="ProductionOrderModalGridProducedQuantity" xml:space="preserve">
    <value>PRODUCED QUANTITY</value>
  </data>
  <data name="ProductionOrdersModalTitle" xml:space="preserve">
    <value>Production Orders</value>
  </data>
  <data name="ProductModalGridCode" xml:space="preserve">
    <value>PRODUCT CODE</value>
  </data>
  <data name="ProductModalGridName" xml:space="preserve">
    <value>PRODUCT NAME</value>
  </data>
  <data name="ProductModalTitle" xml:space="preserve">
    <value>Products</value>
  </data>
  <data name="ProductNameLineLabel" xml:space="preserve">
    <value>Product Name:</value>
  </data>
  <data name="QuantityLineLabel" xml:space="preserve">
    <value>Quantity:</value>
  </data>
  <data name="SaveButton" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="SpecialCodeLabel" xml:space="preserve">
    <value>Special Code:</value>
  </data>
  <data name="StockFicheContextAdd" xml:space="preserve">
    <value>Add</value>
  </data>
  <data name="StockFicheContextAddConsume" xml:space="preserve">
    <value>Consumption Fiche</value>
  </data>
  <data name="StockFicheContextAddProductionIncome" xml:space="preserve">
    <value>Production Input Fiche</value>
  </data>
  <data name="StockFicheContextAddReserved" xml:space="preserve">
    <value>Reserve Fiche</value>
  </data>
  <data name="StockFicheContextAddStockIncome" xml:space="preserve">
    <value>Stock Input Fiche</value>
  </data>
  <data name="StockFicheContextAddStockOutput" xml:space="preserve">
    <value>Stock Output Fiche</value>
  </data>
  <data name="StockFicheContextAddWarehouse" xml:space="preserve">
    <value>Shipping to Warehouse Fiche</value>
  </data>
  <data name="StockFicheContextAddWastege" xml:space="preserve">
    <value>Wastage Fiche</value>
  </data>
  <data name="StockFicheContextChange" xml:space="preserve">
    <value>Change</value>
  </data>
  <data name="StockFicheContextDelete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="StockFicheContextRefresh" xml:space="preserve">
    <value>Refresh</value>
  </data>
  <data name="StockFicheLineContextAdd" xml:space="preserve">
    <value>Add</value>
  </data>
  <data name="StockFicheLineContextChange" xml:space="preserve">
    <value>Change</value>
  </data>
  <data name="StockFicheLineContextDelete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="StockFicheLineContextRefresh" xml:space="preserve">
    <value>Refresh</value>
  </data>
  <data name="StockFichesChildMenu" xml:space="preserve">
    <value>Stock Fiches</value>
  </data>
  <data name="StockFichesGeneralConAdd" xml:space="preserve">
    <value>Add</value>
  </data>
  <data name="Time_Label" xml:space="preserve">
    <value>Hour:</value>
  </data>
  <data name="TransactionExchangeLabel" xml:space="preserve">
    <value>Transaction Exchange Currency:</value>
  </data>
  <data name="TransactionExchangeLineAmountLabel" xml:space="preserve">
    <value>Transaction Exchange Rate Line Amount:</value>
  </data>
  <data name="TransactionExchangeUnitPriceLabel" xml:space="preserve">
    <value>Transaction Exchange Rate Unit Price:</value>
  </data>
  <data name="UIConfirmationPopupMessageBase" xml:space="preserve">
    <value>The stock fiche you selected will be permanently deleted.</value>
  </data>
  <data name="UIConfirmationPopupMessageLineBase" xml:space="preserve">
    <value>The line you selected will be permanently deleted.</value>
  </data>
  <data name="UIConfirmationPopupTitleBase" xml:space="preserve">
    <value>Attention</value>
  </data>
  <data name="UICurrentMenu" xml:space="preserve">
    <value>Stock Fiches</value>
  </data>
  <data name="UIExportFileName" xml:space="preserve">
    <value>StockFiches</value>
  </data>
  <data name="UIExportTitle" xml:space="preserve">
    <value>Stock Fiches</value>
  </data>
  <data name="UIPreviousMenu" xml:space="preserve">
    <value>Inventory Management &gt;Transactions</value>
  </data>
  <data name="UIWarningFicheTypeMessageBase" xml:space="preserve">
    <value>It is not possible to add a line without selecting a fiche type.</value>
  </data>
  <data name="UIWarningFicheTypeTitleBase" xml:space="preserve">
    <value>Warning</value>
  </data>
  <data name="UIWarningPopupMessageBase1" xml:space="preserve">
    <value>It is not possible to save lines without selecting the unit set.</value>
  </data>
  <data name="UIWarningPopupMessageBase2" xml:space="preserve">
    <value>It is not possible to save lines without selecting the product.</value>
  </data>
  <data name="UIWarningPopupMessageBase3" xml:space="preserve">
    <value>It is not possible to save lines when quantity is equal to 0.</value>
  </data>
  <data name="UIWarningPopupTitleBase" xml:space="preserve">
    <value>Warning</value>
  </data>
  <data name="UnitPriceLineLabel" xml:space="preserve">
    <value>Unit Price:</value>
  </data>
  <data name="UnitSetCodeLineLabel" xml:space="preserve">
    <value>Unit Set Code:</value>
  </data>
  <data name="UnitSetModalGridCode" xml:space="preserve">
    <value>UNIT SET CODE</value>
  </data>
  <data name="UnitSetModalGridName" xml:space="preserve">
    <value>UNIT SET NAME</value>
  </data>
  <data name="UnitSetModalTitle" xml:space="preserve">
    <value>Unit Sets</value>
  </data>
  <data name="ValidatorExchangeRateEmpty" xml:space="preserve">
    <value>Please enter the exchange rate.</value>
  </data>
  <data name="ValidatorExchangeRateMin" xml:space="preserve">
    <value>The exchange rate must be at least 1.</value>
  </data>
  <data name="WarehouseCode" xml:space="preserve">
    <value>WAREHOUSE CODE</value>
  </data>
  <data name="WarehouseCodeLabel" xml:space="preserve">
    <value>Warehouse Code:</value>
  </data>
  <data name="WarehouseModalGridCode" xml:space="preserve">
    <value>WAREHOUSE CODE</value>
  </data>
  <data name="WarehouseModalGridName" xml:space="preserve">
    <value>WAREHOUSE NAME</value>
  </data>
  <data name="WarehouseModalTitle" xml:space="preserve">
    <value>Warehouses</value>
  </data>
</root>