@page "/sales-orders"
@layout MainLayout



@inherits BaseListPage<SelectSalesOrderDto, ListSalesOrderDto, CreateSalesOrderDto, UpdateSalesOrderDto, ListSalesOrderParameterDto>

@inject IStringLocalizer<SalesOrdersResource> L
@inject ISalesOrdersAppService SalesOrdersAppService
@inject ICurrentAccountCardsAppService CurrentAccountCardsAppService
@inject IBranchesAppService BranchesAppService
@inject IWarehousesAppService WarehousesAppService
@inject ICurrenciesAppService CurrenciesAppService
@inject IProductsAppService ProductsAppService
@inject IUnitSetsAppService UnitSetsAppService
@inject IPaymentPlansAppService PaymentPlansAppService
@inject IBillsofMaterialsAppService BillsofMaterialsAppService
@inject IShippingAdressesAppService ShippingAdressesAppService
@inject IStockManagementParametersAppService StockManagementParametersAppService
@inject IFicheNumbersAppService FicheNumbersAppService
@inject IProductionOrdersAppService ProductionOrdersAppService
@inject IRoutesAppService RoutesAppService
@inject IUserPermissionsAppService UserPermissionsAppService
@inject IMenusAppService MenusAppService
@inject IGetSQLDateAppService GetSQLDateAppService
@inject IExchangeRatesAppService ExchangeRatesService
@inject ISalesManagementParametersAppService SalesManagementParametersAppService
@inject ISalesPricesAppService SalesPricesAppService
@inject IGrandTotalStockMovementsAppService GrandTotalStockMovementsAppService
@inject ITechnicalDrawingsAppService TechnicalDrawingsAppService
@inject IStockFichesAppService StockFichesAppService

@if (!base.IsLoaded)
{
    <CircleLoading Caption="@base.LoadingCaption" Text="@base.LoadingText" />
}
else
{
    <DevGridLayout ColumnCount="1" RowCount="3" RowHeights="@RowHeights("*")">
        <GridLayoutItems>
            <DxGridLayoutItem Row="0" Column="0" ColumnSpan="1">
                <Template>
                    <SfCard class="TSIListPageTitleCard">
                        <CardContent>
                            <TsiBreadCrumb PreviousMenus="@L["UIPreviousMenu"]" CurrentMenu="@L["UICurrentMenu"]" />
                        </CardContent>
                        <CardFooter>
                        </CardFooter>
                    </SfCard>
                </Template>
            </DxGridLayoutItem>
            <DxGridLayoutItem Row="2" Column="0" ColumnSpan="1">
                <Template>
                    <SfCard class="TSIGridCards">

                        <CardContent>
                            <SfGrid ID="Grid" @ref="_grid" AllowPdfExport=true ColumnMenuItems=@MenuItems ShowColumnMenu="true" DataSource="@ListDataSource" AllowPaging="false" AllowFiltering="true" AllowReordering="true" AllowResizing="true" AllowGrouping="true" AllowExcelExport="true" AllowSelection="true" ShowColumnChooser="true" GridLines="GridLine.Both" AllowSorting="true" Height="100%" Width="100%" class="GridZebra" ContextMenuItems="@MainGridContextMenu" Toolbar=@GridToolbarItems>
                                <GridGroupSettings ShowGroupedColumn="true"></GridGroupSettings>

                                <GridEvents ContextMenuItemClicked="@MainContextMenuClick" OnToolbarClick="@ToolbarClickHandler" TValue="ListSalesOrderDto"></GridEvents>
                                <GridEditSettings AllowAdding="false" AllowEditing="false" AllowDeleting="false" Mode="Syncfusion.Blazor.Grids.EditMode.Normal"></GridEditSettings>
                                <GridFilterSettings Type="Syncfusion.Blazor.Grids.FilterType.Menu"></GridFilterSettings>
                                <GridPageSettings PageSizes="true"></GridPageSettings>
                                <GridSelectionSettings Type="Syncfusion.Blazor.Grids.SelectionType.Single"></GridSelectionSettings>
                                <GridColumns>
                                    <GridColumn Field=@nameof(ListSalesOrderDto.FicheNo) HeaderText="@L["FicheNo"]" TextAlign="TextAlign.Center" Width="220"></GridColumn>
                                    <GridColumn Field=@nameof(ListSalesOrderDto.Date_) Format="dd.MM.yyyy" Type="ColumnType.DateTime" HeaderText="@L["Date_"]" TextAlign="TextAlign.Center" Width="220"></GridColumn>

                                    <GridColumn Field=@nameof(ListSalesOrderDto.CurrentAccountCardCode) HeaderText="@L["CurrentAccountCardCode"]" TextAlign="TextAlign.Center" Width="220"></GridColumn>
                                    <GridColumn Field=@nameof(ListSalesOrderDto.CurrentAccountCardName) HeaderText="@L["CurrentAccountCardName"]" TextAlign="TextAlign.Center" Width="220"></GridColumn>

                                    <GridColumn Field=@nameof(ListSalesOrderDto.CustomerCode) HeaderText="@L["CustomerCode"]" TextAlign="TextAlign.Center" Width="220"></GridColumn>
                                    <GridColumn Field=@nameof(ListSalesOrderDto.CurrencyCode) HeaderText="@L["CurrencyCode"]" TextAlign="TextAlign.Center" Width="220"></GridColumn>
                                    <GridColumn Field=@nameof(ListSalesOrderDto.PaymentPlanName) Type="ColumnType.Number" HeaderText="@L["PaymentPlanName"]" TextAlign="TextAlign.Center" Width="220"></GridColumn>
                                    <GridColumn Field=@nameof(ListSalesOrderDto.BranchCode) HeaderText="@L["BranchCode"]" TextAlign="TextAlign.Center" Width="220"></GridColumn>
                                    <GridColumn Field=@nameof(ListSalesOrderDto.WarehouseCode) HeaderText="@L["WarehouseCode"]" TextAlign="TextAlign.Center" Width="220"></GridColumn>


                                </GridColumns>
                            </SfGrid>
                        </CardContent>
                        <CardFooter>
                        </CardFooter>
                    </SfCard>
                </Template>
            </DxGridLayoutItem>
        </GridLayoutItems>
    </DevGridLayout>

    <DxPopup @bind-Visible="base.EditPageVisible"
             ShowFooter="true"
             CloseOnEscape="false"
             CloseOnOutsideClick="false"
             HeaderText="@L["EditModalTitle"]"
             Width="48%"
             Height="93%"
             MinWidth="925px"
             MinHeight="850px"
             HeaderCssClass="HeaderTitleCss"
             Showing="CrudModalShowing"
             Closing="CrudModalClosing">

        <BodyTemplate>
            <DxGridLayout CssClass="TSIGridLayout">

                <Rows>
                    <DxGridLayoutRow Height="10%" />
                    <DxGridLayoutRow Height="9%" />
                    <DxGridLayoutRow Height="9%" />
                    <DxGridLayoutRow Height="9%" />
                    <DxGridLayoutRow Height="9%" />
                    <DxGridLayoutRow Height="23%" />
                    <DxGridLayoutRow Height="9%" />
                    <DxGridLayoutRow Height="9%" />
                    <DxGridLayoutRow Height="9%" />
                </Rows>

                <Columns>
                    <DxGridLayoutColumn Width="3%" />
                    <DxGridLayoutColumn Width="21%" />
                    <DxGridLayoutColumn Width="3%" />
                    <DxGridLayoutColumn Width="21%" />
                    <DxGridLayoutColumn Width="3%" />
                    <DxGridLayoutColumn Width="21%" />
                    <DxGridLayoutColumn Width="3%" />
                    <DxGridLayoutColumn Width="21%" />
                    <DxGridLayoutColumn Width="3%" />
                </Columns>
                <Items>
                    <br />
                    <DxGridLayoutItem Row="0" Column="1">
                        <Template>
                            <label class="TSIModalLabel"><strong>@L["FicheNoLabel"] </strong></label>
                            @* <SfTextBox CssClass="TSITxtBox" @bind-Value="DataSource.FicheNo"></SfTextBox> *@

                            <SfTextBox @ref="@CodeButtonEdit" Created="@CodeOnCreateIcon" @bind-Value="DataSource.FicheNo" ShowClearButton=true></SfTextBox>
                        </Template>
                    </DxGridLayoutItem>

                    <DxGridLayoutItem Row="0" Column="3">
                        <Template>
                            <label class="TSIModalLabel"><strong>@L["CurrentAccountCardCodeLabel"] </strong></label>
                            <SfTextBox @ref="@CurrentAccountCardsCodeButtonEdit" Created="@CurrentAccountCardsCodeOnCreateIcon" @bind-Value="DataSource.CurrentAccountCardCode" ShowClearButton=true ValueChange="CurrentAccountCardsOnValueChange"></SfTextBox>
                        </Template>
                    </DxGridLayoutItem>

                    <DxGridLayoutItem Row="0" Column="5">
                        <Template>
                            <label class="TSIModalLabel"><strong>@L["CurrentAccountCardCustomerCodeLabel"] </strong></label><br />
                            <SfTextBox Enabled="false" @bind-Value="@DataSource.CustomerCode"></SfTextBox>
                        </Template>
                    </DxGridLayoutItem>

                    <DxGridLayoutItem Row="0" RowSpan="1" Column="7">
                        <Template>
                            <label class="TSIModalLabel"><strong>@L["Description_Label"]</strong></label><br />
                            <SfTextBox CssClass="TSIMemoBox120" Multiline=false @bind-Value="@DataSource.Description_"></SfTextBox>
                        </Template>
                    </DxGridLayoutItem>

                    <DxGridLayoutItem Row="1" Column="1">
                        <Template>
                            <label class="TSIModalLabel"><strong>@L["Date_Label"] </strong></label><br />
                            <SfDatePicker TValue="DateTime" Value="@DataSource.Date_" Max=@MaxDate>

                                <DatePickerEvents TValue="DateTime" ValueChange="DateValueChangeHandler"></DatePickerEvents>

                            </SfDatePicker>
                        </Template>
                    </DxGridLayoutItem>

                    <DxGridLayoutItem Row="1" Column="3">
                        <Template>
                            <label class="TSIModalLabel"><strong>@L["CurrentAccountCardNameLabel"] </strong></label>
                            <SfTextBox @ref="@CurrentAccountCardsNameButtonEdit" Created="@CurrentAccountCardsNameOnCreateIcon" @bind-Value="DataSource.CurrentAccountCardName" ShowClearButton=true ValueChange="CurrentAccountCardsOnValueChange"></SfTextBox>
                        </Template>
                    </DxGridLayoutItem>

                    <DxGridLayoutItem Row="1" Column="5">
                        <Template>
                            <label class="TSIModalLabel"><strong>@L["SpecialCodeLabel"] </strong></label>
                            <SfTextBox CssClass="TSITxtBox" @bind-Value="DataSource.SpecialCode"></SfTextBox>
                        </Template>
                    </DxGridLayoutItem>

                    <DxGridLayoutItem Row="2" Column="1">
                        <Template>
                            <label class="TSIModalLabel"><strong>@L["BranchCodeLabel"] </strong></label>

                            <SfTextBox @ref="@BranchesButtonEdit" Created="@BranchesOnCreateIcon" @bind-Value="DataSource.BranchCode" ShowClearButton=true ValueChange="BranchesOnValueChange"></SfTextBox>
                        </Template>
                    </DxGridLayoutItem>


                    <DxGridLayoutItem Row="2" Column="3">
                        <Template>
                            <label class="TSIModalLabel"><strong>@L["ShippingAdressCodeLabel"] </strong></label><br />
                            <SfTextBox Enabled=@ShippingAdressEnable @ref="@ShippingAdressesButtonEdit" Created="@ShippingAdressesOnCreateIcon" @bind-Value="DataSource.ShippingAdressCode" ShowClearButton=true ValueChange="ShippingAdressesOnValueChange"></SfTextBox>
                        </Template>
                    </DxGridLayoutItem>

                    <DxGridLayoutItem Row="2" Column="5">
                        <Template>
                            <label class="TSIModalLabel"><strong>@L["CurrencyCodeLabel"] </strong></label><br />

                            <SfTextBox @ref="@CurrenciesButtonEdit" Created="@CurrenciesOnCreateIcon" @bind-Value="DataSource.CurrencyCode" ShowClearButton=true ValueChange="CurrenciesOnValueChange"></SfTextBox>

                        </Template>
                    </DxGridLayoutItem>

                    <DxGridLayoutItem Row="2" Column="7">
                        <Template>
                            <label class="TSIModalLabel"><strong>@L["ExchangeRateLabel"] </strong></label>
                            <SfNumericTextBox CssClass="TSITxtBox" Min="0" TValue="decimal" @bind-Value="DataSource.ExchangeRate"></SfNumericTextBox>
                        </Template>
                    </DxGridLayoutItem>

                    <DxGridLayoutItem Row="3" Column="1">
                        <Template>
                            <label class="TSIModalLabel"><strong>@L["WarehouseCodeLabel"] </strong></label><br />
                            <SfTextBox @ref="@WarehousesButtonEdit" Created="@WarehousesOnCreateIcon" @bind-Value="DataSource.WarehouseCode" ShowClearButton=true ValueChange="WarehousesOnValueChange"></SfTextBox>
                        </Template>
                    </DxGridLayoutItem>

                    <DxGridLayoutItem Row="3" Column="3">
                        <Template>
                            <label class="TSIModalLabel"><strong>@L["PaymentPlanNameLabel"]</strong></label>
                            <SfTextBox @ref="@PaymentPlansButtonEdit" Created="@PaymentPlansOnCreateIcon" @bind-Value="DataSource.PaymentPlanName" ShowClearButton=true ValueChange="PaymentPlansOnValueChange"></SfTextBox>
                        </Template>
                    </DxGridLayoutItem>

                    <DxGridLayoutItem Row="3" Column="5">
                        <Template>
                            <label class="TSIModalLabel"><strong>@L["TransactionExchangeLabel"] </strong></label>
                            <SfTextBox @ref="@TransactionExchangeCurrenciesButtonEdit" Created="@TransactionExchangeCurrenciesOnCreateIcon" @bind-Value="DataSource.TransactionExchangeCurrencyCode" ShowClearButton=true ValueChange="TransactionExchangeCurrenciesOnValueChange"></SfTextBox>
                        </Template>
                    </DxGridLayoutItem>

                    <DxGridLayoutItem Row="3" Column="7">
                        <Template>
                            <label class="TSIModalLabel"><strong>@L["PricingCurrencyLabel"] </strong></label><br />
                            <SfDropDownList TItem="SelectSalesOrderDto" TValue="PricingCurrencyEnum" PopupHeight="230px" @bind-Value="@DataSource.PricingCurrency" DataSource="@PricingCurrencyList" ShowClearButton=true>
                                <DropDownListEvents TItem="SelectSalesOrderDto" TValue="PricingCurrencyEnum" ValueChange="@PricingCurrencyValueChangeHandler"></DropDownListEvents>
                                <DropDownListFieldSettings Text="PricingCurrencyName" Value="PricingCurrency"></DropDownListFieldSettings>
                            </SfDropDownList>
                        </Template>
                    </DxGridLayoutItem>

                    <DxGridLayoutItem Row="4" Column="1">
                        <Template>
                            <label class="TSIModalLabel"><strong>@L["CustomerOrderNrLabel"] </strong></label><br />
                            <SfTextBox @bind-Value="@DataSource.CustomerOrderNr"></SfTextBox>
                        </Template>
                    </DxGridLayoutItem>
                    <DxGridLayoutItem Row="4" Column="3">
                        <Template>
                            <label class="TSIModalLabel"><strong>@L["CustomerRequestedDateLabel"] </strong></label>
                            <SfDatePicker @bind-Value="@DataSource.CustomerRequestedDate"></SfDatePicker>
                        </Template>
                    </DxGridLayoutItem>

                    <DxGridLayoutItem Row="5" Column="1" ColumnSpan="7">
                        <Template>
                            <SfGrid @ref=_LineGrid ID="LineGrid" ColumnMenuItems=@MenuItems ShowColumnMenu="true" DataSource="@GridLineList" AllowPaging="false" AllowFiltering="false" AllowReordering="true" AllowResizing="true" AllowGrouping="false" AllowExcelExport="false" AllowSelection="true" AllowSorting="true" Height="100%" Width="100%" class="GridZebra" ContextMenuItems="@LineGridContextMenu">
                                <GridEvents ContextMenuItemClicked="@OnListContextMenuClick" TValue="SelectSalesOrderLinesDto"></GridEvents>
                                <GridGroupSettings ShowGroupedColumn="true"></GridGroupSettings>

                                <GridEditSettings AllowAdding="false" AllowEditing="false" AllowDeleting="false" Mode="Syncfusion.Blazor.Grids.EditMode.Normal"></GridEditSettings>
                                <GridFilterSettings Type="Syncfusion.Blazor.Grids.FilterType.Menu"></GridFilterSettings>
                                <GridSelectionSettings Type="Syncfusion.Blazor.Grids.SelectionType.Multiple"></GridSelectionSettings>
                                <GridColumns>
                                    <GridColumn Field=@nameof(SelectSalesOrderLinesDto.ProductCode) HeaderText="@L["LineGridProductCode"]" TextAlign="TextAlign.Center" Width="220"></GridColumn>
                                    <GridColumn Field=@nameof(SelectSalesOrderLinesDto.ProductName) HeaderText="@L["LineGridProductName"]" TextAlign="TextAlign.Center" Width="220"></GridColumn>
                                    <GridColumn Field=@nameof(SelectSalesOrderLinesDto.UnitSetCode) HeaderText="@L["LineGridUnitSetCode"]" TextAlign="TextAlign.Center" Width="220"></GridColumn>
                                    <GridColumn Field=@nameof(SelectSalesOrderLinesDto.Quantity) Format="N2" Type="ColumnType.Number" HeaderText="@L["LineGridQuantity"]" TextAlign="TextAlign.Center" Width="220"></GridColumn>
                                    <GridColumn Field=@nameof(SelectSalesOrderLinesDto.UnitPrice) Format="N2" Type="ColumnType.Number" HeaderText="@L["LineGridUnitPrice"]" TextAlign="TextAlign.Center" Width="220" Visible=@LoginedUserService.SalesManagementShowAmountsChildMenu></GridColumn>
                                    <GridColumn Field=@nameof(SelectSalesOrderLinesDto.LineAmount) Format="N2" Type="ColumnType.Number" HeaderText="@L["LineGridLineAmount"]" TextAlign="TextAlign.Center" Width="220" Visible=@LoginedUserService.SalesManagementShowAmountsChildMenu></GridColumn>
                                </GridColumns>
                            </SfGrid>
                        </Template>
                    </DxGridLayoutItem>

                    @{
                        if (LoginedUserService.SalesManagementShowAmountsChildMenu)
                        {

                            <DxGridLayoutItem Row="6" Column="1">
                                <Template>
                                    <br />
                                    <label class="TSIModalLabel"><strong>@L["GrossAmountLabel"] </strong></label>
                                    <SfNumericTextBox Min="0" TValue="decimal" CssClass="TSITxtBox" @bind-Value="DataSource.GrossAmount" Enabled=false></SfNumericTextBox>
                                </Template>
                            </DxGridLayoutItem>

                            <DxGridLayoutItem Row="6" Column="3">
                                <Template>
                                    <br />
                                    <label class="TSIModalLabel"><strong>@L["TotalDiscountAmountLabel"] </strong></label>
                                    <SfNumericTextBox Min="0" TValue="decimal" @bind-Value="DataSource.TotalDiscountAmount" Enabled=false></SfNumericTextBox>
                                </Template>
                            </DxGridLayoutItem>

                            <DxGridLayoutItem Row="6" Column="5">
                                <Template>
                                    <br />
                                    <label class="TSIModalLabel"><strong>@L["NetAmountLabel"] </strong></label>
                                    <SfNumericTextBox Min="0" TValue="decimal" CssClass="TSITxtBox" @bind-Value="DataSource.NetAmount" Enabled=false></SfNumericTextBox>
                                </Template>
                            </DxGridLayoutItem>

                            <DxGridLayoutItem Row="6" Column="7">
                                <Template>
                                    <br />
                                    <label class="TSIModalLabel"><strong>@L["TotalVatExcludedAmountLabel"] </strong></label>
                                    <SfNumericTextBox Min="0" TValue="decimal" CssClass="TSITxtBox" @bind-Value="DataSource.TotalVatExcludedAmount" Enabled=false></SfNumericTextBox>
                                </Template>
                            </DxGridLayoutItem>

                            <DxGridLayoutItem Row="7" Column="1">
                                <Template>
                                    <br />
                                    <label class="TSIModalLabel"><strong>@L["TransactionExchangeGrossAmountLabel"] </strong></label>
                                    <SfNumericTextBox Min="0" TValue="decimal" CssClass="TSITxtBox" @bind-Value="DataSource.TransactionExchangeGrossAmount" Enabled=false></SfNumericTextBox>
                                </Template>
                            </DxGridLayoutItem>

                            <DxGridLayoutItem Row="7" Column="3">
                                <Template>
                                    <br />
                                    <label class="TSIModalLabel"><strong>@L["TransactionExchangeTotalDiscountAmountLabel"] </strong></label>
                                    <SfNumericTextBox Min="0" TValue="decimal" @bind-Value="DataSource.TransactionExchangeTotalDiscountAmount" Enabled=false></SfNumericTextBox>
                                </Template>
                            </DxGridLayoutItem>
                            <DxGridLayoutItem Row="7" Column="5">
                                <Template>
                                    <br />
                                    <label class="TSIModalLabel"><strong>@L["TransactionExchangeNetAmountLabel"] </strong></label>
                                    <SfNumericTextBox Min="0" TValue="decimal" CssClass="TSITxtBox" @bind-Value="DataSource.TransactionExchangeNetAmount" Enabled=false></SfNumericTextBox>
                                </Template>
                            </DxGridLayoutItem>

                            <DxGridLayoutItem Row="7" Column="7">
                                <Template>
                                    <br />
                                    <label class="TSIModalLabel"><strong>@L["TransactionExchangeTotalVatExcludedAmountLabel"] </strong></label>
                                    <SfNumericTextBox Min="0" TValue="decimal" CssClass="TSITxtBox" @bind-Value="DataSource.TransactionExchangeTotalVatExcludedAmount" Enabled=false></SfNumericTextBox>
                                </Template>
                            </DxGridLayoutItem>
                            <DxGridLayoutItem Row="8" Column="1">
                                <Template>
                                    <br />
                                    <label class="TSIModalLabel"><strong>@L["TotalVatAmountLabel"] </strong></label>
                                    <SfNumericTextBox Min="0" TValue="decimal" CssClass="TSITxtBox" @bind-Value="DataSource.TotalVatAmount" Enabled=false></SfNumericTextBox>
                                </Template>
                            </DxGridLayoutItem>

                            <DxGridLayoutItem Row="8" Column="3">
                                <Template>
                                    <br />
                                    <label class="TSIModalLabel"><strong>@L["TransactionExchangeTotalVatAmountLabel"]</strong></label>
                                    <SfNumericTextBox Min="0" TValue="decimal" CssClass="TSITxtBox" @bind-Value="DataSource.TransactionExchangeTotalVatAmount" Enabled=false></SfNumericTextBox>
                                </Template>
                            </DxGridLayoutItem>
                        }
                    }
                </Items>
            </DxGridLayout>
        </BodyTemplate>
        <FooterContentTemplate>
            <SfButton CssClass="TSISaveButton" OnClick="OnSubmit"><SfIcon Size="IconSize.Medium" Name="IconName.Save"></SfIcon>&nbsp;@L["SaveButton"]</SfButton>
            <SfButton CssClass="TSICancelButton" OnClick="HideEditPage"><SfIcon Size="IconSize.Medium" Name="IconName.Undo"></SfIcon>&nbsp;@L["CloseButton"]</SfButton>
        </FooterContentTemplate>
    </DxPopup>

    <DxPopup @bind-Visible="LineCrudPopup"
             ShowFooter="true"
             CloseOnEscape="false"
             CloseOnOutsideClick="false"
             HeaderText="@L["EditLineModalTitle"]"
             Width="64%"
             Height="65%"
             MinWidth="1100px"
             MinHeight="700px"
             HeaderCssClass="HeaderTitleCss">

        <BodyTemplate>
            <DxGridLayout CssClass="TSIGridLayout">

                <Rows>
                    <DxGridLayoutRow Height="11%" />
                    <DxGridLayoutRow Height="11%" />
                    <DxGridLayoutRow Height="11%" />
                    <DxGridLayoutRow Height="11%" />
                    <DxGridLayoutRow Height="11%" />
                    <DxGridLayoutRow Height="11%" />
                    <DxGridLayoutRow Height="11%" />
                    <DxGridLayoutRow Height="11%" />
                </Rows>

                <Columns>
                    <DxGridLayoutColumn Width="4%" />
                    <DxGridLayoutColumn Width="28%" />
                    <DxGridLayoutColumn Width="4%" />
                    <DxGridLayoutColumn Width="28%" />
                    <DxGridLayoutColumn Width="4%" />
                    <DxGridLayoutColumn Width="28%" />
                </Columns>

                <Items>
                    <br />
                    <DxGridLayoutItem Row="0" Column="1">
                        <Template>
                            <label class="TSIModalLabel"><strong>@L["ProductCodeLineLabel"] </strong></label>
                            <SfTextBox @ref="@ProductsCodeButtonEdit" Created="@ProductsCodeOnCreateIcon" @bind-Value="LineDataSource.ProductCode" ShowClearButton=true ValueChange="ProductsOnValueChange"></SfTextBox>
                        </Template>
                    </DxGridLayoutItem>

                    <DxGridLayoutItem Row="1" Column="1">
                        <Template>
                            <label class="TSIModalLabel"><strong>@L["ProductNameLineLabel"] </strong></label><br />
                            <SfTextBox @ref="@ProductsNameButtonEdit" Created="@ProductsNameOnCreateIcon" @bind-Value="LineDataSource.ProductName" ShowClearButton=true ValueChange="ProductsOnValueChange"></SfTextBox>
                        </Template>
                    </DxGridLayoutItem>

                    <DxGridLayoutItem Row="2" Column="1">
                        <Template>
                            <label class="TSIModalLabel"><strong>@L["UnitSetCodeLineLabel"] </strong></label><br />

                            <SfTextBox @ref="@UnitSetsButtonEdit" Created="@UnitSetsOnCreateIcon" @bind-Value="LineDataSource.UnitSetCode" ShowClearButton=true ValueChange="UnitSetsOnValueChange"></SfTextBox>
                        </Template>
                    </DxGridLayoutItem>

                    <DxGridLayoutItem Row="3" Column="1">
                        <Template>
                            <label class="TSIModalLabel"><strong>@L["LineDescriptionLineLabel"] </strong></label><br />
                            <SfTextBox @bind-Value="LineDataSource.LineDescription" Multiline=true></SfTextBox>
                        </Template>
                    </DxGridLayoutItem>

                    @{
                        if (LoginedUserService.PurchaseManagementShowAmountsChildMenu)
                        {

                            <DxGridLayoutItem Row="0" Column="3">
                                <Template>
                                    <label class="TSIModalLabel"><strong>@L["UnitPriceLineLabel"] </strong></label>
                                    <SfNumericTextBox Min="0" TValue="decimal" @bind-Value="LineDataSource.UnitPrice" Enabled=@UnitPriceEnabled OnChange="LineCalculate">


                                    </SfNumericTextBox>
                                </Template>
                            </DxGridLayoutItem>

                            <DxGridLayoutItem Row="1" Column="3">
                                <Template>
                                    <label class="TSIModalLabel"><strong>@L["QuantityLineLabel"] </strong></label>
                                    <SfNumericTextBox TValue="decimal" @bind-Value="LineDataSource.Quantity" OnChange="LineCalculate"></SfNumericTextBox>
                                </Template>
                            </DxGridLayoutItem>

                            <DxGridLayoutItem Row="2" Column="3">
                                <Template>
                                    <label class="TSIModalLabel"><strong>@L["VATrateLineLabel"] </strong></label>
                                    <SfNumericTextBox Min="0" @bind-Value="LineDataSource.VATrate" OnChange="LineCalculate"></SfNumericTextBox>
                                </Template>
                            </DxGridLayoutItem>

                            <DxGridLayoutItem Row="3" Column="3">
                                <Template>
                                    <label class="TSIModalLabel"><strong>@L["VATamountLineLabel"] </strong></label>
                                    <SfNumericTextBox Min="0" TValue="decimal" @bind-Value="LineDataSource.VATamount" Enabled=false></SfNumericTextBox>
                                </Template>
                            </DxGridLayoutItem>

                            <DxGridLayoutItem Row="4" Column="3">
                                <Template>
                                    <label class="TSIModalLabel"><strong>@L["DiscountRateLineLabel"] </strong></label>
                                    <SfNumericTextBox Min="0" TValue="decimal" @bind-Value="LineDataSource.DiscountRate" Enabled=false></SfNumericTextBox>
                                </Template>
                            </DxGridLayoutItem>

                            <DxGridLayoutItem Row="5" Column="3">
                                <Template>
                                    <label class="TSIModalLabel"><strong>@L["DiscountAmountLineLabel"]</strong></label>
                                    <SfNumericTextBox Min="0" TValue="decimal" @bind-Value="LineDataSource.DiscountAmount" Enabled=@DiscountAmountEnabled OnChange="LineCalculate"></SfNumericTextBox>
                                </Template>
                            </DxGridLayoutItem>

                            <DxGridLayoutItem Row="6" Column="3">
                                <Template>
                                    <label class="TSIModalLabel"><strong>@L["LineAmountLineLabel"] </strong></label>
                                    <SfNumericTextBox Min="0" TValue="decimal" @bind-Value="LineDataSource.LineAmount" Enabled=@LineAmountEnabled style="font-size:16px; font-weight:bold;"></SfNumericTextBox>
                                </Template>
                            </DxGridLayoutItem>

                            <DxGridLayoutItem Row="7" Column="3">
                                <Template>
                                    <label class="TSIModalLabel"><strong>@L["LineTotalAmountLineLabel"] </strong></label>
                                    <SfNumericTextBox Min="0" TValue="decimal" @bind-Value="LineDataSource.LineTotalAmount" Enabled=@LineTotalAmountEnabled style="font-size:16px; font-weight:bold;"></SfNumericTextBox>
                                </Template>
                            </DxGridLayoutItem>

                            <DxGridLayoutItem Row="0" Column="5">
                                <Template>
                                    <label class="TSIModalLabel"><strong>@L["TransactionExchangeUnitPriceLineLabel"]</strong></label>
                                    <SfNumericTextBox Min="0" TValue="decimal" @bind-Value="LineDataSource.TransactionExchangeUnitPrice" Enabled=@TransactionExchangeUnitPriceEnabled OnChange="LineCalculate">


                                    </SfNumericTextBox>
                                </Template>
                            </DxGridLayoutItem>

                            <DxGridLayoutItem Row="3" Column="5">
                                <Template>
                                    <label class="TSIModalLabel"><strong>@L["TransactionExchangeVATamountLineLabel"]</strong></label>
                                    <SfNumericTextBox Min="0" TValue="decimal" @bind-Value="LineDataSource.TransactionExchangeVATamount" Enabled=false></SfNumericTextBox>
                                </Template>
                            </DxGridLayoutItem>

                            <DxGridLayoutItem Row="5" Column="5">
                                <Template>
                                    <label class="TSIModalLabel"><strong>@L["TransactionExchangeDiscountAmountLineLabel"] </strong></label>
                                    <SfNumericTextBox Min="0" TValue="decimal" @bind-Value="LineDataSource.TransactionExchangeDiscountAmount" Enabled=@TransactionExchangeDiscountAmountEnabled OnChange="LineCalculate"></SfNumericTextBox>
                                </Template>
                            </DxGridLayoutItem>

                            <DxGridLayoutItem Row="6" Column="5">
                                <Template>
                                    <label class="TSIModalLabel"><strong>@L["TransactionExchangeLineAmountLineLabel"] </strong></label>
                                    <SfNumericTextBox Min="0" TValue="decimal" @bind-Value="LineDataSource.TransactionExchangeLineAmount" Enabled=@TransactionExchangeLineAmountEnabled style="font-size:16px; font-weight:bold;"></SfNumericTextBox>
                                </Template>
                            </DxGridLayoutItem>

                            <DxGridLayoutItem Row="7" Column="5">
                                <Template>
                                    <label class="TSIModalLabel"><strong>@L["TransactionExchangeLineTotalAmountLineLabel"] </strong></label>
                                    <SfNumericTextBox Min="0" TValue="decimal" @bind-Value="LineDataSource.TransactionExchangeLineTotalAmount" Enabled=@TransactionExchangeLineTotalAmountEnabled style="font-size:16px; font-weight:bold;"></SfNumericTextBox>
                                </Template>
                            </DxGridLayoutItem>
                        }
                    }

                </Items>
            </DxGridLayout>
        </BodyTemplate>
        <FooterContentTemplate>
            <SfButton CssClass="TSISaveButton" OnClick="OnLineSubmit"><SfIcon Size="IconSize.Medium" Name="IconName.Save"></SfIcon>&nbsp;@L["SaveButton"]</SfButton>
            <SfButton CssClass="TSICancelButton" OnClick="HideLinesPopup"><SfIcon Size="IconSize.Medium" Name="IconName.Undo"></SfIcon>&nbsp;@L["CloseButton"]</SfButton>
        </FooterContentTemplate>
    </DxPopup>

    <DxPopup @bind-Visible="@CreateProductionOrderCrudPopup"
             ShowFooter="true"
             CloseOnEscape="false"
             CloseOnOutsideClick="false"
             HeaderText="@L["EditProdOrderModalTitle"]"
             Width="75%"
             Height="65%"
             MinWidth="1440px"
             MinHeight="700px"
             HeaderCssClass="HeaderTitleCss"
             ShowCloseButton=false>

        <BodyTemplate>

            <DxGridLayout CssClass="TSIGridLayout">

                <Rows>
                    <DxGridLayoutRow Height="45%" />
                    <DxGridLayoutRow Height="7%" />
                    <DxGridLayoutRow Height="43%" />
                </Rows>

                <Columns>
                    <DxGridLayoutColumn Width="2%" />
                    <DxGridLayoutColumn Width="96%" />
                    <DxGridLayoutColumn Width="2%" />
                </Columns>

                <Items>
                    <br />
                    <DxGridLayoutItem Row="0" Column="1">
                        <Template>
                            <SfGrid @ref=_OrderLinesWithSemiProductsGrid ID="OrderLinesWithSemiProductsGrid" ColumnMenuItems=@MenuItems ShowColumnMenu="true" DataSource="@OrderLinesWithSemiProductsList" AllowPaging="false" AllowFiltering="false" AllowReordering="true" AllowResizing="true" AllowGrouping="false" AllowExcelExport="false" AllowSelection="true" AllowSorting="true" Height="100%" Width="100%" class="GridZebra" ContextMenuItems="@OrderLinesWithSemiProductsGridContextMenu">
                                <GridEvents ContextMenuItemClicked="@OnOrderLinesWithSemiProductsContextMenuClick" TValue="OrderLinesWithSemiProductsDto"></GridEvents>
                                <GridGroupSettings ShowGroupedColumn="true"></GridGroupSettings>

                                <GridEditSettings AllowAdding="false" AllowEditing="false" AllowDeleting="false" Mode="Syncfusion.Blazor.Grids.EditMode.Normal"></GridEditSettings>
                                <GridFilterSettings Type="Syncfusion.Blazor.Grids.FilterType.Menu"></GridFilterSettings>
                                <GridSelectionSettings Type="Syncfusion.Blazor.Grids.SelectionType.Multiple"></GridSelectionSettings>
                                <GridColumns>
                                    <GridColumn Field=@nameof(OrderLinesWithSemiProductsDto.isStockUsage) DisplayAsCheckBox="true" HeaderText="@L["OrderLinesWithSemiProductsGridisStockUsage"]" TextAlign="TextAlign.Center" Width="250"></GridColumn>
                                    <GridColumn Field=@nameof(OrderLinesWithSemiProductsDto.LineNr) Type="ColumnType.Number" HeaderText="@L["OrderLinesWithSemiProductsGridLineNr"]" TextAlign="TextAlign.Center" Width="120"></GridColumn>
                                    <GridColumn Field=@nameof(OrderLinesWithSemiProductsDto.isBoM) DisplayAsCheckBox="true" HeaderText="@L["OrderLinesWithSemiProductsGridisBoM"]" TextAlign="TextAlign.Center" Width="120"></GridColumn> 
                                    <GridColumn Field=@nameof(OrderLinesWithSemiProductsDto.isRoute) DisplayAsCheckBox="true" HeaderText="@L["OrderLinesWithSemiProductsGridisRoute"]" TextAlign="TextAlign.Center" Width="120"></GridColumn>
                                    <GridColumn Field=@nameof(OrderLinesWithSemiProductsDto.ProductCode) HeaderText="@L["OrderLinesWithSemiProductsGridProductCode"]" TextAlign="TextAlign.Center" Width="220"></GridColumn>
                                    <GridColumn Field=@nameof(OrderLinesWithSemiProductsDto.ProductName) HeaderText="@L["OrderLinesWithSemiProductsGridProductName"]" TextAlign="TextAlign.Center" Width="220"></GridColumn>
                                    <GridColumn Field=@nameof(OrderLinesWithSemiProductsDto.StockQuantity) Format="N2" Type="ColumnType.Number" HeaderText="@L["OrderLinesWithSemiProductsGridStockQuantity"]" TextAlign="TextAlign.Center" Width="220"></GridColumn>
                                    <GridColumn Field=@nameof(OrderLinesWithSemiProductsDto.TotalReservedQuantity) Format="N2" Type="ColumnType.Number" HeaderText="@L["OrderLinesWithSemiProductsGridTotalReservedQuantity"]" TextAlign="TextAlign.Center" Width="250"></GridColumn>
                                    <GridColumn Field=@nameof(OrderLinesWithSemiProductsDto.AvailableStock) Format="N2" Type="ColumnType.Number" HeaderText="@L["OrderLinesWithSemiProductsGridAvailableStock"]" TextAlign="TextAlign.Center" Width="220"></GridColumn>
                                    <GridColumn Field=@nameof(OrderLinesWithSemiProductsDto.ProductionOrderQuantity) Format="N2" Type="ColumnType.Number" HeaderText="@L["OrderLinesWithSemiProductsGridProductionOrderQuantity"]" TextAlign="TextAlign.Center" Width="220"></GridColumn>
                                    <GridColumn Field=@nameof(OrderLinesWithSemiProductsDto.ProductionQuantity) Format="N2" Type="ColumnType.Number" HeaderText="@L["OrderLinesWithSemiProductsGridProductionQuantity"]" TextAlign="TextAlign.Center" Width="220"></GridColumn>
                                    <GridColumn Field=@nameof(OrderLinesWithSemiProductsDto.StockUsage) Format="N2" Type="ColumnType.Number" HeaderText="@L["OrderLinesWithSemiProductsGridStockUsage"]" TextAlign="TextAlign.Center" Width="220"></GridColumn>
                                    <GridColumn Field=@nameof(OrderLinesWithSemiProductsDto.LinkedProductCode) HeaderText="@L["OrderLinesWithSemiProductsGridLinkedProductCode"]" TextAlign="TextAlign.Center" Width="250"></GridColumn>
                                    <GridColumn Field=@nameof(OrderLinesWithSemiProductsDto.SalesOrderLineState) HeaderText="@L["OrderLinesWithSemiProductsGridSalesOrderLineState"]" TextAlign="TextAlign.Center" Width="220" Context="orderLinesContext">
                                        <Template>
                                            @{
                                                var lineState = (orderLinesContext as OrderLinesWithSemiProductsDto).SalesOrderLineState;
                                                string lineStateStr = string.Empty;

                                                switch (lineState)
                                                {
                                                    case SalesOrderLineStateEnum.Iptal: lineStateStr = L["EnumCancel"]; break;
                                                    case SalesOrderLineStateEnum.Onaylandı: lineStateStr = L["EnumApproved"]; break;
                                                    case SalesOrderLineStateEnum.UretimeVerildi: lineStateStr = L["EnumInProduction"]; break;
                                                    case SalesOrderLineStateEnum.Beklemede: lineStateStr = L["EnumWaiting"]; break;
                                                    case SalesOrderLineStateEnum.SevkEdildi: lineStateStr = L["EnumTransfer"]; break;
                                                    default: break;
                                                }
                                            }
                                            @lineStateStr
                                        </Template>
                                    </GridColumn>
                                </GridColumns>
                            </SfGrid>
                        </Template>
                    </DxGridLayoutItem>
                      <DxGridLayoutItem Row="1" Column="1">
                        <Template>
                          <center>
                                <SfButton CssClass="TSICancelButton" OnClick="CreateProductionOrderListClicked"><SfIcon Size="IconSize.Medium" Name="IconName.InsertBelow"></SfIcon>&nbsp;@L["TransferProductionOrderButton"]</SfButton>
                          </center>
                        </Template>
                    </DxGridLayoutItem>

                    <DxGridLayoutItem Row="2" Column="1">
                        <Template>
                            <SfGrid @ref=_PlannedProductionOrdersGrid ID="PlannedProductionOrdersGrid" ColumnMenuItems=@MenuItems ShowColumnMenu="true" DataSource="@PlannedProductionOrdersList" AllowPaging="false" AllowFiltering="false" AllowReordering="true" AllowResizing="true" AllowGrouping="false" AllowExcelExport="false" AllowSelection="true" AllowSorting="true" Height="100%" Width="100%" class="GridZebra">
                                <GridGroupSettings ShowGroupedColumn="true"></GridGroupSettings>
                                <GridEditSettings AllowAdding="false" AllowEditing="false" AllowDeleting="false" Mode="Syncfusion.Blazor.Grids.EditMode.Normal"></GridEditSettings>
                                <GridFilterSettings Type="Syncfusion.Blazor.Grids.FilterType.Menu"></GridFilterSettings>
                                <GridSelectionSettings Type="Syncfusion.Blazor.Grids.SelectionType.Multiple"></GridSelectionSettings>
                                <GridColumns>
                                    <GridColumn Field=@nameof(PlannedProductionOrdersDto.ProductCode) HeaderText="@L["PlannedProdOrderGridProductCode"]" TextAlign="TextAlign.Center" Width="120"></GridColumn>
                                    <GridColumn Field=@nameof(PlannedProductionOrdersDto.ProductName) HeaderText="@L["PlannedProdOrderGridProductName"]" TextAlign="TextAlign.Center" Width="120"></GridColumn>
                                    <GridColumn Field=@nameof(PlannedProductionOrdersDto.StockUsage) Format="N2" Type="ColumnType.Number" HeaderText="@L["PlannedProdOrderGridStockUsage"]" TextAlign="TextAlign.Center" Width="120"></GridColumn>
                                    <GridColumn Field=@nameof(PlannedProductionOrdersDto.PlannedQuantity) Format="N2" Type="ColumnType.Number" HeaderText="@L["PlannedProdOrderGridPlannedQuantity"]" TextAlign="TextAlign.Center" Width="120"></GridColumn>
                                    <GridColumn Field=@nameof(PlannedProductionOrdersDto.LoadingDate) Format="dd.MM.yyyy" Type="ColumnType.DateTime" HeaderText="@L["PlannedProdOrderGridLoadingDate"]" TextAlign="TextAlign.Center" Width="120"></GridColumn>
                                    <GridColumn Field=@nameof(PlannedProductionOrdersDto.LinkedProductCode) HeaderText="@L["PlannedProdOrderGridLinkedProductCode"]" TextAlign="TextAlign.Center" Width="120"></GridColumn>
                                </GridColumns>
                            </SfGrid>
                        </Template>
                    </DxGridLayoutItem>

                </Items>
            </DxGridLayout>
        </BodyTemplate>
        <FooterContentTemplate>
            <SfProgressButton Content="Üretim Emri Oluştur" CssClass="TSISaveButton" IconCss="e-icons e-save" EnableProgress="true" OnClick="OnCreateProductionOrderBtnClicked" @ref="ProgressBtn">
                <ProgressButtonSpinSettings Position="SpinPosition.Right" Width="20">
                    <SpinTemplate>
                        <div class="TSIProgressSaveBtnSpinner"></div>
                    </SpinTemplate>
                </ProgressButtonSpinSettings>
            </SfProgressButton>
            <SfButton CssClass="TSICancelButton" OnClick="HideCreateProductionOrderPopup" Disabled=@HideCreateProductionOrderPopupButtonDisabled><SfIcon Size="IconSize.Medium" Name="IconName.Undo"></SfIcon>&nbsp;@L["CloseButton"]</SfButton>
        </FooterContentTemplate>
    </DxPopup>

    <DxPopup @bind-Visible="@BoMLineCrudPopup"
             ShowFooter="true"
             CloseOnEscape="false"
             CloseOnOutsideClick="false"
             HeaderText="@L["EditBoMModalTitle"]"
             Width="65%"
             Height="47%"
             MinWidth="1100px"
             MinHeight="510px"
             HeaderCssClass="HeaderTitleCss">

        <BodyTemplate>

            <DxGridLayout CssClass="TSIGridLayout">

                <Rows>
                    <DxGridLayoutRow Height="1%" />
                    <DxGridLayoutRow Height="90%" />
                </Rows>

                <Columns>
                    <DxGridLayoutColumn Width="3%" />
                    <DxGridLayoutColumn Width="15%" />
                    <DxGridLayoutColumn Width="3%" />
                    <DxGridLayoutColumn Width="49%" />
                    <DxGridLayoutColumn Width="3%" />
                    <DxGridLayoutColumn Width="23%" />
                    <DxGridLayoutColumn Width="3%" />
                </Columns>

                <Items>

                    <DxGridLayoutItem Row="1" Column="1" ColumnSpan="5">
                        <Template>
                            <SfGrid @ref=_BoMLineGrid ID="BoMLineGrid" ColumnMenuItems=@MenuItems ShowColumnMenu="true" DataSource="@ProductTreeDataSource" AllowPaging="false" AllowFiltering="false" AllowReordering="true" AllowResizing="true" AllowGrouping="false" AllowExcelExport="false" AllowSelection="true" AllowSorting="true" Height="100%" Width="100%" class="GridZebra" ContextMenuItems="@BoMLineGridContextMenu">
                                <GridEvents ContextMenuItemClicked="@OnBoMLineContextMenuClick" TValue="ProductsTreeDto"></GridEvents>
                                <GridGroupSettings ShowGroupedColumn="true"></GridGroupSettings>

                                <GridEditSettings AllowAdding="false" AllowEditing="false" AllowDeleting="false" Mode="Syncfusion.Blazor.Grids.EditMode.Normal"></GridEditSettings>
                                <GridFilterSettings Type="Syncfusion.Blazor.Grids.FilterType.Menu"></GridFilterSettings>
                                <GridSelectionSettings Type="Syncfusion.Blazor.Grids.SelectionType.Multiple"></GridSelectionSettings>
                                <GridColumns>
                                    <GridColumn Field=@nameof(ProductsTreeDto.ProductCode) HeaderText="@L["BomGridProductCode"]" TextAlign="TextAlign.Center" Width="120"></GridColumn>
                                    <GridColumn Field=@nameof(ProductsTreeDto.ProductName) HeaderText="@L["BomGridProductName"]" TextAlign="TextAlign.Center" Width="120"></GridColumn>
                                    <GridColumn Field=@nameof(ProductsTreeDto.SupplyForm) HeaderText="@L["BomGridSupplyForm"]" TextAlign="TextAlign.Center" Width="120"></GridColumn>
                                    <GridColumn Field=@nameof(ProductsTreeDto.AmountofStock) HeaderText="@L["BomGridAmount"]" TextAlign="TextAlign.Center" Width="120"></GridColumn>
                                    <GridColumn Field=@nameof(ProductsTreeDto.AmountofRequierement) HeaderText="@L["BomGridAmountRe"]" TextAlign="TextAlign.Center" Width="120"></GridColumn>
                                </GridColumns>
                            </SfGrid>
                        </Template>
                    </DxGridLayoutItem>

                </Items>
            </DxGridLayout>
        </BodyTemplate>
        <FooterContentTemplate>
            <SfButton CssClass="TSICancelButton" OnClick="HideCreateProductionOrderPopup"><SfIcon Size="IconSize.Medium" Name="IconName.Undo"></SfIcon>&nbsp;@L["CloseButton"]</SfButton>
        </FooterContentTemplate>
    </DxPopup>
}

@if (SelectUnitSetsPopupVisible)
{
    <DxPopup @bind-Visible="SelectUnitSetsPopupVisible"
             ShowFooter="true"
             CloseOnEscape="false"
             CloseOnOutsideClick="false"
             HeaderText="@L["UnitSetModalTitle"]"
             Width="55%"
             Height="44%"
             MinWidth="1100px"
             MinHeight="470px"
             HeaderCssClass="HeaderTitleCss">
        <BodyTemplate>

            <DevGridLayout ColumnCount="1" RowCount="1">
                <GridLayoutItems>
                    <DxGridLayoutItem Row="1" Column="1">
                        <Template>
                            <SfCard class="TSIGridCards2">

                                <CardContent>
                                    <SfGrid ID="UnitSetGrid" ColumnMenuItems=@MenuItems ShowColumnMenu="true" DataSource="@UnitSetsList" AllowPaging="true" AllowFiltering="true" AllowReordering="true" AllowResizing="true" AllowGrouping="true" AllowExcelExport="true" AllowSelection="true" ShowColumnChooser="true" GridLines="GridLine.Both"
                                            AllowSorting="true" Height="100%" Width="100%" class="GridZebra">
                                        <GridGroupSettings ShowGroupedColumn="true"></GridGroupSettings>

                                        <GridEvents OnRecordDoubleClick="@UnitSetsDoubleClickHandler" TValue="ListUnitSetsDto"></GridEvents>
                                        <GridEditSettings AllowAdding="false" AllowEditing="false" AllowDeleting="false" Mode="Syncfusion.Blazor.Grids.EditMode.Normal"></GridEditSettings>
                                        <GridFilterSettings Type="Syncfusion.Blazor.Grids.FilterType.Menu"></GridFilterSettings>
                                        <GridPageSettings PageSizes="true"></GridPageSettings>
                                        <GridSelectionSettings Type="Syncfusion.Blazor.Grids.SelectionType.Multiple"></GridSelectionSettings>
                                        <GridColumns>
                                            <GridColumn Field=@nameof(ListUnitSetsDto.Code) HeaderText="@L["UnitSetModalGridCode"]" TextAlign="TextAlign.Center" Width="120"></GridColumn>
                                            <GridColumn Field=@nameof(ListUnitSetsDto.Name) HeaderText="@L["UnitSetModalGridName"]" TextAlign="TextAlign.Center" Width="120"></GridColumn>

                                        </GridColumns>
                                    </SfGrid>
                                </CardContent>
                                <CardFooter>
                                </CardFooter>
                            </SfCard>
                        </Template>
                    </DxGridLayoutItem>
                </GridLayoutItems>
            </DevGridLayout>

        </BodyTemplate>
        <FooterContentTemplate>
        </FooterContentTemplate>
    </DxPopup>
}

@if (SelectCurrencyPopupVisible)
{
    <DxPopup @bind-Visible="SelectCurrencyPopupVisible"
             ShowFooter="true"
             CloseOnEscape="false"
             CloseOnOutsideClick="false"
             HeaderText="@L["CurrencyModalTitle"]"
             Width="55%"
             Height="44%"
             MinWidth="1100px"
             MinHeight="470px"
             HeaderCssClass="HeaderTitleCss">
        <BodyTemplate>

            <DevGridLayout ColumnCount="1" RowCount="1">
                <GridLayoutItems>
                    <DxGridLayoutItem Row="1" Column="1">
                        <Template>
                            <SfCard class="TSIGridCards2">

                                <CardContent>
                                    <SfGrid ID="CurrenciesGrid" DataSource="@CurrenciesList" ColumnMenuItems=@MenuItems ShowColumnMenu="true" AllowPaging="true" AllowFiltering="true" AllowReordering="true" AllowResizing="true" AllowGrouping="true" AllowExcelExport="true" AllowSelection="true" ShowColumnChooser="true" GridLines="GridLine.Both" AllowSorting="true" Height="100%" Width="100%" class="GridZebra">
                                        <GridGroupSettings ShowGroupedColumn="true"></GridGroupSettings>

                                        <GridEvents OnRecordDoubleClick="@CurrenciesDoubleClickHandler" TValue="ListCurrenciesDto"></GridEvents>
                                        <GridEditSettings AllowAdding="false" AllowEditing="false" AllowDeleting="false" Mode="Syncfusion.Blazor.Grids.EditMode.Normal"></GridEditSettings>
                                        <GridFilterSettings Type="Syncfusion.Blazor.Grids.FilterType.Menu"></GridFilterSettings>
                                        <GridPageSettings PageSizes="true"></GridPageSettings>
                                        <GridSelectionSettings Type="Syncfusion.Blazor.Grids.SelectionType.Multiple"></GridSelectionSettings>
                                        <GridColumns>
                                            <GridColumn Field=@nameof(ListCurrenciesDto.Code) HeaderText="@L["CurrencyModalGridCode"]" TextAlign="TextAlign.Center" Width="120"></GridColumn>
                                            <GridColumn Field=@nameof(ListCurrenciesDto.Name) HeaderText="@L["CurrencyModalGridName"]" TextAlign="TextAlign.Center" Width="120"></GridColumn>
                                        </GridColumns>
                                    </SfGrid>
                                </CardContent>
                                <CardFooter>
                                </CardFooter>
                            </SfCard>
                        </Template>
                    </DxGridLayoutItem>
                </GridLayoutItems>
            </DevGridLayout>

        </BodyTemplate>
        <FooterContentTemplate>
        </FooterContentTemplate>
    </DxPopup>
}

@if (SelectTransactionExchangeCurrencyPopupVisible)
{
    <DxPopup @bind-Visible="SelectTransactionExchangeCurrencyPopupVisible"
             ShowFooter="true"
             CloseOnEscape="false"
             CloseOnOutsideClick="false"
             HeaderText="@L["CurrencyModalTitle"]"
             Width="55%"
             Height="44%"
             MinWidth="1100px"
             MinHeight="470px"
             HeaderCssClass="HeaderTitleCss">
        <BodyTemplate>

            <DevGridLayout ColumnCount="1" RowCount="1">
                <GridLayoutItems>
                    <DxGridLayoutItem Row="1" Column="1">
                        <Template>
                            <SfCard class="TSIGridCards2">

                                <CardContent>
                                    <SfGrid ID="TransactionExchangeCurrenciesGrid" DataSource="@TransactionExchangeCurrenciesList" ColumnMenuItems=@MenuItems ShowColumnMenu="true" AllowPaging="true" AllowFiltering="true" AllowReordering="true" AllowResizing="true" AllowGrouping="true" AllowExcelExport="true" AllowSelection="true" ShowColumnChooser="true" GridLines="GridLine.Both" AllowSorting="true" Height="100%" Width="100%" class="GridZebra">
                                        <GridGroupSettings ShowGroupedColumn="true"></GridGroupSettings>

                                        <GridEvents OnRecordDoubleClick="@TransactionExchangeCurrenciesDoubleClickHandler" TValue="ListCurrenciesDto"></GridEvents>
                                        <GridEditSettings AllowAdding="false" AllowEditing="false" AllowDeleting="false" Mode="Syncfusion.Blazor.Grids.EditMode.Normal"></GridEditSettings>
                                        <GridFilterSettings Type="Syncfusion.Blazor.Grids.FilterType.Menu"></GridFilterSettings>
                                        <GridPageSettings PageSizes="true"></GridPageSettings>
                                        <GridSelectionSettings Type="Syncfusion.Blazor.Grids.SelectionType.Multiple"></GridSelectionSettings>
                                        <GridColumns>
                                            <GridColumn Field=@nameof(ListCurrenciesDto.Code) HeaderText="@L["CurrencyModalGridCode"]" TextAlign="TextAlign.Center" Width="120"></GridColumn>
                                            <GridColumn Field=@nameof(ListCurrenciesDto.Name) HeaderText="@L["CurrencyModalGridName"]" TextAlign="TextAlign.Center" Width="120"></GridColumn>
                                        </GridColumns>
                                    </SfGrid>
                                </CardContent>
                                <CardFooter>
                                </CardFooter>
                            </SfCard>
                        </Template>
                    </DxGridLayoutItem>
                </GridLayoutItems>
            </DevGridLayout>

        </BodyTemplate>
        <FooterContentTemplate>
        </FooterContentTemplate>
    </DxPopup>
}

@if (SelectBranchesPopupVisible)
{
    <DxPopup @bind-Visible="SelectBranchesPopupVisible"
             ShowFooter="true"
             CloseOnEscape="false"
             CloseOnOutsideClick="false"
             HeaderText="@L["BranchModalTitle"]"
             Width="55%"
             Height="44%"
             MinWidth="1100px"
             MinHeight="470px"
             HeaderCssClass="HeaderTitleCss">
        <BodyTemplate>

            <DevGridLayout ColumnCount="1" RowCount="1">
                <GridLayoutItems>
                    <DxGridLayoutItem Row="1" Column="1">
                        <Template>
                            <SfCard class="TSIGridCards2">

                                <CardContent>
                                    <SfGrid ID="BranchesGrid" ColumnMenuItems=@MenuItems ShowColumnMenu="true" DataSource="@BranchesList" AllowPaging="true" AllowFiltering="true" AllowReordering="true" AllowResizing="true" AllowGrouping="true" AllowExcelExport="true" ShowColumnChooser="true" GridLines="GridLine.Both" AllowSelection="true" AllowSorting="true" Height="100%" Width="100%" class="GridZebra">

                                        <GridEvents OnRecordDoubleClick="@BranchesDoubleClickHandler" TValue="ListBranchesDto"></GridEvents>
                                        <GridGroupSettings ShowGroupedColumn="true"></GridGroupSettings>
                                        <GridEditSettings AllowAdding="false" AllowEditing="false" AllowDeleting="false" Mode="Syncfusion.Blazor.Grids.EditMode.Normal"></GridEditSettings>
                                        <GridFilterSettings Type="Syncfusion.Blazor.Grids.FilterType.Menu"></GridFilterSettings>
                                        <GridPageSettings PageSizes="true"></GridPageSettings>
                                        <GridSelectionSettings Type="Syncfusion.Blazor.Grids.SelectionType.Multiple"></GridSelectionSettings>
                                        <GridColumns>
                                            <GridColumn Field=@nameof(ListBranchesDto.Code) HeaderText="@L["BranchModalGridCode"]" TextAlign="TextAlign.Center" Width="120"></GridColumn>
                                            <GridColumn Field=@nameof(ListBranchesDto.Name) HeaderText="@L["BranchModalGridName"]" TextAlign="TextAlign.Center" Width="120">

                                            </GridColumn>
                                            <GridColumn Field=@nameof(ListBranchesDto.Description_) HeaderText="@L["BranchModalGridDescription"]" TextAlign="TextAlign.Center" Width="120"></GridColumn>
                                        </GridColumns>
                                    </SfGrid>
                                </CardContent>
                                <CardFooter>
                                </CardFooter>
                            </SfCard>
                        </Template>
                    </DxGridLayoutItem>
                </GridLayoutItems>
            </DevGridLayout>

        </BodyTemplate>
        <FooterContentTemplate>
        </FooterContentTemplate>
    </DxPopup>
}

@if (SelectPaymentPlansPopupVisible)
{
    <DxPopup @bind-Visible="SelectPaymentPlansPopupVisible"
             ShowFooter="true"
             CloseOnEscape="false"
             CloseOnOutsideClick="false"
             HeaderText="@L["PaymentPlanModalTitle"]"
             Width="55%"
             Height="44%"
             MinWidth="1100px"
             MinHeight="470px"
             HeaderCssClass="HeaderTitleCss">
        <BodyTemplate>

            <DevGridLayout ColumnCount="1" RowCount="1">
                <GridLayoutItems>
                    <DxGridLayoutItem Row="1" Column="1">
                        <Template>
                            <SfCard class="TSIGridCards2">

                                <CardContent>
                                    <SfGrid ID="PaymentPlansGrid" ColumnMenuItems=@MenuItems ShowColumnMenu="true" DataSource="@PaymentPlansList" AllowPaging="true" AllowFiltering="true" AllowReordering="true" AllowResizing="true" AllowGrouping="true" AllowExcelExport="true" ShowColumnChooser="true" GridLines="GridLine.Both" AllowSelection="true" AllowSorting="true" Height="100%" Width="100%" class="GridZebra">
                                        <GridGroupSettings ShowGroupedColumn="true"></GridGroupSettings>
                                        <GridEvents OnRecordDoubleClick="@PaymentPlansDoubleClickHandler" TValue="ListPaymentPlansDto"></GridEvents>
                                        <GridEditSettings AllowAdding="false" AllowEditing="false" AllowDeleting="false" Mode="Syncfusion.Blazor.Grids.EditMode.Normal"></GridEditSettings>
                                        <GridFilterSettings Type="Syncfusion.Blazor.Grids.FilterType.Menu"></GridFilterSettings>
                                        <GridPageSettings PageSizes="true"></GridPageSettings>
                                        <GridSelectionSettings Type="Syncfusion.Blazor.Grids.SelectionType.Multiple"></GridSelectionSettings>
                                        <GridColumns>
                                            <GridColumn Field=@nameof(ListPaymentPlansDto.Code) HeaderText="@L["PaymentPlanModalGridCode"]" TextAlign="TextAlign.Center" Width="120"></GridColumn>
                                            <GridColumn Field=@nameof(ListPaymentPlansDto.Name) HeaderText="@L["PaymentPlanModalGridName"]" TextAlign="TextAlign.Center" Width="120"></GridColumn>
                                            <GridColumn Field=@nameof(ListPaymentPlansDto.Days_) Type="ColumnType.Number" HeaderText="@L["PaymentPlanModalGridDays"]" TextAlign="TextAlign.Center" Width="120"></GridColumn>
                                            <GridColumn Field=@nameof(ListPaymentPlansDto.DelayMaturityDifference) Format="N2" Type="ColumnType.Number" HeaderText="@L["PaymentPlanModalGridDelayMat"]" TextAlign="TextAlign.Center" Width="120"></GridColumn>
                                        </GridColumns>
                                    </SfGrid>
                                </CardContent>
                                <CardFooter>
                                </CardFooter>
                            </SfCard>
                        </Template>
                    </DxGridLayoutItem>
                </GridLayoutItems>
            </DevGridLayout>

        </BodyTemplate>
        <FooterContentTemplate>
        </FooterContentTemplate>
    </DxPopup>
}

@if (SelectWarehousesPopupVisible)
{
    <DxPopup @bind-Visible="SelectWarehousesPopupVisible"
             ShowFooter="true"
             CloseOnEscape="false"
             CloseOnOutsideClick="false"
             HeaderText="@L["WarehouseModalTitle"]"
             Width="55%"
             Height="44%"
             MinWidth="1100px"
             MinHeight="470px"
             HeaderCssClass="HeaderTitleCss">
        <BodyTemplate>

            <DevGridLayout ColumnCount="1" RowCount="1">
                <GridLayoutItems>
                    <DxGridLayoutItem Row="1" Column="1">
                        <Template>
                            <SfCard class="TSIGridCards2">

                                <CardContent>
                                    <SfGrid ID="WarehousesGrid" ColumnMenuItems=@MenuItems ShowColumnMenu="true" DataSource="@WarehousesList" AllowPaging="true" AllowFiltering="true" AllowReordering="true" AllowResizing="true" AllowGrouping="true" AllowExcelExport="true" ShowColumnChooser="true" GridLines="GridLine.Both" AllowSelection="true" AllowSorting="true" Height="100%" Width="100%" class="GridZebra">
                                        <GridGroupSettings ShowGroupedColumn="true"></GridGroupSettings>

                                        <GridEvents OnRecordDoubleClick="@WarehousesDoubleClickHandler" TValue="ListWarehousesDto"></GridEvents>
                                        <GridEditSettings AllowAdding="false" AllowEditing="false" AllowDeleting="false" Mode="Syncfusion.Blazor.Grids.EditMode.Normal"></GridEditSettings>
                                        <GridFilterSettings Type="Syncfusion.Blazor.Grids.FilterType.Menu"></GridFilterSettings>
                                        <GridPageSettings PageSizes="true"></GridPageSettings>
                                        <GridSelectionSettings Type="Syncfusion.Blazor.Grids.SelectionType.Multiple"></GridSelectionSettings>
                                        <GridColumns>
                                            <GridColumn Field=@nameof(ListWarehousesDto.Code) HeaderText="@L["WarehouseModalGridCode"]" TextAlign="TextAlign.Center" Width="120"></GridColumn>
                                            <GridColumn Field=@nameof(ListWarehousesDto.Name) HeaderText="@L["WarehouseModalGridName"]" TextAlign="TextAlign.Center" Width="120"></GridColumn>
                                        </GridColumns>
                                    </SfGrid>
                                </CardContent>
                                <CardFooter>
                                </CardFooter>
                            </SfCard>
                        </Template>
                    </DxGridLayoutItem>
                </GridLayoutItems>
            </DevGridLayout>

        </BodyTemplate>
        <FooterContentTemplate>
        </FooterContentTemplate>
    </DxPopup>
}

@if (SelectCurrentAccountCardsPopupVisible)
{
    <DxPopup @bind-Visible="SelectCurrentAccountCardsPopupVisible"
             ShowFooter="true"
             CloseOnEscape="false"
             CloseOnOutsideClick="false"
             HeaderText="@L["CurrentAccountModalTitle"]"
             Width="55%"
             Height="44%"
             MinWidth="1100px"
             MinHeight="470px"
             HeaderCssClass="HeaderTitleCss">
        <BodyTemplate>

            <DevGridLayout ColumnCount="1" RowCount="1">
                <GridLayoutItems>
                    <DxGridLayoutItem Row="1" Column="1">
                        <Template>
                            <SfCard class="TSIGridCards2">

                                <CardContent>
                                    <SfGrid ID="CurrentAccountCardsGrid" ColumnMenuItems=@MenuItems ShowColumnMenu="true" DataSource="@CurrentAccountCardsList" AllowPaging="true" AllowFiltering="true" AllowReordering="true" AllowResizing="true" AllowGrouping="true"
                                            AllowExcelExport="true" ShowColumnChooser="true" GridLines="GridLine.Both" AllowSelection="true" AllowSorting="true" Height="100%" Width="100%" class="GridZebra">
                                        <GridGroupSettings ShowGroupedColumn="true"></GridGroupSettings>

                                        <GridEvents OnRecordDoubleClick="@CurrentAccountCardsDoubleClickHandler" TValue="ListCurrentAccountCardsDto"></GridEvents>
                                        <GridEditSettings AllowAdding="false" AllowEditing="false" AllowDeleting="false" Mode="Syncfusion.Blazor.Grids.EditMode.Normal"></GridEditSettings>
                                        <GridFilterSettings Type="Syncfusion.Blazor.Grids.FilterType.Menu"></GridFilterSettings>
                                        <GridPageSettings PageSizes="true"></GridPageSettings>
                                        <GridSelectionSettings Type="Syncfusion.Blazor.Grids.SelectionType.Multiple"></GridSelectionSettings>
                                        <GridColumns>
                                            <GridColumn Field=@nameof(ListCurrentAccountCardsDto.Code) HeaderText="@L["CurrentAccountCardCode"]" TextAlign="TextAlign.Center" Width="120"></GridColumn>
                                            <GridColumn Field=@nameof(ListCurrentAccountCardsDto.Name) HeaderText="@L["CurrentAccountCardName"]" TextAlign="TextAlign.Center" Width="120"></GridColumn>
                                            <GridColumn Field=@nameof(ListCurrentAccountCardsDto.CustomerCode) HeaderText="@L["CurrentAccountCardCustomerCode"]" TextAlign="TextAlign.Center" Width="120"></GridColumn>
                                        </GridColumns>

                                    </SfGrid>
                                </CardContent>
                                <CardFooter>
                                </CardFooter>
                            </SfCard>
                        </Template>
                    </DxGridLayoutItem>
                </GridLayoutItems>
            </DevGridLayout>

        </BodyTemplate>
        <FooterContentTemplate>
        </FooterContentTemplate>
    </DxPopup>
}

@if (SelectShippingAdressesPopupVisible)
{
    <DxPopup @bind-Visible="SelectShippingAdressesPopupVisible"
             ShowFooter="true"
             CloseOnEscape="false"
             CloseOnOutsideClick="false"
             HeaderText="@L["ShippingAdressModalTitle"]"
             Width="55%"
             Height="44%"
             MinWidth="1100px"
             MinHeight="470px"
             HeaderCssClass="HeaderTitleCss">
        <BodyTemplate>

            <DevGridLayout ColumnCount="1" RowCount="1">
                <GridLayoutItems>
                    <DxGridLayoutItem Row="1" Column="1">
                        <Template>
                            <SfCard class="TSIGridCards2">

                                <CardContent>
                                    <SfGrid ID="ShippingAdressesGrid" ColumnMenuItems=@MenuItems ShowColumnMenu="true" DataSource="@ShippingAdressesList" AllowPaging="true" AllowFiltering="true" AllowReordering="true" AllowResizing="true" AllowGrouping="true"
                                            AllowExcelExport="true" ShowColumnChooser="true" GridLines="GridLine.Both" AllowSelection="true" AllowSorting="true" Height="100%" Width="100%" class="GridZebra">
                                        <GridGroupSettings ShowGroupedColumn="true"></GridGroupSettings>

                                        <GridEvents OnRecordDoubleClick="@ShippingAdressesDoubleClickHandler" TValue="ListShippingAdressesDto"></GridEvents>
                                        <GridEditSettings AllowAdding="false" AllowEditing="false" AllowDeleting="false" Mode="Syncfusion.Blazor.Grids.EditMode.Normal"></GridEditSettings>
                                        <GridFilterSettings Type="Syncfusion.Blazor.Grids.FilterType.Menu"></GridFilterSettings>
                                        <GridPageSettings PageSizes="true"></GridPageSettings>
                                        <GridSelectionSettings Type="Syncfusion.Blazor.Grids.SelectionType.Multiple"></GridSelectionSettings>
                                        <GridColumns>
                                            <GridColumn Field=@nameof(ListShippingAdressesDto.Code) HeaderText="@L["ShippingAdressModalGridCode"]" TextAlign="TextAlign.Center" Width="120"></GridColumn>
                                            <GridColumn Field=@nameof(ListShippingAdressesDto.Name) HeaderText="@L["ShippingAdressModalGridName"]" TextAlign="TextAlign.Center" Width="120"></GridColumn>
                                            <GridColumn Field=@nameof(ListShippingAdressesDto.Adress1) HeaderText="@L["ShippingAdressModalGridAdress"]" TextAlign="TextAlign.Center" Width="400"></GridColumn>
                                        </GridColumns>

                                    </SfGrid>
                                </CardContent>
                                <CardFooter>
                                </CardFooter>
                            </SfCard>
                        </Template>
                    </DxGridLayoutItem>
                </GridLayoutItems>
            </DevGridLayout>

        </BodyTemplate>
        <FooterContentTemplate>
        </FooterContentTemplate>
    </DxPopup>
}

@if (SelectProductsPopupVisible)
{
    <DxPopup @bind-Visible="SelectProductsPopupVisible"
             ShowFooter="true"
             CloseOnEscape="false"
             CloseOnOutsideClick="false"
             HeaderText="@L["ProductModalTitle"]"
             Width="55%"
             Height="44%"
             MinWidth="1100px"
             MinHeight="470px"
             HeaderCssClass="HeaderTitleCss">
        <BodyTemplate>

            <DevGridLayout ColumnCount="1" RowCount="1">
                <GridLayoutItems>
                    <DxGridLayoutItem Row="1" Column="1">
                        <Template>
                            <SfCard class="TSIGridCards2">

                                <CardContent>
                                    <SfGrid ID="ProductsGrid" ColumnMenuItems=@MenuItems ShowColumnMenu="true" DataSource="@ProductsList" AllowPaging="true" AllowFiltering="true" AllowReordering="true" AllowResizing="true" AllowGrouping="true"
                                            AllowExcelExport="true" ShowColumnChooser="true" GridLines="GridLine.Both" AllowSelection="true" AllowSorting="true" Height="100%" Width="100%" class="GridZebra">
                                        <GridGroupSettings ShowGroupedColumn="true"></GridGroupSettings>

                                        <GridEvents OnRecordDoubleClick="@ProductsDoubleClickHandler" TValue="ListProductsDto"></GridEvents>
                                        <GridEditSettings AllowAdding="false" AllowEditing="false" AllowDeleting="false" Mode="Syncfusion.Blazor.Grids.EditMode.Normal"></GridEditSettings>
                                        <GridFilterSettings Type="Syncfusion.Blazor.Grids.FilterType.Menu"></GridFilterSettings>
                                        <GridPageSettings PageSizes="true"></GridPageSettings>
                                        <GridSelectionSettings Type="Syncfusion.Blazor.Grids.SelectionType.Multiple"></GridSelectionSettings>
                                        <GridColumns>
                                            <GridColumn Field=@nameof(ListProductsDto.Code) HeaderText="@L["ProductModalGridCode"]" TextAlign="TextAlign.Center" Width="120"></GridColumn>
                                            <GridColumn Field=@nameof(ListProductsDto.Name) HeaderText="@L["ProductModalGridName"]" TextAlign="TextAlign.Center" Width="120"></GridColumn>
                                        </GridColumns>

                                    </SfGrid>
                                </CardContent>
                                <CardFooter>
                                </CardFooter>
                            </SfCard>
                        </Template>
                    </DxGridLayoutItem>
                </GridLayoutItems>
            </DevGridLayout>

        </BodyTemplate>
        <FooterContentTemplate>
        </FooterContentTemplate>
    </DxPopup>
}


<style>
    @@keyframes TSIProgressBtnSpinnerRolling {
        0% {
            -webkit-transform: rotate(0deg);
            transform: rotate(0deg);
        }

        100% {
            -webkit-transform: rotate(360deg);
            transform: rotate(360deg);
        }
    }

    .TSIProgressSaveBtnSpinner {
        border: 3px solid black;
        border-style: groove;
        border-radius: 50%;
        border-top-color: transparent;
        border-bottom-color: transparent;
        height: 16px;
        width: 16px;
    }

    .TSIProgressSaveBtnSpinner {
        -webkit-animation: TSIProgressBtnSpinnerRolling 1.3s linear infinite;
        animation: TSIProgressBtnSpinnerRolling 1.3s linear infinite;
    }

    #target {
        max-height: 800px;
        height: 100%;
    }
</style>