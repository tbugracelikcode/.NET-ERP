@page "/insert-menu"
@using TsiErp.Business.Extensions.ObjectMapping;
@layout MainLayout


@inherits BaseListPage<SelectMenusDto, ListMenusDto, CreateMenusDto, UpdateMenusDto, ListMenusParameterDto>

@inject IMenusAppService Service
@inject IFicheNumbersAppService FicheNumbersAppService
@inject IUserPermissionsAppService UserPermissionsAppService
@inject IUsersAppService UsersAppService
@inject IGetSQLDateAppService GetSQLDateAppService


<div>
    <SfComboBox TValue="Guid" TItem="ComboData" Placeholder="e.g. Australia" DataSource="@list" @bind-Value="DataSource.ParentMenuId">

        <ComboBoxEvents TValue="Guid" TItem="ComboData" ValueChange="OnValueChange" />
        <ComboBoxFieldSettings Text="MenuName" Value="Id"></ComboBoxFieldSettings>
    </SfComboBox>

    <br />
    <br />
    <br />
    <br />

    <SfTextBox CssClass="TSIMemoBox100" @bind-Value="DataSource.MenuName"></SfTextBox>


    <br />
    <br />
    <br />
    <br />

    <SfSwitch @bind-Checked="IsFicheNumberInsert"></SfSwitch>

    <br />
    <br />
    <br />
    <br />

    <SfButton CssClass="TSISaveButton" OnClick="GiveAllPermisionstoAdmin"><SfIcon Size="IconSize.Medium" Name="IconName.Save"></SfIcon> Admini Yetkilendir</SfButton>

    <br />
    <br />
    <br />
    <br />

    <SfButton CssClass="TSISaveButton" OnClick="InsertMenu"><SfIcon Size="IconSize.Medium" Name="IconName.Save"></SfIcon></SfButton>

    
</div>



@code {

    bool IsFicheNumberInsert;


    List<ComboData> list = new List<ComboData>();

    protected override void OnInitialized()
    {
        DataSource = new SelectMenusDto();
        BaseCrudService = Service;
        GetMenus();
    }

    private async void GetMenus()
    {
        var menus = (await Service.GetListAsync(new ListMenusParameterDto())).Data.ToList();

        foreach (var item in menus)
        {
            if (!list.Any(t => t.MenuName == item.MenuName))
            {
                list.Add(new ComboData() { Id = item.Id, MenuName = item.MenuName });
            }
        }
    }

    private async void InsertMenu()
    {
        var insertedMenu = new CreateMenusDto()
            {
                MenuName = DataSource.MenuName,
                ParentMenuId = DataSource.ParentMenuId
            };

        await Service.CreateAsync(insertedMenu);

        if (IsFicheNumberInsert)
        {
            var ficheNumber = new CreateFicheNumbersDto()
                {
                    FicheNo = 1,
                    FixedCharacter = "",
                    Length_ = 6,
                    Menu_ = DataSource.MenuName
                };

            await FicheNumbersAppService.CreateAsync(ficheNumber);
        }

        DataSource = new SelectMenusDto();
        IsFicheNumberInsert = false;



        GetMenus();

        await InvokeAsync(StateHasChanged);
    }

    public void OnValueChange(Syncfusion.Blazor.DropDowns.ChangeEventArgs<Guid, ComboData> args)
    {

    }

    public async void GiveAllPermisionstoAdmin()
    {
        var menusList = (await Service.GetListAsync(new ListMenusParameterDto())).Data.ToList();

        var adminId = (await UsersAppService.GetListAsync(new ListUsersParameterDto())).Data.Where(t => t.UserName == "Admin" && t.NameSurname == "Admin").Select(t => t.Id).First();

        foreach (var menu in menusList)
        {
            SelectUserPermissionsDto permission = new SelectUserPermissionsDto
                {
                    IsUserPermitted = true,
                    MenuId = menu.Id,
                    UserId = adminId,
                };

            var createdPermission = ObjectMapper.Map<SelectUserPermissionsDto, CreateUserPermissionsDto>(permission);

            createdPermission.SelectUserPermissionsList = new List<SelectUserPermissionsDto>();

            createdPermission.SelectUserPermissionsList.Add(permission);

            await UserPermissionsAppService.CreateAsync(createdPermission);
        }
     }

    public class ComboData
    {
        public Guid Id { get; set; }

        public string MenuName { get; set; }
    }

   
}
