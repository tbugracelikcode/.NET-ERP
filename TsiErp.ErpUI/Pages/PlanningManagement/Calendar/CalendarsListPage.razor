@page "/calendars"
@layout MainLayout



@inherits BaseListPage<SelectCalendarsDto, ListCalendarsDto, CreateCalendarsDto, UpdateCalendarsDto, ListCalendarsParameterDto>
@inject IStringLocalizer<CalendarsResource> L


@inject ICalendarsAppService CalendarsService
@inject IStationsAppService StationsAppService
@inject IStationGroupsAppService StationGroupsAppService
@inject IShiftsAppService ShiftsAppService
@inject IFicheNumbersAppService FicheNumbersAppService
@inject IPlannedMaintenancesAppService PlannedMaintenancesAppService
@inject IProductsAppService ProductsAppService
@inject IUnitSetsAppService UnitSetsAppService
@inject IMaintenancePeriodsAppService MaintenancePeriodsAppService
@inject IMaintenanceInstructionsAppService MaintenanceInstructionsAppService

@{
    if (!base.IsLoaded)
    {
        <CircleLoading Caption="@base.LoadingCaption" Text="@base.LoadingText" />
    }
    else
    {
        <DevGridLayout ColumnCount="1" RowCount="3">
            <GridLayoutItems>
                <DxGridLayoutItem Row="0" Column="0" ColumnSpan="1">
                    <Template>
                        <SfCard class="TSIListPageTitleCard">
                            <CardContent>
                                <TsiBreadCrumb PreviousMenus=@L["UIPreviousMenu"] CurrentMenu=@L["UICurrentMenu"] />
                            </CardContent>
                            <CardFooter>
                            </CardFooter>
                        </SfCard>
                    </Template>
                </DxGridLayoutItem>
                <DxGridLayoutItem Row="2" Column="0" ColumnSpan="1">
                    <Template>
                        <SfCard class="TSIGridCards">
                            <CardContent>
                                <SfGrid ID="Grid" @ref="_grid" AllowPdfExport=true DataSource="@ListDataSource" ColumnMenuItems=@MenuItems ShowColumnMenu="true" AllowPaging="false" AllowFiltering="true" AllowReordering="true" AllowResizing="true" AllowGrouping="true" AllowExcelExport="true" AllowSelection="true" ShowColumnChooser="true" AllowSorting="true" Height="100%" Width="100%"
                                class="GridZebra" ContextMenuItems="@MainGridContextMenu" Toolbar=@GridToolbarItems>
                                    <GridGroupSettings ShowGroupedColumn="true"></GridGroupSettings>

                                    <GridEditSettings AllowAdding="false" AllowEditing="false" AllowDeleting="false"></GridEditSettings>
                                            <GridEvents ContextMenuItemClicked="@MainContextMenuClick" OnToolbarClick="@ToolbarClickHandler" TValue="ListCalendarsDto"></GridEvents>
                                    <GridFilterSettings Type="Syncfusion.Blazor.Grids.FilterType.Menu"></GridFilterSettings>
                                    <GridPageSettings PageSizes="true"></GridPageSettings>
                                    <GridSelectionSettings Type="Syncfusion.Blazor.Grids.SelectionType.Multiple"></GridSelectionSettings>
                                    <GridColumns>
                                        <GridColumn Field=@nameof(ListCalendarsDto.Code) HeaderText="@L["Code"]" TextAlign="TextAlign.Center" Width="120">
                                        </GridColumn>
                                        <GridColumn Field=@nameof(ListCalendarsDto.Name) HeaderText="@L["Name"]" TextAlign="TextAlign.Center" Width="120">

                                        </GridColumn>
                                        <GridColumn Field=@nameof(ListCalendarsDto.Year) HeaderText="@L["Year"]" TextAlign="TextAlign.Center" Width="120"></GridColumn>
                                        <GridColumn Field=@nameof(ListCalendarsDto.IsPlanned) HeaderText="@L["IsPlanned"]" DisplayAsCheckBox=true TextAlign="TextAlign.Center" Width="120"></GridColumn>

                                        <GridColumn Field=@nameof(ListCalendarsDto._Description) HeaderText="@L["_Description"]" TextAlign="TextAlign.Center" Width="120"></GridColumn>

                                    </GridColumns>
                                </SfGrid>
                            </CardContent>
                            <CardFooter>
                            </CardFooter>
                        </SfCard>
                    </Template>
                </DxGridLayoutItem>
            </GridLayoutItems>
        </DevGridLayout>

        <DxPopup @bind-Visible="base.EditPageVisible"
         ShowFooter="true"
         CloseOnEscape="false"
         CloseOnOutsideClick="false"
         HeaderText="@L["EditModalTitle"]"
         Width="720px"
         Height="880px"
         HeaderCssClass="HeaderTitleCss"
         Showing="CrudModalShowing"
         Closing="CrudModalClosing">
            <BodyTemplate>
                <DxGridLayout>
                    <Rows>
                        <DxGridLayoutRow Height="100px" />
                        <DxGridLayoutRow Height="70px" />
                        <DxGridLayoutRow Height="140px" />
                        <DxGridLayoutRow Height="60px" />
                        <DxGridLayoutRow Height="70px" />
                        <DxGridLayoutRow Height="270px" />
                    </Rows>
                    <Columns>
                        <DxGridLayoutColumn Width="40px" />
                        <DxGridLayoutColumn Width="300px" />
                        <DxGridLayoutColumn Width="40px" />
                        <DxGridLayoutColumn Width="300px" />
                        <DxGridLayoutColumn Width="40px" />
                    </Columns>
                    <Items>
                        <DxGridLayoutItem Row="0" Column="1">
                            <Template>
                                <br />
                                <label class="TSIModalLabel"><strong>@L["CodeLabel"] </strong></label>
                            <SfTextBox @ref="@CodeButtonEdit" Created="@CodeOnCreateIcon" @bind-Value="DataSource.Code" ShowClearButton=true></SfTextBox>
                            </Template>
                        </DxGridLayoutItem>
                        <DxGridLayoutItem Row="0" Column="3">
                            <Template>
                                <br />
                                <label class="TSIModalLabel"><strong>@L["NameLabel"] </strong></label>
                                <SfTextBox CssClass="TSITxtBox" @bind-Value="DataSource.Name" ></SfTextBox>
                            </Template>
                        </DxGridLayoutItem>
                        <DxGridLayoutItem Row="1" Column="1">
                            <Template>
                                <label class="TSIModalLabel"><strong>@L["DateLabel"] </strong></label>
                                <SfComboBox @ref="Years"
                                    TValue="int"
                                    TItem="int"
                                    CssClass="e-multi-column"
                                    Value="DataSource.Year"
                                    DataSource="@YearList"
                                    AllowFiltering="true"
                                    PopupWidth="300px"
                                    PopupHeight="350">

                                    <ComboBoxFieldSettings Text="Name" Value="Name"></ComboBoxFieldSettings>

                                    <ComboBoxTemplates TItem="int">
                                        <HeaderTemplate>
                                            <table>
                                                <tr>
                                                    <th class="e-text-center">@L["DateYear"]</th>
                                                </tr>
                                            </table>
                                        </HeaderTemplate>
                                        <ItemTemplate Context="cmbContext">

                                            <table>
                                                <tbody>
                                                    <tr>
                                                        <td class="e-text-center">@(cmbContext)</td>
                                                    </tr>
                                                </tbody>
                                            </table>
                                        </ItemTemplate>
                                    </ComboBoxTemplates>
                                    <ComboBoxEvents TValue="int"
                                            TItem="int"
                                            ValueChange="YearValueChangeHandler"></ComboBoxEvents>
                                </SfComboBox>
                            </Template>
                        </DxGridLayoutItem>
                        <DxGridLayoutItem Row="1" Column="3">
                            <Template>
                                <label class="TSIModalLabel"><strong>@L["IsPlannedLabel"]</strong></label><br />
                                <SfSwitch @bind-Checked="DataSource.IsPlanned"></SfSwitch>
                            </Template>
                        </DxGridLayoutItem>
                        <DxGridLayoutItem Row="2" Column="1">
                            <Template>
                                <label class="TSIModalLabel"><strong>@L["DescriptionLabel"] </strong></label><br />
                                <SfTextBox CssClass="TSIMemoBox100" @bind-Value="DataSource._Description"  Multiline="true"></SfTextBox>
                            </Template>
                        </DxGridLayoutItem>
                        <DxGridLayoutItem Row="4" Column="1">
                            <Template>
                                <label class="TSIModalLabel"><strong>@L["OfficialHolidayLabel"] </strong></label><br />
                                <SfDatePicker @bind-Value="officialHoliday"></SfDatePicker>
                            </Template>
                        </DxGridLayoutItem>
                        <DxGridLayoutItem Row="4" Column="3">
                            <Template>
                                <br />
                                <SfButton CssClass="TSISaveButton" OnClick="AddOfficialHoliday"><SfIcon Size="IconSize.Medium" Name="IconName.CommentAdd"></SfIcon>&nbsp;@L["CalendarContextAdd"]</SfButton>
                            </Template>
                        </DxGridLayoutItem>
                        <DxGridLayoutItem Row="5" Column="1" ColumnSpan="3">
                            <Template>
                                <SfGrid @ref=_daysGrid ID="DayGrid" ColumnMenuItems=@MenuItems ShowColumnMenu="true" DataSource="@GridDaysList" AllowPaging="false" AllowFiltering="false" AllowReordering="true" AllowResizing="true" AllowGrouping="false" AllowExcelExport="false" AllowSelection="true" AllowSorting="true" Height="100%" Width="100%" class="GridZebra" ContextMenuItems="@DayGridContextMenu">
                                    <GridEvents ContextMenuItemClicked="@OnDayContextMenuClick" TValue="SelectCalendarDaysDto"></GridEvents>
                                    <GridGroupSettings ShowGroupedColumn="true"></GridGroupSettings>

                                    <GridEditSettings AllowAdding="false" AllowEditing="false" AllowDeleting="false"></GridEditSettings>
                                    <GridFilterSettings Type="Syncfusion.Blazor.Grids.FilterType.Menu"></GridFilterSettings>
                                    <GridSelectionSettings Type="Syncfusion.Blazor.Grids.SelectionType.Multiple"></GridSelectionSettings>
                                    <GridColumns>
                                        <GridColumn Field=@nameof(SelectCalendarDaysDto.Date_) Format="dd-MM-yyyy" HeaderText="@L["CalendarDayDate"]" TextAlign="TextAlign.Center" Width="120"></GridColumn>
                                        <GridColumn Field=@nameof(SelectCalendarDaysDto.CalendarDayStateEnum) Type="ColumnType.String" Context="daycontext" HeaderText="@L["CalendarDayStateEnum"]" TextAlign="TextAlign.Center" Width="120">
                                            <Template>
                                                @{
                                                    string state = string.Empty;
                                                    int dayStateEnum = (daycontext as SelectCalendarDaysDto).CalendarDayStateEnum;

                                                    switch (dayStateEnum)
                                                    {
                                                        case 1: { state = @L["WorkExist"]; break; }
                                                        case 2: { state =@L["WorkNotExist"]; break; }
                                                        case 3: { state = @L["OfficialHoliday"]; break; }
                                                        case 4: { state = @L["Holiday"]; break; }
                                                        case 5: { state = @L["HalfDay"]; break; }
                                                        case 6: { state = @L["LoadingDay"]; break; }
                                                        case 7: { state = @L["UIMaintenancePreviousMenu"]; break; }
                                                        default: break;
                                                    }
                                            }
                                            @state
                                        </Template>
                                    </GridColumn>
                                </GridColumns>
                            </SfGrid>
                        </Template>
                    </DxGridLayoutItem>
                </Items>
            </DxGridLayout>
        </BodyTemplate>
        <FooterContentTemplate>
            <SfButton CssClass="TSISaveButton" OnClick="OnSubmit"><SfIcon Size="IconSize.Medium" Name="IconName.Save"></SfIcon>&nbsp;@L["SaveButton"]</SfButton>
            <SfButton CssClass="TSICancelButton" OnClick="HideEditPage"><SfIcon Size="IconSize.Medium" Name="IconName.Undo"></SfIcon>&nbsp;@L["CloseButton"]</SfButton>
        </FooterContentTemplate>
    </DxPopup>

        <DxPopup @bind-Visible="schedularVisible"
         ShowFooter="true"
         CloseOnEscape="false"
         CloseOnOutsideClick="false"
         HeaderText="@L["SchedularModalTitle"]"
         Width="90%"
         Height="85%"
         Scrollable="true"
         HeaderCssClass="HeaderTitleCss" Context="contextPopup">
            <BodyTemplate>
                <table>
                    <th style="width:75%">
                        <SfSchedule @ref="ScheduleObj" AllowMultiCellSelection="true" TValue="AppointmentData" @bind-SelectedDate="@CurrentDate" Width="100%" Height="650px">

                            <ScheduleResources>
                                <ScheduleResource TItem="ResourceData" TValue="int[]" DataSource="@ResourceList" Field="ResourceId" Title="Owner" Name="Owners" TextField="OwnerText" IdField="Id" ColorField="Color" AllowMultiple="true"></ScheduleResource>
                            </ScheduleResources>
                            <ScheduleEvents TValue="AppointmentData"  OnCellClick="OnCellClick"> </ScheduleEvents>
                            <ScheduleEventSettings DataSource="@DataSourceEvent">
                            </ScheduleEventSettings>

                            <ScheduleViews>
                                <ScheduleView Option="View.Year" FirstDayOfWeek="1"  ShowWeekNumber=true></ScheduleView>
                            </ScheduleViews>
                            <ScheduleTemplates Context="context">

                                <CellHeaderTemplate>

                                    @{

                                        DateTime currentDate = (context as TemplateContext).Date;

                                        var a = SchedularDaysList.Where(t => t.Date_ == currentDate).Select(t => t.CalendarDayStateEnum).FirstOrDefault();

                                        switch(a)
                                        {
                                            case 1:{
                                                    <span class="e-day" style="background-color:#00ff14">@currentDate.Day.ToString(CultureInfo.CurrentCulture)</span>
                                                    break;
                                                }
                                                case 2:{
                                                    <span class="e-day" style="background-color:#ff0000">@currentDate.Day.ToString(CultureInfo.CurrentCulture)</span>
                                                    break;
                                                }
                                                case 3:{
                                                    <span class="e-day" style="background-color:#6c757d">@currentDate.Day.ToString(CultureInfo.CurrentCulture)</span>
                                                    break;
                                                }
                                                case 4:{
                                                    <span class="e-day" style="background-color:#b75050ed">@currentDate.Day.ToString(CultureInfo.CurrentCulture)</span>
                                                    break;
                                                }
                                                case 5:{
                                                    <span class="e-day" style="background-color:#0089ff">@currentDate.Day.ToString(CultureInfo.CurrentCulture)</span>
                                                    break;
                                                }
                                                case 6:{
                                                    <span class="e-day" style="background-color:#ffeb00">@currentDate.Day.ToString(CultureInfo.CurrentCulture)</span>
                                                    break;
                                                }
                                                case 7:{
                                                    <span class="e-day" style="background-color:#ff8d00">@currentDate.Day.ToString(CultureInfo.CurrentCulture)</span>
                                                    break;
                                                }
                                                default:
                                                <span class="e-day" >@currentDate.Day.ToString(CultureInfo.CurrentCulture)</span>
                                                break;
                                        }

                                        

                                    }

                                </CellHeaderTemplate>


                            </ScheduleTemplates>
                        </SfSchedule>

                       

                    </th>
                    <th style="width:25%">
                        @* <table id='property' class='property-panel-table' style="width: 100%;">
                        //     <tbody>
                        //         <tr style="height: 50px">
                        //             <td style="width: 14%; text-align:left; padding-left:5%; ">
                        //                 <SfSwitch id="chcTumu" TChecked="bool" @bind-Checked="@chcTumu" ValueChange="@(()=>customChange("chcTumu"))"></SfSwitch><label for="chcTumu" style="padding-left:5%;"> Tümü</label>
                        //             </td>
                        //         </tr>
                        //         <tr style="height: 50px">
                        //             <td style="width: 14%; text-align:left; padding-left:5%; ">
                        //                 <SfSwitch id="chcCalismaVar" TChecked="bool" @bind-Checked="@chcCalismaVar" ValueChange="@(()=>customChange("chcDiger"))"></SfSwitch><label for="chcCalismaVar" style="padding-left:5%; color:#00ff14;"> Çalışma Var</label>
                        //             </td>
                        //         </tr>
                        //         <tr style="height: 50px">
                        //             <td style="width: 14%; text-align:left; padding-left:5%; ">
                        //                 <SfSwitch id="chcCalismaYok" TChecked="bool" @bind-Checked="@chcCalismaYok" ValueChange="@(()=>customChange("chcDiger"))"></SfSwitch><label for="chcCalismaYok" style="padding-left:5%; color:#ff0000;"> Çalışma Yok</label>
                        //             </td>
                        //         </tr>
                        //         <tr style="height: 50px">
                        //             <td style="width: 14%; text-align:left; padding-left:5%; ">
                        //                 <SfSwitch id="chcResmiTatil" TChecked="bool" @bind-Checked="@chcResmiTatil" ValueChange="@(()=>customChange("chcDiger"))">Resmi tatil</SfSwitch><label for="chcResmiTatil" style="padding-left:5%; color:#6c757d;"> Resmi Tatil</label>
                        //             </td>
                        //         </tr>
                        //         <tr style="height: 50px">
                        //             <td style="width: 14%; text-align:left; padding-left:5%; ">
                        //                 <SfSwitch id="chcTatil" TChecked="bool" @bind-Checked="@chcTatil" ValueChange="@(()=>customChange("chcDiger"))"></SfSwitch><label for="chcTatil" style="padding-left:5%; color:#b75050ed;"> Tatil</label>
                        //             </td>
                        //         </tr>
                        //         <tr style="height: 50px">
                        //             <td style="width: 14%; text-align:left; padding-left:5%; ">
                        //                 <SfSwitch id="chcYarimGun" TChecked="bool" @bind-Checked="@chcYarimGun" ValueChange="@(()=>customChange("chcDiger"))"></SfSwitch><label for="chcYarimGun" style="padding-left:5%; color:#0089ff;"> Yarım Gün</label>
                        //             </td>
                        //         </tr>
                        //         <tr style="height: 50px">
                        //             <td style="width: 14%; text-align:left; padding-left:5%; ">
                        //                 <SfSwitch id="chcYuklemeGunu" TChecked="bool" @bind-Checked="@chcYuklemeGunu" ValueChange="@(()=>customChange("chcDiger"))"></SfSwitch><label for="chcYuklemeGunu" style="padding-left:5%; color:#ffeb00;">Yükleme Günü</label>
                        //             </td>
                        //         </tr>
                        //         <tr style="height: 50px">
                        //             <td style="width: 14%; text-align:left; padding-left:5%; ">
                        //                 <SfSwitch id="chcBakim" TChecked="bool" @bind-Checked="@chcBakim" ValueChange="@(()=>customChange("chcDiger"))"></SfSwitch><label for="chcBakim" style="padding-left:5%; color:#ff8d00;"> Bakım</label>
                        //             </td>
                        //         </tr>
                        //     </tbody>
                        // </table>*@
                    </th>
                </table>
            </BodyTemplate>
            <FooterContentTemplate>
                <SfButton CssClass="TSICancelButton" OnClick="HideScheduleEditPage"><SfIcon Size="IconSize.Medium" Name="IconName.Undo"></SfIcon>&nbsp;@L["CloseButton"]</SfButton>
            </FooterContentTemplate>
        </DxPopup>

        <DxPopup Visible="StationsModalVisible"
         ShowFooter="true"
         CloseButtonClick="HideStationsModal"
         CloseOnEscape="false"
         CloseOnOutsideClick="false"
         HeaderText="@L["StationsModalTitle"]"
         Width="1600px"
         Height="fit-content"
         CssClass="TSIWorkSchduleModal"
         HeaderCssClass="HeaderTitleCss">

            <BodyTemplate>

                <table style="margin-top:2%">
                    <tr style="height:80%">
                        <td style="font-size:16px;padding-left:2%; width:20%"><strong>Tarih :</strong> @selectedDate</td>
                        <td style="width:80%">

                            @if (SelectedStations.Count != 0)
                            {
                                <div class="TSI_Paper">
                                    @foreach (var item in SelectedStations)
                                    {
                                        <div class="TSI_Chip" onclick="@(()=>Remove(item))">@item.Code<SfIcon Size="IconSize.Medium" Name="IconName.Trash"></SfIcon></div>
                                    }
                                </div>
                            }
                        </td>
                    </tr>
                    <tr style="height:20%">

                        <td style="width:50%">
                          <SfCheckBox Label="Tüm İstasyonları Ekle"  @onchange="OnAddAllStationsChange" @bind-Checked="isAllStationsChecked"></SfCheckBox>
                        </td>

                        <td style="width:50%">

                            <SfButton CssClass="TSISaveButton" OnClick="ShowLineModal"><SfIcon Size="IconSize.Medium" Name="IconName.Check"></SfIcon>&nbsp;@L["SelectedStationPlan"]</SfButton>

                        </td>


                    </tr>
                </table>
                <div class="control-section col-lg-11 card-control-section tile_layout" style="padding-left: 10%;">
                    <div class="row e-card-layout">
                        @foreach (var stationgroupname in StationGroupNameList)
                        {

                            <div class="col-lg-2 col-md-2 col-sm-4"  style="padding: 10px;text-align:left;  width: 31%;">
                               <center> <label class="TSIScheduleModalLabel">@stationgroupname</label></center>
                                <SfCard class="TSIWorkSchduleModalStationsCard">
                                    <CardContent>

                                        @{

                                            var tempStationList = StationsList.Where(t => t.StationGroup == stationgroupname).ToList();

                                            <div class="row" style="padding-top:10px;    padding-left: 5%;">
                                                <center>
                                                    <div class="control-section col-lg-11 card-control-section tile_layout">
                                                        <div class="row e-card-layout">
                                                            @if (StationsList != null)
                                                            {

                                                                @foreach (var item in tempStationList)
                                                                {
                                                                    int stawork = StationWorkStatusList.Where(t=>t.Date_ == selectedDate && t.StationID == item.Id).Select(t=>t.WorkStatus).FirstOrDefault();
                                                                    switch(stawork)
                                                                    {
                                                                        case 1:
                                                                          <div class="col-lg-2 col-md-2 col-sm-4" onclick="@(()=>OnSelectStation(item))" style="padding: 10px;text-align:left;  width: 31%;">
                                                                        <div id="card_sample_1" class="card_sample">
                                                                            <SfCard CssClass="TSIStationCards">
                                                                                <div style="background-color:#00ff14">
                                                                                    <br>
                                                                                    <center> <CardHeader Title="@item.Code" /></center>
                                                                                    <CardContent>
                                                                                        <ChildContent>
                                                                                        </ChildContent>
                                                                                    </CardContent>

                                                                                    <CardFooter>
                                                                                    </CardFooter>
                                                                                </div>
                                                                            </SfCard>


                                                                        </div>
                                                                    </div>
                                                                        break;
                                                                        case 2:
                                                                         <div class="col-lg-2 col-md-2 col-sm-4" onclick="@(()=>OnSelectStation(item))" style="padding: 10px;text-align:left;  width: 31%;">
                                                                        <div id="card_sample_1" class="card_sample">
                                                                            <SfCard CssClass="TSIStationCards">
                                                                                <div style="background-color:#ff0000">
                                                                                    <br>
                                                                                    <center> <CardHeader Title="@item.Code" /></center>
                                                                                    <CardContent>
                                                                                        <ChildContent>
                                                                                        </ChildContent>
                                                                                    </CardContent>

                                                                                    <CardFooter>
                                                                                    </CardFooter>
                                                                                </div>
                                                                            </SfCard>


                                                                        </div>
                                                                    </div>
                                                                        break;
                                                                        case 3:
                                                                         <div class="col-lg-2 col-md-2 col-sm-4" onclick="@(()=>OnSelectStation(item))" style="padding: 10px;text-align:left;  width: 31%;">
                                                                        <div id="card_sample_1" class="card_sample">
                                                                            <SfCard CssClass="TSIStationCards">
                                                                                <div style="background-color:#00ff14">
                                                                                    <br>
                                                                                    <center> <CardHeader Title="@item.Code" /></center>
                                                                                    <CardContent>
                                                                                        <ChildContent>
                                                                                        </ChildContent>
                                                                                    </CardContent>

                                                                                    <CardFooter>
                                                                                    </CardFooter>
                                                                                </div>
                                                                            </SfCard>


                                                                        </div>
                                                                    </div>
                                                                        break;
                                                                        case 4:
                                                                         <div class="col-lg-2 col-md-2 col-sm-4" onclick="@(()=>OnSelectStation(item))" style="padding: 10px;text-align:left;  width: 31%;">
                                                                        <div id="card_sample_1" class="card_sample">
                                                                            <SfCard CssClass="TSIStationCards">
                                                                                <div style="background-color:#00ff14">
                                                                                    <br>
                                                                                    <center> <CardHeader Title="@item.Code" /></center>
                                                                                    <CardContent>
                                                                                        <ChildContent>
                                                                                        </ChildContent>
                                                                                    </CardContent>

                                                                                    <CardFooter>
                                                                                    </CardFooter>
                                                                                </div>
                                                                            </SfCard>


                                                                        </div>
                                                                    </div>
                                                                        break;
                                                                        case 5:
                                                                         <div class="col-lg-2 col-md-2 col-sm-4" onclick="@(()=>OnSelectStation(item))" style="padding: 10px;text-align:left;  width: 31%;">
                                                                        <div id="card_sample_1" class="card_sample">
                                                                            <SfCard CssClass="TSIStationCards">
                                                                                <div style="background-color:#00ff14">
                                                                                    <br>
                                                                                    <center> <CardHeader Title="@item.Code" /></center>
                                                                                    <CardContent>
                                                                                        <ChildContent>
                                                                                        </ChildContent>
                                                                                    </CardContent>

                                                                                    <CardFooter>
                                                                                    </CardFooter>
                                                                                </div>
                                                                            </SfCard>


                                                                        </div>
                                                                    </div>
                                                                        break;
                                                                        default:
                                                                         <div class="col-lg-2 col-md-2 col-sm-4" onclick="@(()=>OnSelectStation(item))" style="padding: 10px;text-align:left;  width: 31%;">
                                                                        <div id="card_sample_1" class="card_sample">
                                                                            <SfCard CssClass="TSIStationCards">
                                                                                <div style="background-color:white">
                                                                                    <br>
                                                                                    <center> <CardHeader Title="@item.Code" /></center>
                                                                                    <CardContent>
                                                                                        <ChildContent>
                                                                                        </ChildContent>
                                                                                    </CardContent>

                                                                                    <CardFooter>
                                                                                    </CardFooter>
                                                                                </div>
                                                                            </SfCard>


                                                                        </div>
                                                                    </div>
                                                                            break;
                                                                    }
                                                                  

                                                                }
                                                            }



                                                        </div>
                                                    </div>
                                                </center>
                                            </div>
                                            <br />
                                        }

                                        <br />



                                    </CardContent>
                                    <CardFooter>
                                    <text class="TSISelectAllStationsCalendar" @onclick="@(()=>OnSelectAllStationsChange(stationgroupname))">@L["SelectAll"]</text>

                                    </CardFooter>
                                </SfCard>
                            </div>
                        }
                    </div>
                </div>
                

            </BodyTemplate>
            <FooterContentTemplate>
                <SfButton CssClass="TSICancelButton" OnClick="HideStationsModal"><SfIcon Size="IconSize.Medium" Name="IconName.Undo"></SfIcon>&nbsp;@L["CloseButton"]</SfButton>
            </FooterContentTemplate>
        </DxPopup>

        <DxPopup Visible="LineModalVisible"
         ShowFooter="true"
         CloseOnEscape="false"
         CloseOnOutsideClick="false"
         ShowCloseButton="false"
         HeaderText="@L["LineModalTitle"]"
         Width="89%"
         Height="74%"
         MinWidth="1750px"
         MinHeight="800px"
         HeaderCssClass="HeaderTitleCss">

            <BodyTemplate>

            <DxGridLayout CssClass="TSIGridLayout">

                <Rows>
                    <DxGridLayoutRow Height="11%" />
                    <DxGridLayoutRow Height="13%" />
                    <DxGridLayoutRow Height="70%" />
                </Rows>

                <Columns>
                    <DxGridLayoutColumn Width="3%" />
                    <DxGridLayoutColumn Width="15%" />
                    <DxGridLayoutColumn Width="3%" />
                    <DxGridLayoutColumn Width="15%" />
                    <DxGridLayoutColumn Width="3%" />
                    <DxGridLayoutColumn Width="15%" />
                    <DxGridLayoutColumn Width="43%" />
                    <DxGridLayoutColumn Width="3%" />

                </Columns>

                <Items>
                    <br />
                    <DxGridLayoutItem Row="0" Column="1">
                        <Template>
                            <label class="TSIModalLabel"><strong>@L["StartDateLineLabel"] </strong></label>
                            <SfTextBox  @bind-Value="@selectedDateStr" Enabled=false></SfTextBox>
                        </Template>
                    </DxGridLayoutItem>

                    <DxGridLayoutItem Row="0" Column="3">
                        <Template>
                           <label class="TSIModalLabel"><strong>@L["IsPlannedLineLabel"] </strong></label>
                    <br />
                            <SfSwitch @bind-Checked="DataSource.IsPlanned" Disabled=true  ></SfSwitch>
                        </Template>
                    </DxGridLayoutItem>

                    <DxGridLayoutItem Row="1" Column="1">
                        <Template>
                             <label class="TSIModalLabel"><strong>@L["EndDateLineLabel"] </strong></label>
                            <SfTextBox  @bind-Value="@selectedDateStr" Enabled=false></SfTextBox>
                        </Template>
                    </DxGridLayoutItem>

                    <DxGridLayoutItem Row="1" Column="3">
                        <Template>
                             <label class="TSIModalLabel"><strong>@L["WorkStatusLineLabel"] </strong></label>
                            <SfComboBox  TValue="string" TItem="WorkStates"  DataSource="@WorkStatesData">
                             <ComboBoxEvents TItem="WorkStates" TValue="string" ValueChange="@WorkStatesValueChangeHandler"></ComboBoxEvents>
    <ComboBoxFieldSettings Value="ID" Text="Text"></ComboBoxFieldSettings>
</SfComboBox>

                        </Template>
                    </DxGridLayoutItem>

                    <DxGridLayoutItem Row="1" Column="5">
                        <Template>
                        <br/>
                        
                <SfButton CssClass="TSISaveButton" OnClick="ShowMaintenanceInformationsButtonClicked"><SfIcon Size="IconSize.Medium" Name="IconName.Save"></SfIcon>&nbsp;@L["ShowMaintenanceInfosButton"]</SfButton>
                        </Template>
                    </DxGridLayoutItem>

                     <DxGridLayoutItem Row="2" Column="1" ColumnSpan="6">
                        <Template>
                            
                                <SfGrid ID="LineGrid" @ref=_LineGrid DataSource="@LineGridList" ColumnMenuItems=@MenuItems ShowColumnMenu="true" AllowPaging="false" AllowFiltering="true" AllowReordering="true" AllowResizing="true" AllowGrouping="true" AllowExcelExport="true" AllowSelection="true" ShowColumnChooser="true" AllowSorting="true" Height="100%" Width="100%"
                                class="GridZebra" ContextMenuItems="@LineGridContextMenu">
                                    <GridGroupSettings ShowGroupedColumn="true"></GridGroupSettings>

                                    <GridEditSettings AllowAdding="false" AllowEditing="false" AllowDeleting="false"></GridEditSettings>
                                    <GridEvents ContextMenuItemClicked="@OnLineContextMenuClick" TValue="SelectCalendarLinesDto"></GridEvents>
                                    <GridFilterSettings Type="Syncfusion.Blazor.Grids.FilterType.Menu"></GridFilterSettings>
                                    <GridPageSettings PageSizes="true"></GridPageSettings>
                                    <GridSelectionSettings Type="Syncfusion.Blazor.Grids.SelectionType.Single"></GridSelectionSettings>
                                    <GridColumns>

                                        <GridColumn Field=@nameof(SelectCalendarLinesDto.StationCode) HeaderText="@L["LineStationCode"]" TextAlign="TextAlign.Center" Width="140">
                                        </GridColumn>

                                         <GridColumn Field=@nameof(SelectCalendarLinesDto.StationName) HeaderText="@L["LineStationName"]" TextAlign="TextAlign.Center" Width="140">
                                        </GridColumn>

                                        <GridColumn Field=@nameof(SelectCalendarLinesDto.ShiftName) HeaderText="@L["LineShiftName"]" TextAlign="TextAlign.Center" Width="100"></GridColumn>
                                        
                                        <GridColumn Context="lineContext" Field=@nameof(SelectCalendarLinesDto.WorkStatus) Type="ColumnType.Number" HeaderText="@L["LineWorkStatus"]" TextAlign="TextAlign.Center" Width="150">
                                        <Template>
                                         
                                        @{
                                            if(lineContext != null){
                                              int status = (lineContext as SelectCalendarLinesDto).WorkStatus;
                                             switch(status)
                                             {
                                                 case 1: workStatus = @L["WorkExist"];break;
                                                 case 2: workStatus = @L["WorkNotExist"];break;
                                                 case 3: workStatus = @L["PartialProduction"];break;
                                                 case 4: workStatus = @L["PartialOperator"];break;
                                                 case 5: workStatus = @L["PartialFailure"];break;
                                                 default:break;
                                             }
                                            }
                                           
                                        }
                                        @workStatus
</Template>
                                        </GridColumn>

                                        <GridColumn Field=@nameof(SelectCalendarLinesDto.ShiftTime) Type="ColumnType.Number" HeaderText="@L["LineShiftTime"]" TextAlign="TextAlign.Center" Width="140">

                                        </GridColumn>
                                        <GridColumn Field=@nameof(SelectCalendarLinesDto.ShiftOverTime) Type="ColumnType.Number" HeaderText="@L["LineShitOvertime"]" TextAlign="TextAlign.Center" Width="180"></GridColumn>

                                        <GridColumn Field=@nameof(SelectCalendarLinesDto.PlannedHaltTimes) Type="ColumnType.Number" HeaderText="@L["LinePlannedHaltTimes"]" TextAlign="TextAlign.Center" Width="180"></GridColumn>
                                        
                                        <GridColumn Field=@nameof(SelectCalendarLinesDto.Date_) Type="ColumnType.Number" HeaderText="@L["LineDate"]" TextAlign="TextAlign.Center" Width="80"></GridColumn>
                                        
                                        <GridColumn Field=@nameof(SelectCalendarLinesDto.AvailableTime) Type="ColumnType.Number" HeaderText="@L["LineAvailableTime"]"  TextAlign="TextAlign.Center" Width="170"></GridColumn>

                                        @* <GridColumn Field=@nameof(SelectCalendarLinesDto.PlannedMaintenanceTime) Type="ColumnType.Number" HeaderText="@L["LinePlannedMaintenanceTime"]" TextAlign="TextAlign.Center" Width="170"></GridColumn>
                                        
                                          <GridColumn Field=@nameof(SelectCalendarLinesDto.MaintenanceType) HeaderText="@L["LineMaintenanceType"]" TextAlign="TextAlign.Center" Width="140">
                                         </GridColumn>*@
                                    </GridColumns>
                                </SfGrid>

                        </Template>
                    </DxGridLayoutItem>

                    

                </Items>
            </DxGridLayout>

                        

            </BodyTemplate>
            <FooterContentTemplate>
                <SfButton CssClass="TSISaveButton" OnClick="LineModalSave"><SfIcon Size="IconSize.Medium" Name="IconName.Save"></SfIcon>&nbsp;@L["SaveButton"]</SfButton>
                <SfButton CssClass="TSICancelButton" OnClick="HideLineModal"><SfIcon Size="IconSize.Medium" Name="IconName.Undo"></SfIcon>&nbsp;@L["CloseButton"]</SfButton>
            </FooterContentTemplate>
        </DxPopup>

        <DxPopup Visible="lineWorkStatusVisible"
         ShowFooter="true"
         CloseOnEscape="false"
         CloseOnOutsideClick="false"
         ShowCloseButton="false"
         HeaderText="@L["StationShiftModalTitle"]"
         Width="22%"
         Height="23%"
         MinWidth="380px"
         MinHeight="250px"
         HeaderCssClass="HeaderTitleCss">

            <BodyTemplate>

            <DxGridLayout CssClass="TSIGridLayout">

                <Rows>
                    <DxGridLayoutRow Height="80%" />
                </Rows>

                <Columns>
                    <DxGridLayoutColumn Width="11%" />
                    <DxGridLayoutColumn Width="78%" />
                    <DxGridLayoutColumn Width="11%" />

                </Columns>

                <Items>
                    <br />
                    <DxGridLayoutItem Row="0" Column="1">
                        <Template>
                        <br/>
                            <label class="TSIModalLabel"><strong>@L["WorkStateShiftStaLabel"] </strong></label>
                             <SfComboBox  TValue="string" TItem="WorkStates"  DataSource="@WorkStatesData">
                             <ComboBoxEvents TItem="WorkStates" TValue="string" ValueChange="@LineEditModalWorkStatesValueChangeHandler"></ComboBoxEvents>
    <ComboBoxFieldSettings Value="ID" Text="Text"></ComboBoxFieldSettings></SfComboBox>
                        </Template>
                    </DxGridLayoutItem>

                </Items>
            </DxGridLayout>

                        

            </BodyTemplate>
            <FooterContentTemplate>
                <SfButton CssClass="TSISaveButton" OnClick="LineEditModalSave"><SfIcon Size="IconSize.Medium" Name="IconName.Save"></SfIcon>&nbsp;@L["SaveButton"]</SfButton>
                <SfButton CssClass="TSICancelButton" OnClick="HideLineEditModal"><SfIcon Size="IconSize.Medium" Name="IconName.Undo"></SfIcon>&nbsp;@L["CloseButton"]</SfButton>
            </FooterContentTemplate>
        </DxPopup>

        <style>
                 .e-schedule .e-year-view .e-calendar-wrapper .e-month-calendar.e-calendar .e-other-month {
                     visibility: hidden !important;
                 }

                 .e-schedule .e-year-view .e-calendar-wrapper .e-month-calendar.e-calendar .e-header .e-title {
                     cursor: default !important;
                     background-color: white !important;
                 }

                 .e-schedule .e-year-view .e-calendar-wrapper .e-month-calendar.e-calendar .e-appointment, .e-schedule .e-year-view .e-calendar-wrapper .e-month-calendar.e-calendar .e-appointment-indicator {
                     visibility: hidden;
                 }

            @*.e-schedule .e-year-view .calismaVar {
        background: green !important;
    }

    .e-schedule .e-year-view .calismaYok {
        background: red !important;
    }

    .e-schedule .e-year-view .resmiTatil {
        background: yellow !important;
    }*@

        </style>
    }
}


    <DxPopup @bind-Visible="MaintenanceModalVisible"
         ShowFooter="true"
         CloseOnEscape="false"
         CloseOnOutsideClick="false"
         HeaderText="@L["PlannedMaintenanceModalTitle"]"
         Width="64%"
         Height="44%"
         MinWidth="1220px"
         MinHeight="470px"
         HeaderCssClass="HeaderTitleCss">
        <BodyTemplate>

            <DxGridLayout CssClass="TSIGridLayout">

                <Rows>
                    <DxGridLayoutRow Height="96%" />
                </Rows>

                <Columns>
                    <DxGridLayoutColumn Width="1%" />
                    <DxGridLayoutColumn Width="98%" />
                    <DxGridLayoutColumn Width="1%" />

                </Columns>

                <Items>
                    <br />
                    <DxGridLayoutItem Row="0" Column="1">
                        <Template>
                                    <SfGrid @ref=_MaintenanceGrid ID="MaintenanceGrid" DataSource="@PlannedMaintenanceList" ColumnMenuItems=@MenuItems ShowColumnMenu="true" AllowPaging="true" AllowFiltering="true" AllowReordering="true" AllowResizing="true" AllowGrouping="true" AllowExcelExport="true" AllowSelection="true" ShowColumnChooser="true" GridLines="GridLine.Both" AllowSorting="true" Height="100%" Width="100%" class="GridZebra"  ContextMenuItems="@MaintenanceGridContextMenu">
                                        <GridGroupSettings ShowGroupedColumn="true"></GridGroupSettings>

                                        <GridEvents ContextMenuItemClicked="@OnLineMaintenaceInfosContextMenuClick" TValue="ListPlannedMaintenancesDto"></GridEvents>
                                        <GridEditSettings AllowAdding="false" AllowEditing="false" AllowDeleting="false" Mode="Syncfusion.Blazor.Grids.EditMode.Normal"></GridEditSettings>
                                        <GridFilterSettings Type="Syncfusion.Blazor.Grids.FilterType.Menu"></GridFilterSettings>
                                        <GridPageSettings PageSizes="true"></GridPageSettings>
                                        <GridSelectionSettings Type="Syncfusion.Blazor.Grids.SelectionType.Single"></GridSelectionSettings>
                                        <GridColumns>
                                             <GridColumn Field=@nameof(ListPlannedMaintenancesDto.RegistrationNo) HeaderText="@L["MaintenanceModalRegistrationNo"]" TextAlign="TextAlign.Center" Width="120"></GridColumn>
                                    <GridColumn Field=@nameof(ListPlannedMaintenancesDto.StationCode) HeaderText="@L["MaintenanceModalStationCode"]" TextAlign="TextAlign.Center" Width="120"></GridColumn>
                                    <GridColumn Field=@nameof(ListPlannedMaintenancesDto.PeriodName) HeaderText="@L["MaintenanceModalPeriodName"]" TextAlign="TextAlign.Center" Width="120"></GridColumn>
                                    <GridColumn Field=@nameof(ListPlannedMaintenancesDto.Caregiver) HeaderText="@L["MaintenanceModalCaregiver"]" TextAlign="TextAlign.Center" Width="120"></GridColumn> 
                                    <GridColumn Field=@nameof(ListPlannedMaintenancesDto.StartDate) Format="dd.MM.yyyy" Type="ColumnType.DateTime" HeaderText="@L["MaintenanceModalStartDate"]" TextAlign="TextAlign.Center" Width="120" Context="maintenancecontext">
                                        <Template>
                                            @{
                                                var date = (maintenancecontext as ListPlannedMaintenancesDto).StartDate;
                                                string dateStr = string.Empty;

                                                if(date.GetValueOrDefault().Year!=1900)
                                                {
                                                    dateStr = date.GetValueOrDefault().ToShortDateString();
                                                }
                                            }
                                            @dateStr
                                        </Template>
                                    </GridColumn>
                                    <GridColumn Field=@nameof(ListPlannedMaintenancesDto.PlannedDate) Format="dd.MM.yyyy" Type="ColumnType.DateTime" HeaderText="@L["MaintenanceModalPlannedDate"]" TextAlign="TextAlign.Center" Width="120"></GridColumn>
                                        </GridColumns>
                                    </SfGrid>
                        </Template>
                    </DxGridLayoutItem>

                    

                </Items>
            </DxGridLayout>

        </BodyTemplate>
        <FooterContentTemplate>
            <SfButton CssClass="TSICancelButton" OnClick="HideMaintenanceModal"><SfIcon Size="IconSize.Medium" Name="IconName.Undo"></SfIcon>&nbsp;@L["CloseButton"]</SfButton>
        </FooterContentTemplate>
    </DxPopup>


<DxPopup @bind-Visible="MaintenanceCrudModalVisible"
         ShowFooter="true"
         CloseOnEscape="false"
         CloseOnOutsideClick="false"
         HeaderText="@L["MaintenanceCrudModalTitle"]"
         Width="67%"
         Height="65%"
         MinWidth="1160px"
         MinHeight="700px"
         HeaderCssClass="HeaderTitleCss">

        <BodyTemplate>
            <DxGridLayout CssClass="TSIGridLayout">

                <Rows>
                    <DxGridLayoutRow Height="15%" />
                    <DxGridLayoutRow Height="12%" />
                    <DxGridLayoutRow Height="12%" />
                    <DxGridLayoutRow Height="13%" />
                    <DxGridLayoutRow Height="40%" />
                </Rows>

                <Columns>
                    <DxGridLayoutColumn Width="3%" />
                    <DxGridLayoutColumn Width="21%" />
                    <DxGridLayoutColumn Width="3%" />
                    <DxGridLayoutColumn Width="21%" />
                    <DxGridLayoutColumn Width="3%" />
                    <DxGridLayoutColumn Width="21%" />
                    <DxGridLayoutColumn Width="3%" />
                    <DxGridLayoutColumn Width="22%" />
                    <DxGridLayoutColumn Width="3%" />

                </Columns>

                <Items>
                    <DxGridLayoutItem Row="0" Column="1">
                        <Template>
                            <br />
                            <label class="TSIModalLabel"><strong>@L["RegistrationNoLabel"] </strong></label>
                            @* <SfTextBox CssClass="TSITxtBox" @bind-Value="MaintenanceDataSource.Code"></SfTextBox> *@

                            <SfTextBox @ref="@CodeMaintenanceButtonEdit" Created="@CodeMaintenanceOnCreateIcon" @bind-Value="MaintenanceDataSource.RegistrationNo" ShowClearButton=true></SfTextBox>
                        </Template>
                    </DxGridLayoutItem>
                    <DxGridLayoutItem Row="0" Column="3">
                        <Template>
                            <br />
                            <label class="TSIModalLabel"><strong>@L["CaregiverLabel"] </strong></label>
                            <SfTextBox CssClass="TSITxtBox" @bind-Value="MaintenanceDataSource.Caregiver"></SfTextBox>
                        </Template>
                    </DxGridLayoutItem>
                    <DxGridLayoutItem Row="0" Column="5">
                        <Template>
                            <br />
                            <label class="TSIModalLabel"><strong>@L["PlannedDateLabel"] </strong></label><br />
                            <SfDatePicker @bind-Value="MaintenanceDataSource.PlannedDate"></SfDatePicker>
                        </Template>
                    </DxGridLayoutItem>
                    <DxGridLayoutItem Row="0" Column="7" RowSpan="2">
                        <Template>
                            <br />
                            <label class="TSIModalLabel"><strong>@L["Note_Label"] </strong></label><br />
                            <SfTextBox CssClass="TSIMemoBox57" @bind-Value="MaintenanceDataSource.Note_" Multiline=true ></SfTextBox>
                        </Template>
                    </DxGridLayoutItem>

                    <DxGridLayoutItem Row="1" Column="1">
                        <Template>
                            <label class="TSIModalLabel"><strong>@L["StationCodeLabel"] </strong></label><br />
                             <SfTextBox  @bind-Value="MaintenanceDataSource.StationCode"  Enabled=false></SfTextBox>
                        </Template>
                    </DxGridLayoutItem>

                    <DxGridLayoutItem Row="1" Column="3">
                        <Template>
                            <label class="TSIModalLabel"><strong>@L["NumberofCaregiversLabel"] </strong></label><br />
                            <SfNumericTextBox TValue="int" Min="0" @bind-Value="MaintenanceDataSource.NumberofCaregivers"></SfNumericTextBox>
                        </Template>
                    </DxGridLayoutItem>

                    <DxGridLayoutItem Row="1" Column="5">
                        <Template>
                            <label class="TSIModalLabel"><strong>@L["CompletionDateLabel"] </strong></label><br />
                            <SfDatePicker @bind-Value="MaintenanceDataSource.CompletionDate"></SfDatePicker>
                        </Template>
                    </DxGridLayoutItem>

                    <DxGridLayoutItem Row="2" Column="1">
                        <Template>
                            <label class="TSIModalLabel"><strong>@L["PeriodNameLabel"] </strong></label><br />
                            <SfTextBox @ref="@MaintenancePeriodsButtonEdit" Created="@MaintenancePeriodsOnCreateIcon" @bind-Value="MaintenanceDataSource.PeriodName" ShowClearButton=true ValueChange="MaintenancePeriodsOnValueChange"></SfTextBox>
                        </Template>
                    </DxGridLayoutItem>


                    <DxGridLayoutItem Row="2" Column="3">
                        <Template>
                            <label class="TSIModalLabel"><strong>@L["PlannedTimeLabel"] </strong></label><br />
                            <SfNumericTextBox TValue="decimal" Min="0" @bind-Value="MaintenanceDataSource.PlannedTime"></SfNumericTextBox>
                        </Template>
                    </DxGridLayoutItem>

                    <DxGridLayoutItem Row="2" Column="5">
                        <Template>
                            <label class="TSIModalLabel"><strong>@L["RemainingTimeLabel"] </strong></label><br />
                            <SfNumericTextBox TValue="decimal" Min="0" @bind-Value="MaintenanceDataSource.RemainingTime"></SfNumericTextBox>
                        </Template>
                    </DxGridLayoutItem>

                      <DxGridLayoutItem Row="3" Column="1">
                        <Template>
                            <label class="TSIModalLabel"><strong>@L["PeriodTimeLabel"] </strong></label><br />
                            <SfNumericTextBox TValue="decimal" Min="0" @bind-Value="MaintenanceDataSource.PeriodTime" Enabled=false></SfNumericTextBox>
                        </Template>
                    </DxGridLayoutItem>

                    <DxGridLayoutItem Row="3" Column="3">
                        <Template>
                            <label class="TSIModalLabel"><strong>@L["StartDateLabel"] </strong></label><br />
                            <SfDatePicker @bind-Value="MaintenanceDataSource.StartDate"></SfDatePicker>
                        </Template>
                    </DxGridLayoutItem>

                     <DxGridLayoutItem Row="3" Column="5">
                        <Template>
                            <label class="TSIModalLabel"><strong>@L["OccuredTimeLabel"] </strong></label><br />
                            <SfNumericTextBox TValue="decimal" Enabled=false Min="0" @bind-Value="MaintenanceDataSource.OccuredTime"></SfNumericTextBox>
                        </Template>
                    </DxGridLayoutItem>

                    <DxGridLayoutItem Row="3" Column="7">
                        <Template>
                            <label class="TSIModalLabel"><strong>@L["StatusLabel"] </strong></label><br />
                            <SfDropDownList TItem="SelectPlannedMaintenancesDto" TValue="PlannedMaintenanceStateEnum" PopupHeight="230px" @bind-Value="@MaintenanceDataSource.Status" DataSource="@status">
                                <DropDownListFieldSettings Text="StatusName" Value="Status"></DropDownListFieldSettings>
                            </SfDropDownList>
                        </Template>
                    </DxGridLayoutItem>

                    <DxGridLayoutItem Row="4" Column="1" ColumnSpan="7">
                        <Template>
                            <SfGrid @ref=_MaintenanceLineGrid ID="MaintenanceLineGrid" ColumnMenuItems=@MenuItems ShowColumnMenu="true" DataSource="@PlannedMaintenanceLineList" AllowPaging="false" AllowFiltering="false" AllowReordering="true" AllowResizing="true" AllowGrouping="false" AllowExcelExport="false" AllowSelection="true" AllowSorting="true" Height="100%" Width="100%" class="GridZebra" ContextMenuItems="@MaintenanceLineGridContextMenu">
                                <GridEvents ContextMenuItemClicked="@OnListMaintenaceInfosContextMenuClick" TValue="SelectPlannedMaintenanceLinesDto"></GridEvents>
                                <GridGroupSettings ShowGroupedColumn="true"></GridGroupSettings>

                                <GridEditSettings AllowAdding="false" AllowEditing="false" AllowDeleting="false" Mode="Syncfusion.Blazor.Grids.EditMode.Normal"></GridEditSettings>
                                <GridFilterSettings Type="Syncfusion.Blazor.Grids.FilterType.Menu"></GridFilterSettings>
                                <GridSelectionSettings Type="Syncfusion.Blazor.Grids.SelectionType.Single"></GridSelectionSettings>
                                <GridColumns>
                                    <GridColumn Field=@nameof(SelectPlannedMaintenanceLinesDto.LineNr) Type="ColumnType.Number" HeaderText="@L["LineGridLineNr"]" TextAlign="TextAlign.Center" Width="120"></GridColumn>
                                    <GridColumn Field=@nameof(SelectPlannedMaintenanceLinesDto.ProductCode) HeaderText="@L["LineGridProductCode"]" TextAlign="TextAlign.Center" Width="120"></GridColumn>
                                    <GridColumn Field=@nameof(SelectPlannedMaintenanceLinesDto.UnitSetCode) HeaderText="@L["LineGridUnitSetCode"]" TextAlign="TextAlign.Center" Width="120"></GridColumn>
                                    <GridColumn Field=@nameof(SelectPlannedMaintenanceLinesDto.Amount) Format="N2" Type="ColumnType.Number" HeaderText="@L["LineGridAmount"]" TextAlign="TextAlign.Center" Width="120"></GridColumn>
                                    <GridColumn Field=@nameof(SelectPlannedMaintenanceLinesDto.InstructionDescription) HeaderText="@L["LineGridInstructionDescription"]" TextAlign="TextAlign.Center" Width="400"></GridColumn>
                                    <GridColumn Field=@nameof(SelectPlannedMaintenanceLinesDto.MaintenanceNote) HeaderText="@L["LineGridMaintenanceNote"]" TextAlign="TextAlign.Center" Width="400"></GridColumn>
                                </GridColumns>
                            </SfGrid>
                        </Template>
                    </DxGridLayoutItem>


                </Items>
            </DxGridLayout>
        </BodyTemplate>
        <FooterContentTemplate>
            <SfButton CssClass="TSISaveButton" OnClick="OnMaintenanceSubmit"><SfIcon Size="IconSize.Medium" Name="IconName.Save"></SfIcon>&nbsp;@L["SaveButton"]</SfButton>
            <SfButton CssClass="TSICancelButton" OnClick="HideMaintenanceCrudModal"><SfIcon Size="IconSize.Medium" Name="IconName.Undo"></SfIcon>&nbsp;@L["CloseButton"]</SfButton>
        </FooterContentTemplate>
    </DxPopup>

    <DxPopup @bind-Visible="MaintenanceLineCrudModalVisible"
         ShowFooter="true"
         CloseOnEscape="false"
         CloseOnOutsideClick="false"
         HeaderText="@L["MaintenanceLineEditModalTitle"]"
         Width="42%"
         Height="52%"
         MinWidth="720px"
         MinHeight="550px"
         HeaderCssClass="HeaderTitleCss">

        <BodyTemplate>
            <DxGridLayout CssClass="TSIGridLayout">

                <Rows>
                    <DxGridLayoutRow Height="20%" />
                    <DxGridLayoutRow Height="15%" />
                    <DxGridLayoutRow Height="30%" />
                    <DxGridLayoutRow Height="30%" />
                </Rows>

                <Columns>
                   <DxGridLayoutColumn Width="4%" />
                    <DxGridLayoutColumn Width="44%" />
                    <DxGridLayoutColumn Width="4%" />
                    <DxGridLayoutColumn Width="44%" />
                    <DxGridLayoutColumn Width="4%" />
                </Columns>

                <Items>
                    <br />
                    <DxGridLayoutItem Row="0" Column="1">
                        <Template>
                            <label class="TSIModalLabel"><strong>@L["ProductCodeLineLabel"] </strong></label>
                            <SfTextBox Enabled=false @bind-Value="MaintenanceLineDataSource.ProductCode"></SfTextBox>
                        </Template>
                    </DxGridLayoutItem>

                        <DxGridLayoutItem Row="0" Column="3">
                        <Template>
                            <label class="TSIModalLabel"><strong>@L["ProductNameLineLabel"] </strong></label>
                            <SfTextBox  Enabled=false @bind-Value="MaintenanceLineDataSource.ProductName" ></SfTextBox>
                        </Template>
                    </DxGridLayoutItem>

                    <DxGridLayoutItem Row="1" Column="1">
                        <Template>
                            <label class="TSIModalLabel"><strong>@L["UnitSetCodeLineLabel"] </strong></label><br />
                             <SfTextBox Enabled=false @bind-Value="MaintenanceLineDataSource.UnitSetCode"></SfTextBox>
                        </Template>
                    </DxGridLayoutItem>

                    <DxGridLayoutItem Row="1" Column="3">
                        <Template>
                            <label class="TSIModalLabel"><strong>@L["AmountLineLabel"] </strong></label><br />
                             <SfNumericTextBox Min="0" TValue="decimal" CssClass="TSITxtBox" Enabled=false @bind-Value="MaintenanceLineDataSource.Amount"></SfNumericTextBox>
                        </Template>
                    </DxGridLayoutItem>

                    <DxGridLayoutItem Row="2" Column="1" ColumnSpan="3">
                        <Template>
                            <label class="TSIModalLabel"><strong>@L["InstructionDescriptionLineLabel"] </strong></label><br />
                            <SfTextBox @bind-Value="MaintenanceLineDataSource.InstructionDescription" CssClass="TSIMemoBox70" Enabled=false Multiline=true></SfTextBox>
                        </Template>
                    </DxGridLayoutItem>

                     <DxGridLayoutItem Row="3" Column="1" ColumnSpan="3">
                        <Template>
                            <label class="TSIModalLabel"><strong>@L["MaintenanceNoteLineLabel"] </strong></label><br />
                            <SfTextBox @bind-Value="MaintenanceLineDataSource.MaintenanceNote" CssClass="TSIMemoBox70" Multiline=true></SfTextBox>
                        </Template>
                    </DxGridLayoutItem>

            
                </Items>
            </DxGridLayout>
        </BodyTemplate>
        <FooterContentTemplate>
            <SfButton CssClass="TSISaveButton" OnClick="OnMaintenanceLineSubmit"><SfIcon Size="IconSize.Medium" Name="IconName.Save"></SfIcon>&nbsp;@L["SaveButton"]</SfButton>
            <SfButton CssClass="TSICancelButton" OnClick="HideMaintenanceLineModal"><SfIcon Size="IconSize.Medium" Name="IconName.Undo"></SfIcon>&nbsp;@L["CloseButton"]</SfButton>
        </FooterContentTemplate>
    </DxPopup>
}

