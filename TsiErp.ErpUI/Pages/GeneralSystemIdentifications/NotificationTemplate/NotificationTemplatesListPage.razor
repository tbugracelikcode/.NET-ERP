@page "/notification-templates"
@layout MainLayout


@inherits BaseListPage<SelectNotificationTemplatesDto, ListNotificationTemplatesDto, CreateNotificationTemplatesDto, UpdateNotificationTemplatesDto, ListNotificationTemplatesParameterDto>



@inject INotificationTemplatesAppService NotificationTemplatesService
@inject IStringLocalizer<NotificationTemplatesResource> L
@inject IFicheNumbersAppService FicheNumbersAppService
@inject IUserPermissionsAppService UserPermissionsAppService
@inject IEmployeesAppService EmployeesAppService
@inject IMenusAppService MenusAppService
@inject IDepartmentsAppService DepartmentsAppService
@inject IUsersAppService UsersAppService
@inject IUserGroupsAppService UserGroupsAppService
@inject INotificationsAppService NotificationsAppService

@if (!base.IsLoaded)
{
    <CircleLoading Caption="@base.LoadingCaption" Text="@base.LoadingText" />
}
else
{
    <DevGridLayout ColumnCount="1" RowCount="3" RowHeights="@RowHeights("*")">
        <GridLayoutItems>
            <DxGridLayoutItem Row="0" Column="0" ColumnSpan="1">
                <Template>
                    <SfCard class="TSIListPageTitleCard">
                        <CardContent>
                            <TsiBreadCrumb PreviousMenus="@L["UIPreviousMenu"]" CurrentMenu="@L["UICurrentMenu"]" />
                        </CardContent>
                        <CardFooter>
                        </CardFooter>
                    </SfCard>
                </Template>
            </DxGridLayoutItem>
            <DxGridLayoutItem Row="2" Column="0" ColumnSpan="1">
                <Template>
                    <SfCard class="TSIGridCards">

                        <CardContent>
                            <SfGrid ID="Grid" @ref="_grid" AllowPdfExport=true ColumnMenuItems=@MenuItems ShowColumnMenu="true" DataSource="@ListDataSource" AllowPaging="false" AllowFiltering="true" AllowReordering="true" AllowResizing="true" AllowGrouping="true" AllowExcelExport="true" ShowColumnChooser="true" GridLines="GridLine.Both" AllowSelection="true" AllowSorting="true" Height="100%" Width="100%" class="GridZebra" ContextMenuItems="@GridContextMenu" Toolbar=@GridToolbarItems>

                                <GridEvents ContextMenuItemClicked="@OnContextMenuClick" OnToolbarClick="@ToolbarClickHandler" TValue="ListNotificationTemplatesDto"></GridEvents>
                                <GridGroupSettings ShowGroupedColumn="true"></GridGroupSettings>
                                <GridEditSettings AllowAdding="false" AllowEditing="false" AllowDeleting="false" Mode="Syncfusion.Blazor.Grids.EditMode.Normal"></GridEditSettings>
                                <GridFilterSettings Type="Syncfusion.Blazor.Grids.FilterType.Menu"></GridFilterSettings>
                                <GridPageSettings PageSizes="true"></GridPageSettings>
                                <GridSelectionSettings Type="Syncfusion.Blazor.Grids.SelectionType.Multiple"></GridSelectionSettings>
                                <GridColumns>
                                    <GridColumn Field=@nameof(ListNotificationTemplatesDto.Name) HeaderText=@L["Name"] TextAlign="TextAlign.Center" Width="220"></GridColumn>
                                    <GridColumn Field=@nameof(ListNotificationTemplatesDto.ModuleName_) HeaderText="@L["ModuleName_"]" TextAlign="TextAlign.Center" Width="220">
                                        <Template>
                                            @{
                                                string ModuleName = L[(context as ListNotificationTemplatesDto).ModuleName_];
                                            }
                                            @ModuleName
                                        </Template>
                                    </GridColumn>

                                    <GridColumn Field=@nameof(ListNotificationTemplatesDto.ProcessName_) HeaderText=@L["ProcessName_"] TextAlign="TextAlign.Center" Width="220">
                                        <Template>
                                            @{
                                                string ProcessName = L[(context as ListNotificationTemplatesDto).ProcessName_];
                                            }
                                            @ProcessName
                                        </Template>
                                    </GridColumn>@* 

                                    <GridColumn Field=@nameof(ListNotificationTemplatesDto.TargetDepartmentId) HeaderText=@L["TargetDepartmentId"] TextAlign="TextAlign.Center" Width="220"></GridColumn> *@

                                    <GridColumn Field=@nameof(ListNotificationTemplatesDto.ContextMenuName_) HeaderText=@L["ContextMenuName_"] TextAlign="TextAlign.Center" Width="220">
                                        <Template>
                                            @{
                                                string ContextName = L[(context as ListNotificationTemplatesDto).ContextMenuName_];
                                            }
                                            @ContextName
                                        </Template>
                                    </GridColumn>
@* 
                                    <GridColumn Field=@nameof(ListNotificationTemplatesDto.TargetUsersId) HeaderText=@L["TargetUsersId"] TextAlign="TextAlign.Center" Width="280"></GridColumn> *@

                                    <GridColumn Field=@nameof(ListNotificationTemplatesDto.IsActive) HeaderText=@L["IsActive"] DisplayAsCheckBox="true" TextAlign="TextAlign.Center" Width="200"></GridColumn>
                                </GridColumns>
                            </SfGrid>
                        </CardContent>
                        <CardFooter>
                        </CardFooter>
                    </SfCard>
                </Template>
            </DxGridLayoutItem>
        </GridLayoutItems>
    </DevGridLayout>


    <DxPopup @bind-Visible="base.EditPageVisible"
             ShowFooter="true"
             CloseOnEscape="false"
             CloseOnOutsideClick="false"
             HeaderText="@L["EditModalTitle"]"
             Width="50%"
             Height="32%"
             MinWidth="650px"
             MinHeight="350px"
             HeaderCssClass="HeaderTitleCss"
             Showing="CrudModalShowing"
             Closing="CrudModalClosing">

        <BodyTemplate>
            <DxGridLayout CssClass="TSIGridLayout">

                <Rows>
                    <DxGridLayoutRow Height="30%" />
                    <DxGridLayoutRow Height="26%" />
                    <DxGridLayoutRow Height="21%" />
                </Rows>

                <Columns>
                    <DxGridLayoutColumn Width="4%" />
                    <DxGridLayoutColumn Width="28%" />
                    <DxGridLayoutColumn Width="4%" />
                    <DxGridLayoutColumn Width="28%" />
                    <DxGridLayoutColumn Width="4%" />
                    <DxGridLayoutColumn Width="28%" />
                    <DxGridLayoutColumn Width="4%" />
                </Columns>

                <Items>
                    <br />
                    <DxGridLayoutItem Row="0" Column="1">
                        <Template>
                            <label class="TSIModalLabel"><strong>@L["NameLabel"] </strong></label>
                            <SfTextBox  @bind-Value="DataSource.Name" ></SfTextBox>
                        </Template>
                    </DxGridLayoutItem>
                    <DxGridLayoutItem Row="0" Column="3">
                        <Template>

                            <label class="TSIModalLabel"><strong>@L["ModuleName_Label"] </strong></label>
                            <SfComboBox AllowCustom="false" Index="moduleIndex" TValue="string" TItem="ModuleClass" PopupHeight="230px" DataSource="@ModuleList">
                                <ComboBoxEvents TItem="ModuleClass" TValue="string" ValueChange="@ModuleNameValueChangeHandler"></ComboBoxEvents>
                                <ComboBoxFieldSettings Text="MenuName" Value="Id" />
                            </SfComboBox>
                        </Template>
                    </DxGridLayoutItem>

                    <DxGridLayoutItem Row="0" Column="5">
                        <Template>
                            <label class="TSIModalLabel"><strong>@L["ProcessName_Label"] </strong></label>
                            <SfComboBox AllowCustom="false" Index="processIndex" TValue="string" TItem="ProcessName_ComboBox" DataSource="@processName_ComboBox">
                                <ComboBoxEvents TItem="ProcessName_ComboBox" TValue="string" ValueChange="@ProcessName_ComboBoxValueChangeHandler"></ComboBoxEvents>
                                <ComboBoxFieldSettings Value="ID" Text="Text"></ComboBoxFieldSettings>
                            </SfComboBox>
                        </Template>
                    </DxGridLayoutItem>
                    <DxGridLayoutItem Row="1" Column="1">
                        <Template>
                            <label class="TSIModalLabel"><strong>@L["SourceDepartmentIdLabel"] </strong></label>
                            <SfTextBox Enabled=false CssClass="TSITxtBox" @bind-Value="DataSource.SourceDepartmentName"></SfTextBox>
                        </Template>
                    </DxGridLayoutItem>
                    <DxGridLayoutItem Row="1" Column="3">
                        <Template>
                            <label class="TSIModalLabel"><strong>@L["TargetDepartmentIdLabel"] </strong></label><br />

                        <SfMultiSelect @bind-Value="@BindingEmployees"
                                           DataSource="@MultiEmployeesList"
                                           AllowFiltering=true
                                           Mode="VisualMode.CheckBox"
                                           ShowSelectAll=true
                                           SelectAllText=@L["SelectAllText"]
                                           UnSelectAllText=@L["UnSelectAllText"]
                                           ShowDropDownIcon="true"
                                           EnableGroupCheckBox="true" CssClass="TSIMultiSelectGroupComboBox">

                                <MultiSelectFieldSettings   GroupBy="GroupName" Text="UserName" Value="Id"></MultiSelectFieldSettings>
                            </SfMultiSelect>

                        </Template>
                    </DxGridLayoutItem>

                    <DxGridLayoutItem Row="1" Column="5">
                        <Template>
                            <label class="TSIModalLabel"><strong>@L["ContextMenuName_Label"] </strong></label>
                            <SfComboBox AllowCustom="false" Index="contextIndex" TValue="string" TItem="ModuleContextClass" DataSource="@ModuleContextsList">
                                <ComboBoxEvents TItem="ModuleContextClass" TValue="string" ValueChange="@ModuleContextValueChangeHandler"></ComboBoxEvents>
                                <ComboBoxFieldSettings Value="Id" Text="MenuName"></ComboBoxFieldSettings>
                            </SfComboBox>
                        </Template>
                    </DxGridLayoutItem>
                   

                    <DxGridLayoutItem Row="2" Column="3">
                        <Template>
                            <br /><center>
                                <label class="TSIModalLabel"><strong>@L["IsActiveLabel"] </strong></label><br />
                                <SfSwitch @bind-Checked="DataSource.IsActive"></SfSwitch>
                            </center>
                        </Template>
                    </DxGridLayoutItem>
                </Items>
            </DxGridLayout>
        </BodyTemplate>
        <FooterContentTemplate>
            <SfButton CssClass="TSISaveButton" OnClick="OnSubmit"><SfIcon Size="IconSize.Medium" Name="IconName.Save"></SfIcon>&nbsp;@L["SaveButton"]</SfButton>
            <SfButton CssClass="TSICancelButton" OnClick="HideEditPage"><SfIcon Size="IconSize.Medium" Name="IconName.Undo"></SfIcon>&nbsp;@L["CloseButton"]</SfButton>
        </FooterContentTemplate>
    </DxPopup>

}