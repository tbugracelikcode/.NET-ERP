@page "/home"
@layout MainLayout



@inject IPurchasingUnsuitabilityItemsAppService PurchasingUnsuitabilityItemsAppService
@inject IEmployeesAppService EmployeesAppService

@*<DevGridLayout ColumnCount="4" RowCount="6" RowHeights="@RowHeights("*")">
    <GridLayoutItems>
        <DxGridLayoutItem Column="0" Row="0" ColumnSpan="2">
            <Template>
                <SfCard class="TSIIndexPageCards">
                    <CardHeader>
                    </CardHeader>
                    <CardContent>
                        <SfChart Title="Satın Alma Uygunsuzluk Tespiti">
                            <ChartPrimaryXAxis LabelIntersectAction="LabelIntersectAction.Wrap" ValueType="Syncfusion.Blazor.Charts.ValueType.Category"></ChartPrimaryXAxis>
                            <ChartSeriesCollection>
                                <ChartSeries DataSource="@_purchaseUnsuitabilityList" XName="Name" YName="Detection" Type="Syncfusion.Blazor.Charts.ChartSeriesType.Line">
                                </ChartSeries>
                            </ChartSeriesCollection>
                        </SfChart>
                    </CardContent>
                    <CardFooter>
                    </CardFooter>
                </SfCard>
            </Template>
        </DxGridLayoutItem>

        <DxGridLayoutItem Column="2" Row="0" ColumnSpan="2">
            <Template>

                <table>
                    <tr style="height:59%">
                        <th>
                            <SfCard class="TSIIndexPageCards" style="height:100% !important; width:90%">
                                <CardHeader>
                                </CardHeader>
                                <CardContent>
                                    <SfRangeNavigator ValueType="RangeValueType.DateTime" IntervalType="RangeIntervalType.Years" LabelFormat="yyyy">
                                        <RangeNavigatorSeriesCollection>
                                            <RangeNavigatorSeries DataSource="@StockDetails" XName="Date" Type="RangeNavigatorType.Area" YName="Close"></RangeNavigatorSeries>
                                        </RangeNavigatorSeriesCollection>
                                    </SfRangeNavigator>
                                </CardContent>
                                <CardFooter>
                                </CardFooter>
                            </SfCard>
                        </th>
                    </tr>
                    <tr style="height:2%">
                        <th>

                        </th>
                    </tr>

                    <tr style="height:39%">
                        <th>
                            <SfCard class="TSIIndexPageCards" style="height:100% !important; width:90%">
                                <CardHeader>
                                </CardHeader>
                                <CardContent>
                                    <SfGrid ID="grid" DataSource="@_employeeList">
                                        <GridPageSettings></GridPageSettings>
                                        <GridColumns>
                                            <GridColumn Field=@nameof(ListEmployeesDto.Name) HeaderText="Çalışan Adı" TextAlign="Syncfusion.Blazor.Grids.TextAlign.Left" Width="120">
                                                <Template>
                                                    @{
                                                        var a = (context as ListEmployeesDto);
                                                        string nameSurname = a.Name + " " + a.Surname;
                                                    }
                                                    @nameSurname
                                                </Template>
                                            </GridColumn>
                                            <GridColumn Field=@nameof(ListEmployeesDto.Code) HeaderText="Çalışan Kodu" Width="50"></GridColumn>
                                            <GridColumn Field=@nameof(ListEmployeesDto.Email) HeaderText="E-Posta" Type="ColumnType.String" TextAlign="Syncfusion.Blazor.Grids.TextAlign.Left" Width="150"></GridColumn>
                                            <GridColumn Field=@nameof(ListEmployeesDto.Department) HeaderText="Departman" TextAlign="Syncfusion.Blazor.Grids.TextAlign.Left" Width="120"></GridColumn>
                                        </GridColumns>
                                    </SfGrid>
                                </CardContent>
                                <CardFooter>
                                </CardFooter>
                            </SfCard>
                        </th>
                    </tr>
                </table>



            </Template>
        </DxGridLayoutItem>

        <DxGridLayoutItem Column="0" Row="2" ColumnSpan="2">
            <Template>
                <SfCard class="TSIIndexPageCards">
                    <CardHeader>
                    </CardHeader>
                    <CardContent>
                        <SfChart Title="Olympic Medals">
                            <ChartPrimaryXAxis ValueType="Syncfusion.Blazor.Charts.ValueType.Category">
                            </ChartPrimaryXAxis>

                            <ChartSeriesCollection>
                                <ChartSeries DataSource="@MedalDetailsBar" XName="Country" YName="Gold" Type="Syncfusion.Blazor.Charts.ChartSeriesType.Bar">
                                </ChartSeries>
                            </ChartSeriesCollection>
                        </SfChart>
                    </CardContent>
                    <CardFooter>
                    </CardFooter>
                </SfCard>
            </Template>
        </DxGridLayoutItem>

        <DxGridLayoutItem Column="2" Row="2" ColumnSpan="2">
            <Template>
                <SfCard class="TSIIndexPageCards">
                    <CardHeader>
                    </CardHeader>
                    <CardContent>
                        <SfChart>
                            <ChartPrimaryXAxis ValueType="Syncfusion.Blazor.Charts.ValueType.Category"></ChartPrimaryXAxis>

                            <ChartSeriesCollection>
                                <ChartSeries DataSource="@MedalDetailsStackedColumn" XName="X" YName="YValue" Type="Syncfusion.Blazor.Charts.ChartSeriesType.StackingColumn">
                                </ChartSeries>
                                <ChartSeries DataSource="@MedalDetailsStackedColumn" XName="X" YName="YValue1" Type="Syncfusion.Blazor.Charts.ChartSeriesType.StackingColumn">
                                </ChartSeries>
                            </ChartSeriesCollection>
                        </SfChart>
                    </CardContent>
                    <CardFooter>
                    </CardFooter>
                </SfCard>
            </Template>
        </DxGridLayoutItem>
    </GridLayoutItems>
</DevGridLayout>
*@



@code
{
    
    //    public DateTime Date { get; set; }
        //    public double Close { get; set; }
    //}

    //public List<StockPrice> StockDetails = new List<StockPrice>
    //{
    //    new StockPrice { Date = new DateTime(2005, 01, 01), Close = 21 },
    //    new StockPrice { Date = new DateTime(2006, 01, 01), Close = 24 },
    //    new StockPrice { Date = new DateTime(2007, 01, 01), Close = 36 },
    //    new StockPrice { Date = new DateTime(2008, 01, 01), Close = 38 },
    //    new StockPrice { Date = new DateTime(2009, 01, 01), Close = 54 },
    //    new StockPrice { Date = new DateTime(2010, 01, 01), Close = 57 },
    //    new StockPrice { Date = new DateTime(2011, 01, 01), Close = 62 }
    //};
    //#endregion

    //#region Bar Chart
    //public class ChartDataBar
    //{
    //    public string Country { get; set; }
    //    public double Gold { get; set; }
    //}

    //public List<ChartDataBar> MedalDetailsBar = new List<ChartDataBar>
    //{
    //    new ChartDataBar{ Country= "USA", Gold=50  },
    //    new ChartDataBar{ Country="China", Gold=40 },
    //    new ChartDataBar{ Country= "Japan", Gold=70 },
    //    new ChartDataBar{ Country= "Australia", Gold=60},
    //    new ChartDataBar{ Country= "France", Gold=50 },
    //    new ChartDataBar{ Country= "Germany", Gold=40 },
    //    new ChartDataBar{ Country= "Italy", Gold=40 },
    //    new ChartDataBar{ Country= "Sweden", Gold=30 }
    //};
    //#endregion

    //#region Stacked Column Chart
    //public class ChartDataStackedColumn
    //{
    //    public string X { get; set; }
    //    public double YValue { get; set; }
    //    public double YValue1 { get; set; }
    //}

    //public List<ChartDataStackedColumn> MedalDetailsStackedColumn = new List<ChartDataStackedColumn>
    //{
    //    new ChartDataStackedColumn { X= "USA", YValue= 46, YValue1=56 },
    //    new ChartDataStackedColumn { X= "GBR", YValue= 27, YValue1=17 },
    //    new ChartDataStackedColumn { X= "CHN", YValue= 26, YValue1=36 },
    //    new ChartDataStackedColumn { X= "UK", YValue= 56,  YValue1=16 },
    //    new ChartDataStackedColumn { X= "AUS", YValue= 12, YValue1=46 },
    //    new ChartDataStackedColumn { X= "IND", YValue= 26, YValue1=16 },
    //    new ChartDataStackedColumn { X= "DEN", YValue= 26, YValue1=12 },
    //    new ChartDataStackedColumn { X= "MEX", YValue= 34, YValue1=32},
    //};

    //#endregion


    //public List<ListEmployeesDto> _employeeList = new List<ListEmployeesDto>();
    //public List<ListPurchasingUnsuitabilityItemsDto> _purchaseUnsuitabilityList = new List<ListPurchasingUnsuitabilityItemsDto>();

    //protected override async void OnInitialized()
    //{

    //    _purchaseUnsuitabilityList = (await PurchasingUnsuitabilityItemsAppService.GetListAsync(new ListPurchasingUnsuitabilityItemsParameterDto())).Data.ToList();
    //    _employeeList = (await EmployeesAppService.GetListAsync(new ListEmployeesParameterDto())).Data.ToList();
    //}
}




