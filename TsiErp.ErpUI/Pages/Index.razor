@page "/"

@using Tsi.Blazor.Component.Core.Components.Layouts

<DevGridLayout ColumnCount="1" RowCount="6" RowHeights="@RowHeights("*")">
    <GridLayoutItems>
        <DxGridLayoutItem Row="0" Column="0" ColumnSpan="1">
            <Template>

                <table style="width:100% ;">
                    <tr>
                        <td style="width:50%">
                            <SfCard class="TSIIndexPageCards">
                                <CardHeader>
                                    <div class='header'> Customers Count </div>
                                </CardHeader>
                                <CardContent>
                                    <SfChart Title="Olympic Medals">
                                        <ChartPrimaryXAxis ValueType="Syncfusion.Blazor.Charts.ValueType.Category"></ChartPrimaryXAxis>

                                        <ChartSeriesCollection>
                                            <ChartSeries DataSource="@MedalDetailsLine" XName="X" YName="Y" Type="Syncfusion.Blazor.Charts.ChartSeriesType.Line">
                                            </ChartSeries>
                                        </ChartSeriesCollection>
                                    </SfChart>
                                </CardContent>
                                <CardFooter>
                                </CardFooter>
                            </SfCard>
                        </td>

                        <td style="width:1%">
                        </td>

                        <td style="width:28%">
                            <SfCard class="TSIIndexPageCards" style="height:100%">
                                <CardHeader>
                                    <div class='header'> Customers Count </div>
                                </CardHeader>
                                <CardContent>
                                    <SfRangeNavigator ValueType="RangeValueType.DateTime" IntervalType="RangeIntervalType.Years" LabelFormat="yyyy">
                                        <RangeNavigatorSeriesCollection>
                                            <RangeNavigatorSeries DataSource="@StockDetails" XName="Date" Type="RangeNavigatorType.Area" YName="Close"></RangeNavigatorSeries>
                                        </RangeNavigatorSeriesCollection>
                                    </SfRangeNavigator>
                                </CardContent>
                                <CardFooter>
                                </CardFooter>
                            </SfCard>
                        </td>
                         <td style="width:1%">
                        </td>
                        <td style="width:20%">
                            <SfCard class="TSIIndexPageCards" style="height:100%">
                                <CardHeader>
                                    <div class='header'> Customers Count </div>
                                </CardHeader>
                                <CardContent>
                                    <SfGrid ID="grid" DataSource="@Orders">
                                        <GridPageSettings></GridPageSettings>
                                        <GridColumns>
                                            <GridColumn Field=@nameof(Order.OrderID) HeaderText="Order ID" TextAlign="Syncfusion.Blazor.Grids.TextAlign.Right" Width="120"></GridColumn>
                                            <GridColumn Field=@nameof(Order.CustomerID) HeaderText="Customer Name" Width="130"></GridColumn>
                                            <GridColumn Field=@nameof(Order.OrderDate) HeaderText=" Order Date" Format="yMd" Type="ColumnType.Date" TextAlign="Syncfusion.Blazor.Grids.TextAlign.Right" Width="150"></GridColumn>
                                            <GridColumn Field=@nameof(Order.Freight) HeaderText="Freight" Format="C2" TextAlign="Syncfusion.Blazor.Grids.TextAlign.Right" Width="120"></GridColumn>
                                        </GridColumns>
                                    </SfGrid>
                                </CardContent>
                                <CardFooter>
                                </CardFooter>
                            </SfCard>
                        </td>
                    </tr>
                </table>

            </Template>
        </DxGridLayoutItem>



        <DxGridLayoutItem Row="2" Column="0" ColumnSpan="1">
            <Template>
                <table style="width:100% ;">
                    <tr>
                        <td style="width:48%">
                            <SfCard class="TSIIndexPageCards">
                                <CardHeader>
                                    <div class='header'> Customers Count </div>
                                </CardHeader>
                                <CardContent>
                                    <SfChart Title="Olympic Medals">
                                        <ChartPrimaryXAxis ValueType="Syncfusion.Blazor.Charts.ValueType.Category">
                                        </ChartPrimaryXAxis>

                                        <ChartSeriesCollection>
                                            <ChartSeries DataSource="@MedalDetailsBar" XName="Country" YName="Gold" Type="Syncfusion.Blazor.Charts.ChartSeriesType.Bar">
                                            </ChartSeries>
                                        </ChartSeriesCollection>
                                    </SfChart>
                                </CardContent>
                                <CardFooter>
                                </CardFooter>
                            </SfCard>
                        </td>

                        <td style="width:2%">
                        </td>

                        <td style="width:48%">
                            <SfCard class="TSIIndexPageCards">
                                <CardHeader>
                                    <div class='header'> Customers Count </div>
                                </CardHeader>
                                <CardContent>
                                    <SfChart>
                                        <ChartPrimaryXAxis ValueType="Syncfusion.Blazor.Charts.ValueType.Category"></ChartPrimaryXAxis>

                                        <ChartSeriesCollection>
                                            <ChartSeries DataSource="@MedalDetailsStackedColumn" XName="X" YName="YValue" Type="Syncfusion.Blazor.Charts.ChartSeriesType.StackingColumn">
                                            </ChartSeries>
                                            <ChartSeries DataSource="@MedalDetailsStackedColumn" XName="X" YName="YValue1" Type="Syncfusion.Blazor.Charts.ChartSeriesType.StackingColumn">
                                            </ChartSeries>
                                        </ChartSeriesCollection>
                                    </SfChart>
                                </CardContent>
                                <CardFooter>
                                </CardFooter>
                            </SfCard>
                        </td>
                    </tr>
                </table>
            </Template>
        </DxGridLayoutItem>

       
    </GridLayoutItems>
</DevGridLayout>


@code
{
    #region Line Chart

    public class ChartDataLine
    {
        public string X { get; set; }
        public double Y { get; set; }
    }

    public List<ChartDataLine> MedalDetailsLine = new List<ChartDataLine>
    {
        new ChartDataLine { X= "South Korea", Y= 39.4 },
        new ChartDataLine { X= "India", Y= 61.3 },
        new ChartDataLine { X= "Pakistan", Y= 20.4 },
        new ChartDataLine { X= "Germany", Y= 65.1 },
        new ChartDataLine { X= "Australia", Y= 15.8 },
        new ChartDataLine { X= "Italy", Y= 29.2 },
        new ChartDataLine { X= "United Kingdom", Y= 44.6 },
        new ChartDataLine { X= "Saudi Arabia", Y= 9.7 },
        new ChartDataLine { X= "Russia", Y= 40.8 },
        new ChartDataLine { X= "Mexico", Y= 31 },
        new ChartDataLine { X= "Brazil", Y= 75.9 },
        new ChartDataLine { X= "China", Y= 51.4 }
    };

    #endregion

    #region Range Selector
    public class StockPrice
    {
        public DateTime Date { get; set; }
        public double Close { get; set; }
    }

    public List<StockPrice> StockDetails = new List<StockPrice>
    {
        new StockPrice { Date = new DateTime(2005, 01, 01), Close = 21 },
        new StockPrice { Date = new DateTime(2006, 01, 01), Close = 24 },
        new StockPrice { Date = new DateTime(2007, 01, 01), Close = 36 },
        new StockPrice { Date = new DateTime(2008, 01, 01), Close = 38 },
        new StockPrice { Date = new DateTime(2009, 01, 01), Close = 54 },
        new StockPrice { Date = new DateTime(2010, 01, 01), Close = 57 },
        new StockPrice { Date = new DateTime(2011, 01, 01), Close = 62 }
    };
    #endregion

    #region Bar Chart
    public class ChartDataBar
    {
        public string Country { get; set; }
        public double Gold { get; set; }
    }

    public List<ChartDataBar> MedalDetailsBar = new List<ChartDataBar>
    {
        new ChartDataBar{ Country= "USA", Gold=50  },
        new ChartDataBar{ Country="China", Gold=40 },
        new ChartDataBar{ Country= "Japan", Gold=70 },
        new ChartDataBar{ Country= "Australia", Gold=60},
        new ChartDataBar{ Country= "France", Gold=50 },
        new ChartDataBar{ Country= "Germany", Gold=40 },
        new ChartDataBar{ Country= "Italy", Gold=40 },
        new ChartDataBar{ Country= "Sweden", Gold=30 }
    };
    #endregion

    #region Stacked Column Chart
    public class ChartDataStackedColumn
    {
        public string X { get; set; }
        public double YValue { get; set; }
        public double YValue1 { get; set; }
    }

    public List<ChartDataStackedColumn> MedalDetailsStackedColumn = new List<ChartDataStackedColumn>
    {
        new ChartDataStackedColumn { X= "USA", YValue= 46, YValue1=56 },
        new ChartDataStackedColumn { X= "GBR", YValue= 27, YValue1=17 },
        new ChartDataStackedColumn { X= "CHN", YValue= 26, YValue1=36 },
        new ChartDataStackedColumn { X= "UK", YValue= 56,  YValue1=16 },
        new ChartDataStackedColumn { X= "AUS", YValue= 12, YValue1=46 },
        new ChartDataStackedColumn { X= "IND", YValue= 26, YValue1=16 },
        new ChartDataStackedColumn { X= "DEN", YValue= 26, YValue1=12 },
        new ChartDataStackedColumn { X= "MEX", YValue= 34, YValue1=32},
    };

    #endregion

    #region Grid Table
    public List<Order> Orders { get; set; }

    protected override void OnInitialized()
    {
         Orders = Enumerable.Range(1, 6).Select(x => new Order()
        {
            OrderID = 1000 + x,
            CustomerID = (new string[] { "ALFKI", "ANANTR", "ANTON", "BLONP", "BOLID" })[new Random().Next(5)],
            Freight = 2.1 * x,
            OrderDate = DateTime.Now.AddDays(-x),
        }).ToList();
    }

    public class Order
    {
         public int? OrderID { get; set; }
        public string CustomerID { get; set; }
        public DateTime? OrderDate { get; set; }
        public double? Freight { get; set; }

    }
    #endregion
 }




