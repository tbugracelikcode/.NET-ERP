@page "/stock-fiches"

@layout MainLayout




@inherits BaseListPage<SelectStockFichesDto, ListStockFichesDto, CreateStockFichesDto, UpdateStockFichesDto, ListStockFichesParameterDto>

@inject IStringLocalizer<StockFichesResource> L
@inject IBranchesAppService BranchesAppService
@inject IWarehousesAppService WarehousesAppService
@inject ICurrenciesAppService CurrenciesAppService
@inject IProductionOrdersAppService ProductionOrdersAppService
@inject IStockFichesAppService StockFichesAppService
@inject IProductsAppService ProductsAppService
@inject IUnitSetsAppService UnitSetsAppService
@inject IStockManagementParametersAppService StockManagementParametersAppService
@inject IFicheNumbersAppService FicheNumbersAppService
@inject IUserPermissionsAppService UserPermissionsAppService
@inject IMenusAppService MenusAppService
@inject IStockManagementParametersAppService StockManagementParametersAppService
@inject IGetSQLDateAppService GetSQLDateAppService

@if (!base.IsLoaded)
{
    <CircleLoading Caption="@base.LoadingCaption" Text="@base.LoadingText" />
}
else
{
    <DevGridLayout ColumnCount="1" RowCount="3" RowHeights="@RowHeights("*")">
        <GridLayoutItems>
            <DxGridLayoutItem Row="0" Column="0" ColumnSpan="1">
                <Template>
                    <SfCard class="TSIListPageTitleCard">
                        <CardContent>
                            <TsiBreadCrumb PreviousMenus="@L["UIPreviousMenu"]" CurrentMenu="@L["UICurrentMenu"]" />
                        </CardContent>
                        <CardFooter>
                        </CardFooter>
                    </SfCard>
                </Template>
            </DxGridLayoutItem>
            <DxGridLayoutItem Row="2" Column="0" ColumnSpan="1">
                <Template>
                    <SfCard class="TSIGridCards">

                        <CardContent>
                            <SfGrid ID="Grid" @ref="_grid" EnablePersistence="true" AllowPdfExport=true ColumnMenuItems=@MenuItems ShowColumnMenu="true" DataSource="@ListDataSource" AllowPaging="false" AllowFiltering="true" AllowReordering="true" AllowResizing="true" AllowGrouping="true" AllowExcelExport="true" AllowSelection="true" ShowColumnChooser="true" GridLines="GridLine.Both" AllowSorting="true" Height="100%" Width="100%" class="GridZebra" ContextMenuItems="@MainGridContextMenu" Toolbar=@GridToolbarItems>
                                <GridGroupSettings ShowGroupedColumn="true"></GridGroupSettings>

                                <GridEvents ContextMenuItemClicked="@MainContextMenuClick" OnToolbarClick="@ToolbarClickHandler" TValue="ListStockFichesDto"></GridEvents>
                                <GridEditSettings AllowAdding="false" AllowEditing="false" AllowDeleting="false" Mode="Syncfusion.Blazor.Grids.EditMode.Normal"></GridEditSettings>
                                <GridFilterSettings Type="Syncfusion.Blazor.Grids.FilterType.Menu"></GridFilterSettings>
                                <GridPageSettings PageSizes="true"></GridPageSettings>
                                <GridSelectionSettings Type="Syncfusion.Blazor.Grids.SelectionType.Single"></GridSelectionSettings>
                                <GridColumns>
                                    <GridColumn Field=@nameof(ListStockFichesDto.FicheNo) HeaderText="@L["FicheNo"]" TextAlign="TextAlign.Center" Width="220"></GridColumn>
                                    <GridColumn Field=@nameof(ListStockFichesDto.Date_) Format="dd.MM.yyyy" HeaderText="@L["Date_"]" TextAlign="TextAlign.Center" Width="120"></GridColumn>
                                    <GridColumn Field=@nameof(ListStockFichesDto.FicheType) HeaderText="@L["FicheType"]" TextAlign="TextAlign.Center" Width="120">
                                        <Template>
                                            @{
                                                StockFicheTypeEnum ficheType = (context as ListStockFichesDto).FicheType;
                                                string fiche = "";
                                                if (ficheType == StockFicheTypeEnum.DepoSevkFisi)
                                                {
                                                    fiche = L["EnumWarehouse"];
                                                }
                                                else if (ficheType == StockFicheTypeEnum.FireFisi)
                                                {
                                                    fiche = L["EnumWastage"];
                                                }
                                                else if (ficheType == StockFicheTypeEnum.SarfFisi)
                                                {
                                                    fiche = L["EnumConsume"];
                                                }
                                                else if (ficheType == StockFicheTypeEnum.StokCikisFisi)
                                                {
                                                    fiche = L["EnumStockOutput"];
                                                }
                                                else if (ficheType == StockFicheTypeEnum.StokGirisFisi)
                                                {
                                                    fiche = L["EnumStockIncome"];
                                                }
                                                else if (ficheType == StockFicheTypeEnum.UretimdenGirisFisi)
                                                {
                                                    fiche = L["EnumProductionIncome"];
                                                }
                                            }
                                            @fiche
                                        </Template>
                                    </GridColumn>
                                    <GridColumn Field=@nameof(ListStockFichesDto.BranchCode) HeaderText="@L["BranchCode"]" TextAlign="TextAlign.Center" Width="120"></GridColumn>
                                    <GridColumn Field=@nameof(ListStockFichesDto.WarehouseCode) HeaderText="@L["WarehouseCode"]" TextAlign="TextAlign.Center" Width="120"></GridColumn>
                                    <GridColumn Field=@nameof(ListStockFichesDto.NetAmount) HeaderText="@L["NetAmount"]" Type="ColumnType.Number" TextAlign="TextAlign.Center" Width="120" Visible=@LoginedUserService.StockManagementShowAmountsChildMenu></GridColumn>


                                </GridColumns>
                            </SfGrid>
                        </CardContent>
                        <CardFooter>
                        </CardFooter>
                    </SfCard>
                </Template>
            </DxGridLayoutItem>
        </GridLayoutItems>
    </DevGridLayout>


    <DxPopup @bind-Visible="base.EditPageVisible"
             ShowFooter="true"
             CloseOnEscape="false"
             CloseOnOutsideClick="false"
             HeaderText="@L["EditModalTitle"]"
             Width="72%"
             Height="71%"
             MinWidth="1250px"
             MinHeight="800px"
             HeaderCssClass="HeaderTitleCss"
             Showing="CrudModalShowing"
             Closing="CrudModalClosing">

        <BodyTemplate>
            <DxGridLayout CssClass="TSIGridLayout">

                <Rows>
                    <DxGridLayoutRow Height="15%" />
                    <DxGridLayoutRow Height="13%" />
                    <DxGridLayoutRow Height="10%" />
                    <DxGridLayoutRow Height="10%" />
                    <DxGridLayoutRow Height="10%" />
                    <DxGridLayoutRow Height="40%" />
                </Rows>

                <Columns>
                    <DxGridLayoutColumn Width="3%" />
                    <DxGridLayoutColumn Width="21%" />
                    <DxGridLayoutColumn Width="3%" />
                    <DxGridLayoutColumn Width="21%" />
                    <DxGridLayoutColumn Width="3%" />
                    <DxGridLayoutColumn Width="21%" />
                    <DxGridLayoutColumn Width="4%" />
                    <DxGridLayoutColumn Width="21%" />
                    <DxGridLayoutColumn Width="4%" />
                </Columns>

                <Items>
                    <DxGridLayoutItem Row="0" Column="1">
                        <Template>
                            <br />
                            <label class="TSIModalLabel"><strong>@L["FicheNoLabel"] </strong></label>
                            @* <SfTextBox CssClass="TSITxtBox" @bind-Value="DataSource.FicheNo"></SfTextBox> *@

                            <SfTextBox @ref="@CodeButtonEdit" Created="@CodeOnCreateIcon" @bind-Value="DataSource.FicheNo" ShowClearButton=true></SfTextBox>
                        </Template>
                    </DxGridLayoutItem>

                    <DxGridLayoutItem Row="0" Column="3">
                        <Template>
                            <br />
                            <label class="TSIModalLabel"><strong>@L["Date_Label"] </strong></label><br />
                            <SfDatePicker @bind-Value="@DataSource.Date_" Max=@(!futureDateParameter ? GetSQLDateAppService.GetDateFromSQL() : new DateTime(10000,12,31))></SfDatePicker>
                        </Template>
                    </DxGridLayoutItem>

                    <DxGridLayoutItem Row="0" Column="5" ColumnSpan="3" RowSpan="2">
                        <Template>
                            <br />
                            <label class="TSIModalLabel"><strong>@L["Description_Label"] </strong></label>
                            <SfTextBox @bind-Value="DataSource.Description_" Multiline=true CssClass="TSIMemoBox70"></SfTextBox>
                        </Template>
                    </DxGridLayoutItem>

                    <DxGridLayoutItem Row="1" Column="1">
                        <Template>
                            <label class="TSIModalLabel"><strong>@L["SpecialCodeLabel"] </strong></label>
                            <SfTextBox CssClass="TSITxtBox" @bind-Value="DataSource.SpecialCode"></SfTextBox>
                        </Template>
                    </DxGridLayoutItem>

                    <DxGridLayoutItem Row="1" Column="3">
                        <Template>
                            <label class="TSIModalLabel"><strong>@L["Time_Label"] </strong></label>
                            <SfTimePicker Step="15" Format="@("hh\\:mm\\:ss")" TValue="TimeSpan?" @bind-Value="@DataSource.Time_"></SfTimePicker>
                        </Template>
                    </DxGridLayoutItem>

                    <DxGridLayoutItem Row="2" Column="1">
                        <Template>
                            <label class="TSIModalLabel"><strong>@L["FicheTypeLabel"] </strong></label>
                            <SfDropDownList TItem="SelectStockFichesDto" TValue="StockFicheTypeEnum" PopupHeight="230px" @bind-Value="@DataSource.FicheType" DataSource="@types" Enabled="false">
                                <DropDownListFieldSettings Text="FicheTypeName" Value="FicheType"></DropDownListFieldSettings>
                            </SfDropDownList>
                        </Template>
                    </DxGridLayoutItem>

                    <DxGridLayoutItem Row="2" Column="3">
                        <Template>
                            <label class="TSIModalLabel"><strong>@L["BranchNameLabel"] </strong></label>
                            <SfTextBox @ref="@BranchesButtonEdit" Created="@BranchesOnCreateIcon" @bind-Value="DataSource.BranchCode" ShowClearButton=true ValueChange="BranchesOnValueChange"></SfTextBox>
                        </Template>
                    </DxGridLayoutItem>

                    <DxGridLayoutItem Row="2" Column="5">
                        <Template>
                            <label class="TSIModalLabel"><strong>@L["WarehouseCodeLabel"] </strong></label><br />
                            <SfTextBox @ref="@WarehousesButtonEdit" Created="@WarehousesOnCreateIcon" @bind-Value="DataSource.WarehouseCode" ShowClearButton=true ValueChange="WarehousesOnValueChange"></SfTextBox>
                        </Template>
                    </DxGridLayoutItem>

                    <DxGridLayoutItem Row="2" Column="7">
                        <Template>
                            <label class="TSIModalLabel"><strong>@L["CurrencyCodeLabel"] </strong></label><br />
                            <SfTextBox @ref="@CurrenciesButtonEdit" Created="@CurrenciesOnCreateIcon" @bind-Value="DataSource.CurrencyCode" ShowClearButton=true ValueChange="CurrenciesOnValueChange"></SfTextBox>
                        </Template>
                    </DxGridLayoutItem>

                    <DxGridLayoutItem Row="3" Column="1">
                        <Template>
                            <label class="TSIModalLabel"><strong>@L["ProductionOrderCodeLabel"] </strong></label><br />
                            <SfTextBox @ref="@ProductionOrdersButtonEdit" Created="@ProductionOrdersOnCreateIcon" @bind-Value="DataSource.ProductionOrderCode" ShowClearButton=true ValueChange="ProductionOrdersOnValueChange"></SfTextBox>
                        </Template>
                    </DxGridLayoutItem>

                    <DxGridLayoutItem Row="3" Column="3">
                        <Template>
                            <label class="TSIModalLabel"><strong>@L["ExchangeRateLabel"] </strong></label>
                            <SfNumericTextBox CssClass="TSITxtBox" Min="0" TValue="decimal" @bind-Value="DataSource.ExchangeRate"></SfNumericTextBox>
                        </Template>
                    </DxGridLayoutItem>
                    @{
                        if (LoginedUserService.StockManagementShowAmountsChildMenu)
                        {

                            <DxGridLayoutItem Row="3" Column="5">
                                <Template>
                                    <label class="TSIModalLabel"><strong>@L["NetAmountLabel"] </strong></label>
                                    <SfNumericTextBox CssClass="TSITxtBox" Min="0" TValue="decimal" @bind-Value="DataSource.NetAmount"></SfNumericTextBox>
                                </Template>
                            </DxGridLayoutItem>

                        }
                    }
                    <DxGridLayoutItem Row="3" Column="7">
                        <Template>
                            <label class="TSIModalLabel"><strong>@L["TransactionExchangeLabel"] </strong></label>
                            <SfTextBox @ref="@TransactionExchangeCurrenciesButtonEdit" Created="@TransactionExchangeCurrenciesOnCreateIcon" @bind-Value="DataSource.TransactionExchangeCurrencyCode" ShowClearButton=true ValueChange="TransactionExchangeCurrenciesOnValueChange"></SfTextBox>
                        </Template>
                    </DxGridLayoutItem>

                    <DxGridLayoutItem Row="4" Column="1">
                        <Template>
                            <label class="TSIModalLabel"><strong>@L["ProductionDateReferanceLabel"] </strong></label>
                            <SfTextBox CssClass="TSITxtBox" @bind-Value="DataSource.ProductionDateReferance"></SfTextBox>
                        </Template>
                    </DxGridLayoutItem>


                    <DxGridLayoutItem Row="5" Column="1" ColumnSpan="7">
                        <Template>
                            <SfGrid @ref=_LineGrid ID="LineGrid" ColumnMenuItems=@MenuItems ShowColumnMenu="true" DataSource="@GridLineList" AllowPaging="false" AllowFiltering="false" AllowReordering="true" AllowResizing="true" AllowGrouping="false" AllowExcelExport="false" AllowSelection="true" AllowSorting="true" Height="100%" Width="100%" class="GridZebra" ContextMenuItems="@LineGridContextMenu">
                                <GridEvents ContextMenuItemClicked="@OnListContextMenuClick" TValue="SelectStockFicheLinesDto"></GridEvents>
                                <GridGroupSettings ShowGroupedColumn="true"></GridGroupSettings>

                                <GridEditSettings AllowAdding="false" AllowEditing="false" AllowDeleting="false" Mode="Syncfusion.Blazor.Grids.EditMode.Normal"></GridEditSettings>
                                <GridFilterSettings Type="Syncfusion.Blazor.Grids.FilterType.Menu"></GridFilterSettings>
                                <GridSelectionSettings Type="Syncfusion.Blazor.Grids.SelectionType.Single"></GridSelectionSettings>
                                <GridColumns>
                                    <GridColumn Field=@nameof(SelectStockFicheLinesDto.ProductCode) HeaderText="@L["LineGridProductCode"]" TextAlign="TextAlign.Center" Width="120"></GridColumn>
                                    <GridColumn Field=@nameof(SelectStockFicheLinesDto.ProductName) HeaderText="@L["LineGridProductName"]" TextAlign="TextAlign.Center" Width="120"></GridColumn>
                                    <GridColumn Field=@nameof(SelectStockFicheLinesDto.UnitSetCode) HeaderText="@L["LineGridUnitSetCode"]" TextAlign="TextAlign.Center" Width="120"></GridColumn>
                                    <GridColumn Field=@nameof(SelectStockFicheLinesDto.Quantity) Format="N2" Type="ColumnType.Number" HeaderText="@L["LineGridQuantity"]" TextAlign="TextAlign.Center" Width="120"></GridColumn>
                                    <GridColumn Field=@nameof(SelectStockFicheLinesDto.UnitPrice) Format="N2" Type="ColumnType.Number" HeaderText="@L["LineGridUnitPrice"]" TextAlign="TextAlign.Center" Width="120" Visible=@LoginedUserService.StockManagementShowAmountsChildMenu></GridColumn>
                                    <GridColumn Field=@nameof(SelectStockFicheLinesDto.LineAmount) Format="N2" Type="ColumnType.Number" HeaderText="@L["LineGridLineAmount"]" TextAlign="TextAlign.Center" Width="120" Visible=@LoginedUserService.StockManagementShowAmountsChildMenu></GridColumn>
                                    <GridColumn Field=@nameof(SelectStockFicheLinesDto.FicheType) HeaderText="@L["FicheType"]" TextAlign="TextAlign.Center" Width="120" Context="LineContext">
                                        <Template>
                                            @{
                                                StockFicheTypeEnum ficheType = (LineContext as SelectStockFicheLinesDto).FicheType;
                                                string fiche = "";
                                                if (ficheType == StockFicheTypeEnum.DepoSevkFisi)
                                                {
                                                    fiche = L["EnumWarehouse"];
                                                }
                                                else if (ficheType == StockFicheTypeEnum.FireFisi)
                                                {
                                                    fiche = L["EnumWastage"];
                                                }
                                                else if (ficheType == StockFicheTypeEnum.SarfFisi)
                                                {
                                                    fiche = L["EnumConsume"];
                                                }
                                                else if (ficheType == StockFicheTypeEnum.StokCikisFisi)
                                                {
                                                    fiche = L["EnumStockOutput"];
                                                }
                                                else if (ficheType == StockFicheTypeEnum.StokGirisFisi)
                                                {
                                                    fiche = L["EnumStockIncome"];
                                                }
                                                else if (ficheType == StockFicheTypeEnum.UretimdenGirisFisi)
                                                {
                                                    fiche = L["EnumProductionIncome"];
                                                }
                                            }
                                            @fiche
                                        </Template>
                                    </GridColumn>
                                </GridColumns>
                            </SfGrid>
                        </Template>
                    </DxGridLayoutItem>

                </Items>
            </DxGridLayout>
        </BodyTemplate>
        <FooterContentTemplate>
            <SfButton CssClass="TSISaveButton" OnClick="OnSubmit"><SfIcon Size="IconSize.Medium" Name="IconName.Save"></SfIcon>&nbsp;@L["SaveButton"]</SfButton>
            <SfButton CssClass="TSICancelButton" OnClick="HideEditPage"><SfIcon Size="IconSize.Medium" Name="IconName.Undo"></SfIcon>&nbsp;@L["CloseButton"]</SfButton>
        </FooterContentTemplate>
    </DxPopup>


    <DxPopup @bind-Visible="LineCrudPopup"
             ShowFooter="true"
             CloseOnEscape="false"
             CloseOnOutsideClick="false"
             HeaderText="@L["EditLineModalTitle"]"
             Width="53%"
             Height="37%"
             MinWidth="910px"
             MinHeight="500px"
             HeaderCssClass="HeaderTitleCss">

        <BodyTemplate>
            <DxGridLayout CssClass="TSIGridLayout">

                <Rows>
                    <DxGridLayoutRow Height="25%" />
                    <DxGridLayoutRow Height="25%" />
                    <DxGridLayoutRow Height="25%" />
                    <DxGridLayoutRow Height="25%" />
                </Rows>

                <Columns>
                    <DxGridLayoutColumn Width="2%" />
                    <DxGridLayoutColumn Width="27%" />
                    <DxGridLayoutColumn Width="2%" />
                    <DxGridLayoutColumn Width="27%" />
                    <DxGridLayoutColumn Width="2%" />
                    <DxGridLayoutColumn Width="27%" />
                    <DxGridLayoutColumn Width="2%" />
                </Columns>

                <Items>
                    <br />
                    <DxGridLayoutItem Row="0" Column="1">
                        <Template>
                            <label class="TSIModalLabel"><strong>@L["ProductCodeLineLabel"] </strong></label>
                            <SfTextBox @ref="@ProductsCodeButtonEdit" Created="@ProductsCodeOnCreateIcon" @bind-Value="LineDataSource.ProductCode" ShowClearButton=true ValueChange="ProductsOnValueChange"></SfTextBox>
                        </Template>
                    </DxGridLayoutItem>

                    <DxGridLayoutItem Row="0" Column="3">
                        <Template>
                            <label class="TSIModalLabel"><strong>@L["ProductNameLineLabel"] </strong></label><br />
                            <SfTextBox @ref="@ProductsNameButtonEdit" Created="@ProductsNameOnCreateIcon" @bind-Value="LineDataSource.ProductName" ShowClearButton=true ValueChange="ProductsOnValueChange"></SfTextBox>
                        </Template>
                    </DxGridLayoutItem>

                    <DxGridLayoutItem Row="0" Column="5">
                        <Template>
                            <label class="TSIModalLabel"><strong>@L["UnitSetCodeLineLabel"] </strong></label><br />

                            <SfTextBox @ref="@UnitSetsButtonEdit" Created="@UnitSetsOnCreateIcon" @bind-Value="LineDataSource.UnitSetCode" ShowClearButton=true ValueChange="UnitSetsOnValueChange"></SfTextBox>
                        </Template>
                    </DxGridLayoutItem>

                    <DxGridLayoutItem Row="1" Column="1">
                        <Template>
                            <label class="TSIModalLabel"><strong>@L["QuantityLineLabel"] </strong></label>
                            <SfNumericTextBox Min="0" TValue="decimal" @bind-Value="LineDataSource.Quantity" OnChange="LineCalculate"></SfNumericTextBox>
                        </Template>
                    </DxGridLayoutItem>
                    @{
                        if (LoginedUserService.StockManagementShowAmountsChildMenu)
                        {
                            <DxGridLayoutItem Row="1" Column="3">
                                <Template>
                                    <label class="TSIModalLabel"><strong>@L["UnitPriceLineLabel"] </strong></label>
                                    <SfNumericTextBox Min="0" TValue="decimal" @bind-Value="LineDataSource.UnitPrice" OnChange="LineCalculate"> </SfNumericTextBox>
                                </Template>
                            </DxGridLayoutItem>


                            <DxGridLayoutItem Row="1" Column="5">
                                <Template>
                                    <label class="TSIModalLabel"><strong>@L["LineAmountLineLabel"] </strong></label>
                                    <SfNumericTextBox Min="0" TValue="decimal" @bind-Value="LineDataSource.LineAmount" Enabled=false style="font-size:16px; font-weight:bold;"></SfNumericTextBox>
                                </Template>
                            </DxGridLayoutItem>
                        }
                    }

                    <DxGridLayoutItem Row="2" Column="1">
                        <Template>
                            <label class="TSIModalLabel"><strong>@L["ProductionDateReferanceLabel"] </strong></label>
                            <SfTextBox CssClass="TSITxtBox" @bind-Value="LineDataSource.ProductionDateReferance"></SfTextBox>
                        </Template>
                    </DxGridLayoutItem>

                     <DxGridLayoutItem Row="2" Column="5">
                        <Template>
                            <label class="TSIModalLabel"><strong>@L["TransactionExchangeLineAmountLabel"] </strong></label>
                            <SfNumericTextBox Min="0" Enabled=false style="font-size:16px; font-weight:bold;" TValue="decimal" @bind-Value="LineDataSource.TransactionExchangeLineAmount"></SfNumericTextBox>
                        </Template>
                    </DxGridLayoutItem>

                     <DxGridLayoutItem Row="2" Column="3">
                        <Template>
                            <label class="TSIModalLabel"><strong>@L["TransactionExchangeUnitPriceLabel"] </strong></label>
                            <SfNumericTextBox Min="0" OnChange="LineCalculate2" TValue="decimal" @bind-Value="LineDataSource.TransactionExchangeUnitPrice"></SfNumericTextBox>
                        </Template>
                    </DxGridLayoutItem>

                    <DxGridLayoutItem Row="3" Column="1" ColumnSpan="5">
                        <Template>
                            <label class="TSIModalLabel"><strong>@L["LineDescriptionLineLabel"] </strong></label><br />
                            <SfTextBox @bind-Value="LineDataSource.LineDescription" Multiline=true></SfTextBox>
                        </Template>
                    </DxGridLayoutItem>

                </Items>
            </DxGridLayout>
        </BodyTemplate>
        <FooterContentTemplate>
            <SfButton CssClass="TSISaveButton" OnClick="OnLineSubmit"><SfIcon Size="IconSize.Medium" Name="IconName.Save"></SfIcon>&nbsp;@L["SaveButton"]</SfButton>
            <SfButton CssClass="TSICancelButton" OnClick="HideLinesPopup"><SfIcon Size="IconSize.Medium" Name="IconName.Undo"></SfIcon>&nbsp;@L["CloseButton"]</SfButton>
        </FooterContentTemplate>
    </DxPopup>
}

@if (SelectUnitSetsPopupVisible)
{
    <DxPopup @bind-Visible="SelectUnitSetsPopupVisible"
             ShowFooter="true"
             CloseOnEscape="false"
             CloseOnOutsideClick="false"
             HeaderText="@L["UnitSetModalTitle"]"
             Width="64%"
             Height="44%"
             MinWidth="1220px"
             MinHeight="470px"
             HeaderCssClass="HeaderTitleCss">
        <BodyTemplate>

            <DevGridLayout ColumnCount="1" RowCount="1">
                <GridLayoutItems>
                    <DxGridLayoutItem Row="1" Column="1">
                        <Template>
                            <SfCard class="TSIGridCards">

                                <CardContent>
                                    <SfGrid ID="UnitSetGrid" ColumnMenuItems=@MenuItems ShowColumnMenu="true" DataSource="@UnitSetsList" AllowPaging="true" AllowFiltering="true" AllowReordering="true" AllowResizing="true" AllowGrouping="true" AllowExcelExport="true" AllowSelection="true" ShowColumnChooser="true" GridLines="GridLine.Both"
                                            AllowSorting="true" Height="100%" Width="100%" class="GridZebra">
                                        <GridGroupSettings ShowGroupedColumn="true"></GridGroupSettings>

                                        <GridEvents OnRecordDoubleClick="@UnitSetsDoubleClickHandler" TValue="ListUnitSetsDto"></GridEvents>
                                        <GridEditSettings AllowAdding="false" AllowEditing="false" AllowDeleting="false" Mode="Syncfusion.Blazor.Grids.EditMode.Normal"></GridEditSettings>
                                        <GridFilterSettings Type="Syncfusion.Blazor.Grids.FilterType.Menu"></GridFilterSettings>
                                        <GridPageSettings PageSizes="true"></GridPageSettings>
                                        <GridSelectionSettings Type="Syncfusion.Blazor.Grids.SelectionType.Multiple"></GridSelectionSettings>
                                        <GridColumns>
                                            <GridColumn Field=@nameof(ListUnitSetsDto.Code) HeaderText="@L["UnitSetModalGridCode"]" TextAlign="TextAlign.Center" Width="120"></GridColumn>
                                            <GridColumn Field=@nameof(ListUnitSetsDto.Name) HeaderText="@L["UnitSetModalGridName"]" TextAlign="TextAlign.Center" Width="120"></GridColumn>

                                        </GridColumns>
                                    </SfGrid>
                                </CardContent>
                                <CardFooter>
                                </CardFooter>
                            </SfCard>
                        </Template>
                    </DxGridLayoutItem>
                </GridLayoutItems>
            </DevGridLayout>

        </BodyTemplate>
        <FooterContentTemplate>
        </FooterContentTemplate>
    </DxPopup>
}

@if (SelectCurrencyPopupVisible)
{
    <DxPopup @bind-Visible="SelectCurrencyPopupVisible"
             ShowFooter="true"
             CloseOnEscape="false"
             CloseOnOutsideClick="false"
             HeaderText="@L["CurrencyModalTitle"]"
             Width="64%"
             Height="44%"
             MinWidth="1220px"
             MinHeight="470px"
             HeaderCssClass="HeaderTitleCss">
        <BodyTemplate>

            <DevGridLayout ColumnCount="1" RowCount="1">
                <GridLayoutItems>
                    <DxGridLayoutItem Row="1" Column="1">
                        <Template>
                            <SfCard class="TSIGridCards">

                                <CardContent>
                                    <SfGrid ID="CurrenciesGrid" DataSource="@CurrenciesList" ColumnMenuItems=@MenuItems ShowColumnMenu="true" AllowPaging="true" AllowFiltering="true" AllowReordering="true" AllowResizing="true" AllowGrouping="true" AllowExcelExport="true" AllowSelection="true" ShowColumnChooser="true" GridLines="GridLine.Both" AllowSorting="true" Height="100%" Width="100%" class="GridZebra">
                                        <GridGroupSettings ShowGroupedColumn="true"></GridGroupSettings>

                                        <GridEvents OnRecordDoubleClick="@CurrenciesDoubleClickHandler" TValue="ListCurrenciesDto"></GridEvents>
                                        <GridEditSettings AllowAdding="false" AllowEditing="false" AllowDeleting="false" Mode="Syncfusion.Blazor.Grids.EditMode.Normal"></GridEditSettings>
                                        <GridFilterSettings Type="Syncfusion.Blazor.Grids.FilterType.Menu"></GridFilterSettings>
                                        <GridPageSettings PageSizes="true"></GridPageSettings>
                                        <GridSelectionSettings Type="Syncfusion.Blazor.Grids.SelectionType.Multiple"></GridSelectionSettings>
                                        <GridColumns>
                                            <GridColumn Field=@nameof(ListCurrenciesDto.Code) HeaderText="@L["CurrencyModalGridCode"]" TextAlign="TextAlign.Center" Width="120"></GridColumn>
                                            <GridColumn Field=@nameof(ListCurrenciesDto.Name) HeaderText="@L["CurrencyModalGridName"]" TextAlign="TextAlign.Center" Width="120"></GridColumn>
                                        </GridColumns>
                                    </SfGrid>
                                </CardContent>
                                <CardFooter>
                                </CardFooter>
                            </SfCard>
                        </Template>
                    </DxGridLayoutItem>
                </GridLayoutItems>
            </DevGridLayout>

        </BodyTemplate>
        <FooterContentTemplate>
        </FooterContentTemplate>
    </DxPopup>
}

@if (SelectTransactionExchangeCurrencyPopupVisible)
{
    <DxPopup @bind-Visible="SelectTransactionExchangeCurrencyPopupVisible"
             ShowFooter="true"
             CloseOnEscape="false"
             CloseOnOutsideClick="false"
             HeaderText="@L["CurrencyModalTitle"]"
             Width="64%"
             Height="44%"
             MinWidth="1220px"
             MinHeight="470px"
             HeaderCssClass="HeaderTitleCss">
        <BodyTemplate>

            <DevGridLayout ColumnCount="1" RowCount="1">
                <GridLayoutItems>
                    <DxGridLayoutItem Row="1" Column="1">
                        <Template>
                            <SfCard class="TSIGridCards">

                                <CardContent>
                                    <SfGrid ID="TransactionExchangeCurrenciesGrid" DataSource="@TransactionExchangeCurrenciesList" ColumnMenuItems=@MenuItems ShowColumnMenu="true" AllowPaging="true" AllowFiltering="true" AllowReordering="true" AllowResizing="true" AllowGrouping="true" AllowExcelExport="true" AllowSelection="true" ShowColumnChooser="true" GridLines="GridLine.Both" AllowSorting="true" Height="100%" Width="100%" class="GridZebra">
                                        <GridGroupSettings ShowGroupedColumn="true"></GridGroupSettings>

                                        <GridEvents OnRecordDoubleClick="@TransactionExchangeCurrenciesDoubleClickHandler" TValue="ListCurrenciesDto"></GridEvents>
                                        <GridEditSettings AllowAdding="false" AllowEditing="false" AllowDeleting="false" Mode="Syncfusion.Blazor.Grids.EditMode.Normal"></GridEditSettings>
                                        <GridFilterSettings Type="Syncfusion.Blazor.Grids.FilterType.Menu"></GridFilterSettings>
                                        <GridPageSettings PageSizes="true"></GridPageSettings>
                                        <GridSelectionSettings Type="Syncfusion.Blazor.Grids.SelectionType.Multiple"></GridSelectionSettings>
                                        <GridColumns>
                                            <GridColumn Field=@nameof(ListCurrenciesDto.Code) HeaderText="@L["CurrencyModalGridCode"]" TextAlign="TextAlign.Center" Width="120"></GridColumn>
                                            <GridColumn Field=@nameof(ListCurrenciesDto.Name) HeaderText="@L["CurrencyModalGridName"]" TextAlign="TextAlign.Center" Width="120"></GridColumn>
                                        </GridColumns>
                                    </SfGrid>
                                </CardContent>
                                <CardFooter>
                                </CardFooter>
                            </SfCard>
                        </Template>
                    </DxGridLayoutItem>
                </GridLayoutItems>
            </DevGridLayout>

        </BodyTemplate>
        <FooterContentTemplate>
        </FooterContentTemplate>
    </DxPopup>
}

@if (SelectProductsPopupVisible)
{
    <DxPopup @bind-Visible="SelectProductsPopupVisible"
             ShowFooter="true"
             CloseOnEscape="false"
             CloseOnOutsideClick="false"
             HeaderText="@L["ProductModalTitle"]"
             Width="64%"
             Height="44%"
             MinWidth="1220px"
             MinHeight="470px"
             HeaderCssClass="HeaderTitleCss">
        <BodyTemplate>

            <DevGridLayout ColumnCount="1" RowCount="1">
                <GridLayoutItems>
                    <DxGridLayoutItem Row="1" Column="1">
                        <Template>
                            <SfCard class="TSIGridCards">

                                <CardContent>
                                    <SfGrid ID="ProductsGrid" ColumnMenuItems=@MenuItems ShowColumnMenu="true" DataSource="@ProductsList" AllowPaging="true" AllowFiltering="true" AllowReordering="true" AllowResizing="true" AllowGrouping="true"
                                            AllowExcelExport="true" ShowColumnChooser="true" GridLines="GridLine.Both" AllowSelection="true" AllowSorting="true" Height="100%" Width="100%" class="GridZebra">
                                        <GridGroupSettings ShowGroupedColumn="true"></GridGroupSettings>

                                        <GridEvents OnRecordDoubleClick="@ProductsDoubleClickHandler" TValue="ListProductsDto"></GridEvents>
                                        <GridEditSettings AllowAdding="false" AllowEditing="false" AllowDeleting="false" Mode="Syncfusion.Blazor.Grids.EditMode.Normal"></GridEditSettings>
                                        <GridFilterSettings Type="Syncfusion.Blazor.Grids.FilterType.Menu"></GridFilterSettings>
                                        <GridPageSettings PageSizes="true"></GridPageSettings>
                                        <GridSelectionSettings Type="Syncfusion.Blazor.Grids.SelectionType.Multiple"></GridSelectionSettings>
                                        <GridColumns>
                                            <GridColumn Field=@nameof(ListProductsDto.Code) HeaderText="@L["ProductModalGridCode"]" TextAlign="TextAlign.Center" Width="120"></GridColumn>
                                            <GridColumn Field=@nameof(ListProductsDto.Name) HeaderText="@L["ProductModalGridName"]" TextAlign="TextAlign.Center" Width="120"></GridColumn>
                                        </GridColumns>

                                    </SfGrid>
                                </CardContent>
                                <CardFooter>
                                </CardFooter>
                            </SfCard>
                        </Template>
                    </DxGridLayoutItem>
                </GridLayoutItems>
            </DevGridLayout>

        </BodyTemplate>
        <FooterContentTemplate>
        </FooterContentTemplate>
    </DxPopup>
}

@if (SelectWarehousesPopupVisible)
{
    <DxPopup @bind-Visible="SelectWarehousesPopupVisible"
             ShowFooter="true"
             CloseOnEscape="false"
             CloseOnOutsideClick="false"
             HeaderText="@L["WarehouseModalTitle"]"
             Width="64%"
             Height="44%"
             MinWidth="1220px"
             MinHeight="470px"
             HeaderCssClass="HeaderTitleCss">
        <BodyTemplate>

            <DevGridLayout ColumnCount="1" RowCount="1">
                <GridLayoutItems>
                    <DxGridLayoutItem Row="1" Column="1">
                        <Template>
                            <SfCard class="TSIGridCards">

                                <CardContent>
                                    <SfGrid ID="WarehousesGrid" ColumnMenuItems=@MenuItems ShowColumnMenu="true" DataSource="@WarehousesList" AllowPaging="true" AllowFiltering="true" AllowReordering="true" AllowResizing="true" AllowGrouping="true" AllowExcelExport="true" ShowColumnChooser="true" GridLines="GridLine.Both" AllowSelection="true" AllowSorting="true" Height="100%" Width="100%" class="GridZebra">
                                        <GridGroupSettings ShowGroupedColumn="true"></GridGroupSettings>

                                        <GridEvents OnRecordDoubleClick="@WarehousesDoubleClickHandler" TValue="ListWarehousesDto"></GridEvents>
                                        <GridEditSettings AllowAdding="false" AllowEditing="false" AllowDeleting="false" Mode="Syncfusion.Blazor.Grids.EditMode.Normal"></GridEditSettings>
                                        <GridFilterSettings Type="Syncfusion.Blazor.Grids.FilterType.Menu"></GridFilterSettings>
                                        <GridPageSettings PageSizes="true"></GridPageSettings>
                                        <GridSelectionSettings Type="Syncfusion.Blazor.Grids.SelectionType.Multiple"></GridSelectionSettings>
                                        <GridColumns>
                                            <GridColumn Field=@nameof(ListWarehousesDto.Code) HeaderText="@L["WarehouseModalGridCode"]" TextAlign="TextAlign.Center" Width="120"></GridColumn>
                                            <GridColumn Field=@nameof(ListWarehousesDto.Name) HeaderText="@L["WarehouseModalGridName"]" TextAlign="TextAlign.Center" Width="120"></GridColumn>
                                        </GridColumns>
                                    </SfGrid>
                                </CardContent>
                                <CardFooter>
                                </CardFooter>
                            </SfCard>
                        </Template>
                    </DxGridLayoutItem>
                </GridLayoutItems>
            </DevGridLayout>

        </BodyTemplate>
        <FooterContentTemplate>
        </FooterContentTemplate>
    </DxPopup>
}

@if (SelectBranchesPopupVisible)
{
    <DxPopup @bind-Visible="SelectBranchesPopupVisible"
             ShowFooter="true"
             CloseOnEscape="false"
             CloseOnOutsideClick="false"
             HeaderText="@L["BranchModalTitle"]"
             Width="64%"
             Height="44%"
             MinWidth="1220px"
             MinHeight="470px"
             HeaderCssClass="HeaderTitleCss">
        <BodyTemplate>

            <DevGridLayout ColumnCount="1" RowCount="1">
                <GridLayoutItems>
                    <DxGridLayoutItem Row="1" Column="1">
                        <Template>
                            <SfCard class="TSIGridCards">

                                <CardContent>
                                    <SfGrid ID="BranchesGrid" ColumnMenuItems=@MenuItems ShowColumnMenu="true" DataSource="@BranchesList" AllowPaging="true" AllowFiltering="true" AllowReordering="true" AllowResizing="true" AllowGrouping="true" AllowExcelExport="true" ShowColumnChooser="true" GridLines="GridLine.Both" AllowSelection="true" AllowSorting="true" Height="100%" Width="100%" class="GridZebra">

                                        <GridEvents OnRecordDoubleClick="@BranchesDoubleClickHandler" TValue="ListBranchesDto"></GridEvents>
                                        <GridGroupSettings ShowGroupedColumn="true"></GridGroupSettings>
                                        <GridEditSettings AllowAdding="false" AllowEditing="false" AllowDeleting="false" Mode="Syncfusion.Blazor.Grids.EditMode.Normal"></GridEditSettings>
                                        <GridFilterSettings Type="Syncfusion.Blazor.Grids.FilterType.Menu"></GridFilterSettings>
                                        <GridPageSettings PageSizes="true"></GridPageSettings>
                                        <GridSelectionSettings Type="Syncfusion.Blazor.Grids.SelectionType.Multiple"></GridSelectionSettings>
                                        <GridColumns>
                                            <GridColumn Field=@nameof(ListBranchesDto.Code) HeaderText="@L["BranchModalGridCode"]" TextAlign="TextAlign.Center" Width="120"></GridColumn>
                                            <GridColumn Field=@nameof(ListBranchesDto.Name) HeaderText="@L["BranchModalGridName"]" TextAlign="TextAlign.Center" Width="120">

                                            </GridColumn>
                                            <GridColumn Field=@nameof(ListBranchesDto.Description_) HeaderText="@L["BranchModalGridDescription"]" TextAlign="TextAlign.Center" Width="120"></GridColumn>
                                        </GridColumns>
                                    </SfGrid>
                                </CardContent>
                                <CardFooter>
                                </CardFooter>
                            </SfCard>
                        </Template>
                    </DxGridLayoutItem>
                </GridLayoutItems>
            </DevGridLayout>

        </BodyTemplate>
        <FooterContentTemplate>
        </FooterContentTemplate>
    </DxPopup>
}

@if (SelectProductionOrdersPopupVisible)
{
    <DxPopup @bind-Visible="SelectProductionOrdersPopupVisible"
             ShowFooter="true"
             CloseOnEscape="false"
             CloseOnOutsideClick="false"
             HeaderText="@L["ProductionOrdersModalTitle"]"
             Width="64%"
             Height="44%"
             MinWidth="1220px"
             MinHeight="470px"
             HeaderCssClass="HeaderTitleCss">
        <BodyTemplate>

            <DevGridLayout ColumnCount="1" RowCount="1">
                <GridLayoutItems>
                    <DxGridLayoutItem Row="1" Column="1">
                        <Template>
                            <SfCard class="TSIGridCards">

                                <CardContent>
                                    <SfGrid ID="ProdOrdersGrid" ColumnMenuItems=@MenuItems ShowColumnMenu="true" DataSource="@ProductionOrdersList" AllowPaging="true" AllowFiltering="true" AllowReordering="true" AllowResizing="true" AllowGrouping="true" AllowExcelExport="true" ShowColumnChooser="true" GridLines="GridLine.Both" AllowSelection="true" AllowSorting="true" Height="100%" Width="100%" class="GridZebra">

                                        <GridEvents OnRecordDoubleClick="@ProductionOrdersDoubleClickHandler" TValue="ListProductionOrdersDto"></GridEvents>
                                        <GridGroupSettings ShowGroupedColumn="true"></GridGroupSettings>
                                        <GridEditSettings AllowAdding="false" AllowEditing="false" AllowDeleting="false" Mode="Syncfusion.Blazor.Grids.EditMode.Normal"></GridEditSettings>
                                        <GridFilterSettings Type="Syncfusion.Blazor.Grids.FilterType.Menu"></GridFilterSettings>
                                        <GridPageSettings PageSizes="true"></GridPageSettings>
                                        <GridSelectionSettings Type="Syncfusion.Blazor.Grids.SelectionType.Single"></GridSelectionSettings>
                                        <GridColumns>
                                            <GridColumn Field=@nameof(ListProductionOrdersDto.FicheNo) HeaderText="@L["ProductionOrderModalGridFicheNo"]" TextAlign="TextAlign.Center" Width="120"></GridColumn>
                                            <GridColumn Field=@nameof(ListProductionOrdersDto.FinishedProductCode) HeaderText="@L["ProductionOrderModalGridFinishedProductCode"]" TextAlign="TextAlign.Center" Width="120">

                                            </GridColumn>
                                            <GridColumn Field=@nameof(ListProductionOrdersDto.PlannedQuantity) HeaderText="@L["ProductionOrderModalGridPlannedQuantity"]" TextAlign="TextAlign.Center" Width="120"></GridColumn>
                                            <GridColumn Field=@nameof(ListProductionOrdersDto.ProducedQuantity) HeaderText="@L["ProductionOrderModalGridProducedQuantity"]" TextAlign="TextAlign.Center" Width="120"></GridColumn>
                                        </GridColumns>
                                    </SfGrid>
                                </CardContent>
                                <CardFooter>
                                </CardFooter>
                            </SfCard>
                        </Template>
                    </DxGridLayoutItem>
                </GridLayoutItems>
            </DevGridLayout>

        </BodyTemplate>
        <FooterContentTemplate>
        </FooterContentTemplate>
    </DxPopup>
}




