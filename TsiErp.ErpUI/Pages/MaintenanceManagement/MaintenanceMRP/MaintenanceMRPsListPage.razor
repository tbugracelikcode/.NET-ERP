@page "/maintenance-mrps"
@layout MainLayout




@inherits BaseListPage<SelectMaintenanceMRPsDto, ListMaintenanceMRPsDto, CreateMaintenanceMRPsDto, UpdateMaintenanceMRPsDto, ListMaintenanceMRPsParameterDto>
@inject IStringLocalizer<MaintenanceMRPsResource> L

@inject IMaintenanceMRPsAppService MaintenanceMRPsAppService
@inject IPlannedMaintenancesAppService PlannedMaintenancesAppService
@inject IMaintenanceInstructionsAppService MaintenanceInstructionsAppService
@inject IMRPsAppService MRPsAppService
@inject IGrandTotalStockMovementsAppService GrandTotalStockMovementsAppService
@inject IProductsAppService ProductsAppService
@inject IUnitSetsAppService UnitSetsAppService
@inject IFicheNumbersAppService FicheNumbersAppService
@inject IProductsAppService ProductsAppService
@inject IUserPermissionsAppService UserPermissionsAppService
@inject IMenusAppService MenusAppService

@if (!base.IsLoaded)
{
    <CircleLoading Caption="@base.LoadingCaption" Text="@base.LoadingText" />
}
else
{
    <DevGridLayout ColumnCount="1" RowCount="3" RowHeights="@RowHeights("*")">
        <GridLayoutItems>
            <DxGridLayoutItem Row="0" Column="0" ColumnSpan="1">
                <Template>
                    <SfCard class="TSIListPageTitleCard">
                        <CardContent>
                            <TsiBreadCrumb PreviousMenus="@L["UIPreviousMenu"]" CurrentMenu="@L["UICurrentMenu"]" />
                        </CardContent>
                        <CardFooter>
                        </CardFooter>
                    </SfCard>
                </Template>
            </DxGridLayoutItem>
            <DxGridLayoutItem Row="2" Column="0" ColumnSpan="1">
                <Template>
                    <SfCard class="TSIGridCards">

                        <CardContent>
                            <SfGrid ID="Grid"  @ref="_grid"   AllowPdfExport=true ColumnMenuItems=@MenuItems ShowColumnMenu="true" DataSource="@ListDataSource" AllowPaging="false" AllowFiltering="true" AllowReordering="true" AllowResizing="true" AllowGrouping="true" AllowExcelExport="true" AllowSelection="true" ShowColumnChooser="true" GridLines="GridLine.Both" AllowSorting="true" Height="100%" Width="100%" class="GridZebra" ContextMenuItems="@MainGridContextMenu" Toolbar=@GridToolbarItems>
                                <GridGroupSettings ShowGroupedColumn="true"></GridGroupSettings>

                                    <GridEvents   ContextMenuItemClicked="@MainContextMenuClick" OnToolbarClick="@ToolbarClickHandler" TValue="ListMaintenanceMRPsDto"></GridEvents>
                                <GridEditSettings AllowAdding="false" AllowEditing="false" AllowDeleting="false" Mode="Syncfusion.Blazor.Grids.EditMode.Normal"></GridEditSettings>
                                <GridFilterSettings Type="Syncfusion.Blazor.Grids.FilterType.Menu"></GridFilterSettings>
                                <GridPageSettings PageSizes="true"></GridPageSettings>
                                <GridSelectionSettings Type="Syncfusion.Blazor.Grids.SelectionType.Single"></GridSelectionSettings>
                                <GridColumns>
                                    <GridColumn Field=@nameof(ListMaintenanceMRPsDto.Code) HeaderText="@L["Code"]" TextAlign="TextAlign.Center" Width="120"></GridColumn>
                                    <GridColumn Field=@nameof(ListMaintenanceMRPsDto.Date_) Format="dd.MM.yyyy" Type="ColumnType.DateTime" HeaderText="@L["Date_"]" TextAlign="TextAlign.Center" Width="120"></GridColumn> 
                                    <GridColumn Field=@nameof(ListMaintenanceMRPsDto.FilterStartDate) Format="dd.MM.yyyy" Type="ColumnType.DateTime" HeaderText="@L["FilterStartDate"]" TextAlign="TextAlign.Center" Width="120"></GridColumn>
                                    <GridColumn Field=@nameof(ListMaintenanceMRPsDto.FilterEndDate) Format="dd.MM.yyyy" Type="ColumnType.DateTime" HeaderText="@L["FilterEndDate"]" TextAlign="TextAlign.Center" Width="120"></GridColumn>
                                </GridColumns>
                            </SfGrid>
                        </CardContent>
                        <CardFooter>
                        </CardFooter>
                    </SfCard>
                </Template>
            </DxGridLayoutItem>
        </GridLayoutItems>
    </DevGridLayout>


    <DxPopup @bind-Visible="base.EditPageVisible"
             ShowFooter="true"
             CloseOnEscape="false"
             CloseOnOutsideClick="false"
             HeaderText="@L["EditModalTitle"]"
             Width="62%"
             Height="69%"
             MinWidth="1060px"
             MinHeight="750px"
             HeaderCssClass="HeaderTitleCss"
             Showing="CrudModalShowing"
             Closing="CrudModalClosing">
        <BodyTemplate>

            <DxGridLayout CssClass="TSIGridLayout">
                <Rows>
                    <DxGridLayoutRow Height="15%" />
                    <DxGridLayoutRow Height="13%" />
                    <DxGridLayoutRow Height="13%" />
                    <DxGridLayoutRow Height="11%" />
                    <DxGridLayoutRow Height="42%" />
                </Rows>
                <Columns>
                    <DxGridLayoutColumn Width="4%" />
                    <DxGridLayoutColumn Width="28%" />
                    <DxGridLayoutColumn Width="4%" />
                    <DxGridLayoutColumn Width="28%" />
                    <DxGridLayoutColumn Width="4%" />
                    <DxGridLayoutColumn Width="28%" />
                    <DxGridLayoutColumn Width="4%" />
                </Columns>
                <Items>

                    <DxGridLayoutItem Row="0" Column="1">
                        <Template>
                            <br />
                            <label class="TSIModalLabel"><strong>@L["CodeLabel"] </strong></label>
                            @* <SfTextBox CssClass="TSITxtBox" @bind-Value="DataSource.Code"></SfTextBox> *@

                            <SfTextBox @ref="@CodeButtonEdit" Created="@CodeOnCreateIcon" @bind-Value="DataSource.Code" ShowClearButton=true></SfTextBox>
                        </Template>
                    </DxGridLayoutItem>

                    <DxGridLayoutItem Row="1" Column="1">
                        <Template>
                            <label class="TSIModalLabel"><strong>@L["Date_Label"] </strong></label>
                            <SfDatePicker Enabled="false" @bind-Value="DataSource.Date_"></SfDatePicker>
                        </Template>
                    </DxGridLayoutItem>

                    <DxGridLayoutItem Row="2" Column="1">
                        <Template>
                            <label class="TSIModalLabel"><strong>@L["TimeLeftforMaintenanceLabel"] </strong></label>
                            <SfComboBox TValue="string" TItem="TimeLeftforMaintenanceComboBox" DataSource="@_timeLeftForMaintenaceComboBox">
                               <ComboBoxEvents TItem="TimeLeftforMaintenanceComboBox" TValue="string" ValueChange="@TimeLeftforMaintenanceComboBoxValueChangeHandler"></ComboBoxEvents>
                               <ComboBoxFieldSettings Value="ID" Text="Text"></ComboBoxFieldSettings>
                           </SfComboBox>
                        </Template>
                    </DxGridLayoutItem>

                    <DxGridLayoutItem Row="0" Column="3">
                        <Template>
                            <br />
                            <label class="TSIModalLabel"><strong>@L["FilterStartDateLabel"] </strong></label>
                            <SfDatePicker @bind-Value="DataSource.FilterStartDate" >
                                <DatePickerEvents TValue="DateTime?" ValueChange="StartDateValueChangeHandler"></DatePickerEvents>
                            </SfDatePicker>
                        </Template>
                    </DxGridLayoutItem>

                    <DxGridLayoutItem Row="1" Column="3">
                        <Template>
                            <label class="TSIModalLabel"><strong>@L["FilterEndDateLabel"] </strong></label>
                            <SfDatePicker Enabled="enableEndDate" @bind-Value="DataSource.FilterEndDate"></SfDatePicker>
                        </Template>
                    </DxGridLayoutItem>

                    <DxGridLayoutItem Row="2" Column="3">
                        <Template>
                            <br />
                            <label class="TSIModalLabel"><strong>@L["MergeLinesLabel"] </strong></label><br />
                            <center><SfSwitch Disabled="disableMergeLines" @bind-Checked="DataSource.IsMergeLines" TChecked="bool" ValueChange="MergeLinesSwitchChange"></SfSwitch></center>
                        </Template>
                    </DxGridLayoutItem>

                    <DxGridLayoutItem Row="0" Column="5" RowSpan="3">
                        <Template>
                            <br />
                            <label class="TSIModalLabel"><strong>@L["Description_Label"] </strong></label><br />
                            <SfTextBox CssClass="TSIMemoBox57" @bind-Value="DataSource.Description_" Multiline=true></SfTextBox>
                        </Template>
                    </DxGridLayoutItem>

                    <DxGridLayoutItem Row="3" Column="1">
                        <Template>
                            <SfButton CssClass="TSISaveButton" OnClick="CalculateButtonClicked"><SfIcon Size="IconSize.Medium" Name="IconName.Save"></SfIcon>&nbsp;@L["CalculateButton"]</SfButton>
                        </Template>
                    </DxGridLayoutItem>

                    <DxGridLayoutItem Row="4" Column="1" ColumnSpan="5">
                        <Template>
                            <SfGrid @ref=_LineGrid ID="LineGrid" ColumnMenuItems=@MenuItems ShowColumnMenu="true" DataSource="@GridLineList" AllowPaging="false" AllowFiltering="false" AllowReordering="true" AllowResizing="true" AllowGrouping="false" AllowExcelExport="false" AllowSelection="true" AllowSorting="true" Height="100%" Width="100%" class="GridZebra" ContextMenuItems="@LineGridContextMenu">
                                <GridEvents ContextMenuItemClicked="@OnListContextMenuClick" TValue="SelectMaintenanceMRPLinesDto"></GridEvents>
                                <GridGroupSettings ShowGroupedColumn="true"></GridGroupSettings>

                                <GridEditSettings AllowAdding="false" AllowEditing="false" AllowDeleting="false" Mode="Syncfusion.Blazor.Grids.EditMode.Normal"></GridEditSettings>
                                <GridFilterSettings Type="Syncfusion.Blazor.Grids.FilterType.Menu"></GridFilterSettings>
                                <GridSelectionSettings Type="Syncfusion.Blazor.Grids.SelectionType.Single"></GridSelectionSettings>
                                <GridColumns>
                                    <GridColumn Field=@nameof(SelectMaintenanceMRPLinesDto.isStockUsage) DisplayAsCheckBox="true" HeaderText="@L["LineGridisStockUsage"]" TextAlign="TextAlign.Center" Width="180"></GridColumn>
                                    <GridColumn Field=@nameof(SelectMaintenanceMRPLinesDto.ProductCode) HeaderText="@L["LineGridProductCode"]" TextAlign="TextAlign.Center" Width="200"></GridColumn>
                                    <GridColumn Field=@nameof(SelectMaintenanceMRPLinesDto.UnitSetCode) HeaderText="@L["LineGridUnitSetCode"]" TextAlign="TextAlign.Center" Width="200"></GridColumn>
                                     

                                    <GridColumn Field=@nameof(SelectMaintenanceMRPLinesDto.AmountOfStock) HeaderText="@L["LineGridAmountOfStock"]" TextAlign="TextAlign.Center" Width="250" Format="N2"></GridColumn>
                                    <GridColumn Field=@nameof(SelectMaintenanceMRPLinesDto.Amount) Type="ColumnType.Number" HeaderText="@L["LineGridAmount"]" TextAlign="TextAlign.Center" Width="280"></GridColumn>
                                    <GridColumn Field=@nameof(SelectMaintenanceMRPLinesDto.RequirementAmount) Type="ColumnType.Number" HeaderText="@L["LineGridRequirementAmount"]" TextAlign="TextAlign.Center" Width="280"></GridColumn>
                                </GridColumns>
                            </SfGrid>
                        </Template>
                    </DxGridLayoutItem>

                </Items>
            </DxGridLayout>
        </BodyTemplate>
        <FooterContentTemplate>
            <SfButton CssClass="TSISaveButton" OnClick="OnSubmit"><SfIcon Size="IconSize.Medium" Name="IconName.Save"></SfIcon>&nbsp;@L["SaveButton"]</SfButton>
            <SfButton CssClass="TSICancelButton" OnClick="HideEditPage"><SfIcon Size="IconSize.Medium" Name="IconName.Undo"></SfIcon>&nbsp;@L["CloseButton"]</SfButton>
        </FooterContentTemplate>
    </DxPopup>


  

}