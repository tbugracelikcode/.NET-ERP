@page "/work-orders"
@layout MainLayout


@inject IStringLocalizer<WorkOrdersResource> L 
@inherits BaseListPage<SelectWorkOrdersDto, ListWorkOrdersDto, CreateWorkOrdersDto, UpdateWorkOrdersDto, ListWorkOrdersParameterDto>


@inject IWorkOrdersAppService WorkOrdersAppService
@inject ICurrentAccountCardsAppService CurrentAccountCardsService
@inject IProductionOrdersAppService ProductionOrdersAppService
@inject ISalesPropositionsAppService SalesPropositionsAppService
@inject IRoutesAppService RoutesAppService
@inject IProductsOperationsAppService ProductsOperationsAppService
@inject IStationsAppService StationsAppService
@inject IStationGroupsAppService StationGroupsAppService
@inject IProductsAppService ProductsAppService
@inject IUserPermissionsAppService UserPermissionsAppService
@inject IMenusAppService MenusAppService
@inject IProductionTrackingsAppService ProductionTrackingsAppService
@inject IContractTrackingFichesAppService ContractTrackingFichesAppService

@if (!base.IsLoaded)
{
    <CircleLoading Caption="@base.LoadingCaption" Text="@base.LoadingText" />
}
else
{
    <DevGridLayout ColumnCount="1" RowCount="3" RowHeights="@RowHeights("*")">
        <GridLayoutItems>
            <DxGridLayoutItem Row="0" Column="0" ColumnSpan="1">
                <Template>
                    <SfCard class="TSIListPageTitleCard">
                        <CardContent>
                            <TsiBreadCrumb PreviousMenus="@L["UIPreviousMenu"]" CurrentMenu="@L["UICurrentMenu"]" />
                        </CardContent>
                        <CardFooter>
                        </CardFooter>
                    </SfCard>
                </Template>
            </DxGridLayoutItem>
            <DxGridLayoutItem Row="2" Column="0" ColumnSpan="1">
                <Template>
                    <SfCard class="TSIGridCards">
                        <CardContent>
                            <SfGrid ID="Grid" @ref="_grid" ColumnMenuItems=@MenuItems ShowColumnMenu="true" DataSource="@ListDataSource" AllowPaging="false" AllowFiltering="true" AllowReordering="true" AllowResizing="true" AllowGrouping="true" AllowExcelExport="true" AllowPdfExport=true ShowColumnChooser="true" GridLines="GridLine.Both" AllowSelection="true" AllowSorting="true" Height="100%" Width="100%" class="GridZebra" Toolbar=@GridToolbarItems ContextMenuItems="@MainGridContextMenu">
                                <GridGroupSettings ShowGroupedColumn="true"></GridGroupSettings>
                                <GridEvents ContextMenuItemClicked="@OnContextMenuClick" OnToolbarClick="@ToolbarClickHandler" TValue="ListWorkOrdersDto"></GridEvents>
                                <GridEditSettings AllowAdding="false" AllowEditing="false" AllowDeleting="false" Mode="Syncfusion.Blazor.Grids.EditMode.Normal"></GridEditSettings>
                                
                                <GridFilterSettings Type="Syncfusion.Blazor.Grids.FilterType.Menu"></GridFilterSettings>
                                <GridPageSettings PageSizes="true"></GridPageSettings>
                                <GridSelectionSettings Type="Syncfusion.Blazor.Grids.SelectionType.Single"></GridSelectionSettings>
                                <GridColumns>
                                    <GridColumn Field=@nameof(ListWorkOrdersDto.WorkOrderNo) HeaderText="@L["WorkOrderNo"]" TextAlign="TextAlign.Center" Width="180"></GridColumn>
                                    <GridColumn Field=@nameof(ListWorkOrdersDto.WorkOrderState) HeaderText="@L["WorkOrderState"]" TextAlign="TextAlign.Center" Width="180">

                                        <Template>
                                            @{
                                                WorkOrderStateEnum stateEnumform = (context as ListWorkOrdersDto).WorkOrderState;
                                                string stateForm = "";

                                                if (stateEnumform == WorkOrderStateEnum.Baslamadi)
                                                {
                                                    stateForm = L["EnumBaslamadi"];
                                                }
                                                else if(stateEnumform == WorkOrderStateEnum.Durduruldu)
                                                {
                                                    stateForm = L["EnumDurduruldu"];
                                                }
                                                else if(stateEnumform == WorkOrderStateEnum.Iptal)
                                                {
                                                    stateForm = L["EnumIptal"];
                                                }
                                                else if(stateEnumform == WorkOrderStateEnum.DevamEdiyor)
                                                {
                                                    stateForm = L["EnumDevamEdiyor"];
                                                }
                                                else if(stateEnumform == WorkOrderStateEnum.Tamamlandi)
                                                {
                                                    stateForm = L["EnumTamamlandi"];
                                                }
                                                else if(stateEnumform == WorkOrderStateEnum.FasonaGonderildi)
                                                {
                                                    stateForm = L["EnumFasonaGonderildi"];
                                                }
                                        }
                                        @stateForm
                                    </Template>

                                    </GridColumn>
                                    <GridColumn Field=@nameof(ListWorkOrdersDto.AdjustmentAndControlTime) HeaderText="@L["AdjustmentAndControlTime"]" Type="ColumnType.Number" TextAlign="TextAlign.Center" Width="250" Format="N0"></GridColumn>

                                    <GridColumn Field=@nameof(ListWorkOrdersDto.OperationTime) HeaderText="@L["OperationTime"]" Type="ColumnType.Number" TextAlign="TextAlign.Center" Width="220" Format="N0"></GridColumn>

                                    <GridColumn Field=@nameof(ListWorkOrdersDto.OccuredStartDate) HeaderText="@L["OccuredStartDate"]" Type="ColumnType.DateTime" TextAlign="TextAlign.Center" Width="250" Format="d">

                                        <Template>
                                            @{
                                                DateTime? OccuredStartDate = (context as ListWorkOrdersDto).OccuredStartDate;
                                                string startDate="";
                                                if(OccuredStartDate.GetValueOrDefault().Year!=1900)
                                                {
                                                    startDate=OccuredStartDate.GetValueOrDefault().ToShortDateString();
                                                }

                                            }
                                            @startDate
                                        </Template>

                                    </GridColumn>

                                    <GridColumn Field=@nameof(ListWorkOrdersDto.OccuredFinishDate) HeaderText="@L["OccuredFinishDate"]" Type="ColumnType.DateTime" TextAlign="TextAlign.Center" Width="250" Format="d">

                                        <Template>
                                            @{
                                                DateTime? OccuredFinishDate = (context as ListWorkOrdersDto).OccuredFinishDate;
                                                string finishDate="";
                                                if(OccuredFinishDate.GetValueOrDefault().Year!=1900)
                                                {
                                                    finishDate=OccuredFinishDate.GetValueOrDefault().ToShortDateString();
                                                }

                                            }
                                            @finishDate
                                        </Template>

                                    </GridColumn>

                                    <GridColumn Field=@nameof(ListWorkOrdersDto.PlannedQuantity) HeaderText="@L["PlannedQuantity"]" TextAlign="TextAlign.Center" Type="ColumnType.Number" Width="220" Format="N0">></GridColumn>

                                    <GridColumn Field=@nameof(ListWorkOrdersDto.ProducedQuantity) HeaderText="@L["ProducedQuantity"]" TextAlign="TextAlign.Center" Type="ColumnType.Number" Width="220" Format="N0">></GridColumn>

                                    <GridColumn Field=@nameof(ListWorkOrdersDto.ProductionOrderFicheNo) HeaderText="@L["ProductionOrderFicheNo"]" TextAlign="TextAlign.Center" Width="220"></GridColumn>

                                    <GridColumn Field=@nameof(ListWorkOrdersDto.PropositionFicheNo) HeaderText="@L["PropositionFicheNo"]" TextAlign="TextAlign.Center" Width="180"></GridColumn>

                                    <GridColumn Field=@nameof(ListWorkOrdersDto.RouteCode) HeaderText="@L["RouteCode"]" TextAlign="TextAlign.Center" Width="180"></GridColumn>

                                    <GridColumn Field=@nameof(ListWorkOrdersDto.ProductsOperationCode) HeaderText="@L["ProductsOperationCode"]" TextAlign="TextAlign.Center" Width="180"></GridColumn>
                                     
                                    <GridColumn Field=@nameof(ListWorkOrdersDto.StationCode) HeaderText="@L["StationCode"]" TextAlign="TextAlign.Center" Width="180"></GridColumn>

                                    <GridColumn Field=@nameof(ListWorkOrdersDto.StationGroupCode) HeaderText="@L["StationGroupCode"]" TextAlign="TextAlign.Center" Width="220"></GridColumn>

                                    <GridColumn Field=@nameof(ListWorkOrdersDto.ProductCode) HeaderText="@L["ProductCode"]" TextAlign="TextAlign.Center" Width="180"></GridColumn>

                                    <GridColumn Field=@nameof(ListWorkOrdersDto.CurrentAccountCardName) HeaderText="@L["CurrentAccountCardName"]" TextAlign="TextAlign.Center" Width="220"></GridColumn>
                                </GridColumns>
                            </SfGrid>
                        </CardContent>
                        <CardFooter>
                        </CardFooter>
                    </SfCard>
                </Template>
            </DxGridLayoutItem>
        </GridLayoutItems>
    </DevGridLayout>


    <DxPopup @bind-Visible="StationChangeModalVisible"
             ShowFooter="true"
             CloseOnEscape="false"
             CloseOnOutsideClick="false"
             HeaderText="@L["StationChangeModalTitle"]"
             Width="22%"
             Height="28%"
             MinWidth="380px"
             MinHeight="300px"
             HeaderCssClass="HeaderTitleCss">

        <BodyTemplate>
            <DxGridLayout CssClass="TSIGridLayout">

                <Rows>
                    <DxGridLayoutRow Height="45%" />
                    <DxGridLayoutRow Height="40%" />
                </Rows>

                <Columns>
                    <DxGridLayoutColumn Width="10%" />
                    <DxGridLayoutColumn Width="80%" />
                    <DxGridLayoutColumn Width="10%" />
                </Columns>

                <Items>
                    <br />
                    <DxGridLayoutItem Row="0" Column="1">
                        <Template>
                            <label class="TSIModalLabel"><strong>@L["OldStationLabel"] </strong></label>

                            <SfTextBox Enabled=false @bind-Value="OldStation"></SfTextBox>
                        </Template>
                    </DxGridLayoutItem>
                    <DxGridLayoutItem Row="1" Column="1">
                        <Template>
                            <label class="TSIModalLabel"><strong>@L["StationNameLabel"] </strong></label>
                            <SfTextBox @ref="@StationsNameButtonEdit" Created="@StationsNameOnCreateIcon" @bind-Value="NewStation" ShowClearButton=true ValueChange="StationsOnValueChange"></SfTextBox>
                        </Template>
                    </DxGridLayoutItem>
                </Items>
            </DxGridLayout>
        </BodyTemplate>
        <FooterContentTemplate>
            <SfButton CssClass="TSISaveButton" OnClick="OnStationChangeSubmit"><SfIcon Size="IconSize.Medium" Name="IconName.Save"></SfIcon>&nbsp;@L["SaveButton"]</SfButton>
            <SfButton CssClass="TSICancelButton" OnClick="HideStationChangeModal"><SfIcon Size="IconSize.Medium" Name="IconName.Undo"></SfIcon>&nbsp;@L["CloseButton"]</SfButton>
        </FooterContentTemplate>
    </DxPopup>

    <DxPopup @bind-Visible="WorkOrderSplitModalVisible"
             ShowFooter="true"
             CloseOnEscape="false"
             CloseOnOutsideClick="false"
             HeaderText="@L["WorkOrderSplitModalTitle"]"
             Width="42%"
             Height="48%"
             MinWidth="720px"
             MinHeight="500px"
             HeaderCssClass="HeaderTitleCss">

        <BodyTemplate>
            <DxGridLayout CssClass="TSIGridLayout">

                <Rows>
                    <DxGridLayoutRow Height="20%" />
                    <DxGridLayoutRow Height="18%" />
                    <DxGridLayoutRow Height="18%" />
                    <DxGridLayoutRow Height="18%" />
                </Rows>

                <Columns>
                    <DxGridLayoutColumn Width="6%" />
                    <DxGridLayoutColumn Width="42%" />
                    <DxGridLayoutColumn Width="6%" />
                    <DxGridLayoutColumn Width="42%" />
                    <DxGridLayoutColumn Width="6%" />
                </Columns>

                <Items>
                    <br />
                    <DxGridLayoutItem Row="0" Column="1">
                        <Template>
                            <label class="TSIModalLabel"><strong>@L["WorkOrderNoLabel"] </strong></label>

                            <SfTextBox Enabled=false @bind-Value="DataSource.WorkOrderNo"></SfTextBox>
                        </Template>
                    </DxGridLayoutItem>
                    <DxGridLayoutItem Row="1" Column="1">
                        <Template>
                            <label class="TSIModalLabel"><strong>@L["OldStationNameLabel"] </strong></label>
                            <SfTextBox Enabled=false @bind-Value="DataSource.StationName"></SfTextBox>
                        </Template>
                    </DxGridLayoutItem>
                    
                    <DxGridLayoutItem Row="2" Column="1">
                        <Template>
                            <label class="TSIModalLabel"><strong>@L["PlannedQuantityLabel"] </strong></label>
                            <SfNumericTextBox Enabled=false @bind-Value="DataSource.PlannedQuantity"></SfNumericTextBox>
                        </Template>
                    </DxGridLayoutItem>

                    <DxGridLayoutItem Row="3" Column="1">
                        <Template>
                            <label class="TSIModalLabel"><strong>@L["ProducedQuantityLabel"] </strong></label>
                            <SfNumericTextBox Enabled=false @bind-Value="DataSource.ProducedQuantity"></SfNumericTextBox>
                        </Template>
                    </DxGridLayoutItem>

                    <DxGridLayoutItem Row="0" Column="3">
                        <Template>
                            <label class="TSIModalLabel"><strong>@L["NewWorkOrderNoLabel"] </strong></label>
                            <SfTextBox  @bind-Value="NewWorkOrderNo"></SfTextBox>
                        </Template>
                    </DxGridLayoutItem>

                    <DxGridLayoutItem Row="1" Column="3">
                        <Template>
                            <label class="TSIModalLabel"><strong>@L["NewPlannedQuantityLabel"] </strong></label>
                            <SfNumericTextBox Min="0" Max="DataSource.PlannedQuantity" @bind-Value="NewPlannedQuantity"></SfNumericTextBox>
                        </Template>
                    </DxGridLayoutItem>

                    <DxGridLayoutItem Row="2" Column="3">
                        <Template>
                            <label class="TSIModalLabel"><strong>@L["StationNameLabel"] </strong></label>
                            <SfTextBox @ref="@StationsNameButtonEdit" Created="@StationsNameOnCreateIcon" @bind-Value="NewStation" ShowClearButton=true ValueChange="StationsOnValueChange"></SfTextBox>
                        </Template>
                    </DxGridLayoutItem>
                </Items>
            </DxGridLayout>
        </BodyTemplate>
        <FooterContentTemplate>
            <SfButton CssClass="TSISaveButton" OnClick="OnWorkOrderSplitSubmit"><SfIcon Size="IconSize.Medium" Name="IconName.Save"></SfIcon>&nbsp;@L["SaveButton"]</SfButton>
            <SfButton CssClass="TSICancelButton" OnClick="HideWorkOrderSplitModal"><SfIcon Size="IconSize.Medium" Name="IconName.Undo"></SfIcon>&nbsp;@L["CloseButton"]</SfButton>
        </FooterContentTemplate>
    </DxPopup>

    <DxPopup @bind-Visible="ProductionTrackingModalVisible"
             ShowFooter="true"
             CloseOnEscape="false"
             CloseOnOutsideClick="false"
             HeaderText="@L["ProductionTrackingModalTitle"]"
             Width="75%"
             Height="50%"
             MinWidth="1300px"
             MinHeight="540px"
             HeaderCssClass="HeaderTitleCss">

        <BodyTemplate>
            <DxGridLayout CssClass="TSIGridLayout">

                <Rows>
                    <DxGridLayoutRow Height="95%" />
                </Rows>

                <Columns>
                    <DxGridLayoutColumn Width="3%" />
                    <DxGridLayoutColumn Width="94%" />
                    <DxGridLayoutColumn Width="3%" />
                </Columns>

                <Items>
                    <br />
                    <DxGridLayoutItem Row="0" Column="1">
                        <Template>
                            <SfGrid ID="ProductionTrackingsGrid" ColumnMenuItems=@MenuItems ShowColumnMenu="true" DataSource="@ProductionTrackingsList" AllowPaging="true" AllowFiltering="true" AllowReordering="true" AllowResizing="true" AllowGrouping="true" AllowExcelExport="true" ShowColumnChooser="true" GridLines="GridLine.Both" AllowSelection="true" AllowSorting="true" Height="100%" Width="100%" class="GridZebra">
                                <GridGroupSettings ShowGroupedColumn="true"></GridGroupSettings>
                                <GridEditSettings AllowAdding="false" AllowEditing="false" AllowDeleting="false" Mode="Syncfusion.Blazor.Grids.EditMode.Normal"></GridEditSettings>
                                <GridFilterSettings Type="Syncfusion.Blazor.Grids.FilterType.Menu"></GridFilterSettings>
                                <GridPageSettings PageSizes="true"></GridPageSettings>
                                <GridSelectionSettings Type="Syncfusion.Blazor.Grids.SelectionType.Multiple"></GridSelectionSettings>
                                <GridColumns>
                                    <GridColumn Field=@nameof(ListProductionTrackingsDto.WorkOrderCode) HeaderText="@L["ProductionTrackingWorkOrderCode"]" TextAlign="TextAlign.Center" Width="160"></GridColumn>

                                    <GridColumn Field=@nameof(ListProductionTrackingsDto.OperationStartDate) Format="dd.MM.yyyy" HeaderText="@L["ProductionTrackingOperationStartDate"]" TextAlign="TextAlign.Center" Width="190" Context="productionTrackingContext">
                                        <Template>
                                            @{
                                                string operationStartTime = (productionTrackingContext as ListProductionTrackingsDto).OperationStartDate.ToShortDateString()
                                                + " "
                                                + (productionTrackingContext as ListProductionTrackingsDto).OperationStartTime.GetValueOrDefault().ToString();
                                            }
                                            @operationStartTime
                                        </Template>
                                    </GridColumn>

                                    <GridColumn Field=@nameof(ListProductionTrackingsDto.OperationEndDate) Format="dd.MM.yyyy" HeaderText="@L["ProductionTrackingOperationEndDate"]" TextAlign="TextAlign.Center" Width="160" Context="productionTrackingContext">
                                        <Template>
                                            @{
                                                string operationEndTime = (productionTrackingContext as ListProductionTrackingsDto).OperationEndDate.ToShortDateString()
                                                + " "
                                                + (productionTrackingContext as ListProductionTrackingsDto).OperationEndTime.GetValueOrDefault().ToString();
                                            }
                                            @operationEndTime
                                        </Template>
                                    </GridColumn>

                                    <GridColumn Field=@nameof(ListProductionTrackingsDto.PlannedQuantity) Type="ColumnType.Number" HeaderText="@L["ProductionTrackingPlannedQuantity"]" TextAlign="TextAlign.Center" Format="N0" Width="220"></GridColumn>

                                    <GridColumn Field=@nameof(ListProductionTrackingsDto.ProducedQuantity) HeaderText="@L["ProductionTrackingProducedQuantity"]" TextAlign="TextAlign.Center" Format="N0" Width="210"></GridColumn>

                                    <GridColumn Field=@nameof(ListProductionTrackingsDto.OperationTime) HeaderText="@L["OProductionTrackingperationTime"]" TextAlign="TextAlign.Center" Format="N0" Width="220"></GridColumn>

                                    <GridColumn Field=@nameof(ListProductionTrackingsDto.HaltTime) Type="ColumnType.Number" HeaderText="@L["ProductionTrackingHaltTime"]" TextAlign="TextAlign.Center" Format="N0" Width="160"></GridColumn>

                                    <GridColumn Field=@nameof(ListProductionTrackingsDto.AdjustmentTime) Type="ColumnType.Number" HeaderText="@L["ProductionTrackingAdjustmentTime"]" TextAlign="TextAlign.Center" Format="N0" Width="160"></GridColumn>

                                    <GridColumn Field=@nameof(ListProductionTrackingsDto.StationCode) HeaderText="@L["ProductionTrackingStationCode"]" TextAlign="TextAlign.Center" Width="190"></GridColumn>

                                    <GridColumn Field=@nameof(ListProductionTrackingsDto.EmployeeName) HeaderText="@L["ProductionTrackingEmployeeName"]" TextAlign="TextAlign.Center" Width="160"></GridColumn>

                                    <GridColumn Field=@nameof(ListProductionTrackingsDto.IsFinished) HeaderText="@L["ProductionTrackingIsFinished"]" TextAlign="TextAlign.Center" DisplayAsCheckBox="true" Width="160"></GridColumn>
                                </GridColumns>
                            </SfGrid>
                        </Template>
                    </DxGridLayoutItem>
                </Items>
            </DxGridLayout>
        </BodyTemplate>
        <FooterContentTemplate>
            <SfButton CssClass="TSICancelButton" OnClick="HideProductionTrackingModal"><SfIcon Size="IconSize.Medium" Name="IconName.Undo"></SfIcon>&nbsp;@L["CloseButton"]</SfButton>
        </FooterContentTemplate>
    </DxPopup>

    <DxPopup @bind-Visible="ContractTrackingFicheLineModalVisible"
             ShowFooter="true"
             CloseOnEscape="false"
             CloseOnOutsideClick="false"
             HeaderText="@L["ContractTrackingFicheModalTitle"]"
             Width="75%"
             Height="50%"
             MinWidth="1300px"
             MinHeight="540px"
             HeaderCssClass="HeaderTitleCss">

        <BodyTemplate>
            <DxGridLayout CssClass="TSIGridLayout">

                <Rows>
                    <DxGridLayoutRow Height="95%" />
                </Rows>

                <Columns>
                    <DxGridLayoutColumn Width="3%" />
                    <DxGridLayoutColumn Width="94%" />
                    <DxGridLayoutColumn Width="3%" />
                </Columns>

                <Items>
                    <br />
                    <DxGridLayoutItem Row="0" Column="1">
                        <Template>
                            <SfGrid ID="ContractTrackingFichesGrid" ColumnMenuItems=@MenuItems ShowColumnMenu="true" DataSource="@ContractTrackingFicheLinesList" AllowPaging="true" AllowFiltering="true" AllowReordering="true" AllowResizing="true" AllowGrouping="true" AllowExcelExport="true" ShowColumnChooser="true" GridLines="GridLine.Both" AllowSelection="true" AllowSorting="true" Height="100%" Width="100%" class="GridZebra">
                                <GridGroupSettings ShowGroupedColumn="true"></GridGroupSettings>
                                <GridEditSettings AllowAdding="false" AllowEditing="false" AllowDeleting="false" Mode="Syncfusion.Blazor.Grids.EditMode.Normal"></GridEditSettings>
                                <GridFilterSettings Type="Syncfusion.Blazor.Grids.FilterType.Menu"></GridFilterSettings>
                                <GridPageSettings PageSizes="true"></GridPageSettings>
                                <GridSelectionSettings Type="Syncfusion.Blazor.Grids.SelectionType.Multiple"></GridSelectionSettings>
                                <GridColumns>
                                    <GridColumn Field=@nameof(SelectContractTrackingFicheLinesDto.WorkOrderNr) HeaderText="@L["ContractTrackingFicheGridWorkOrderNr"]" TextAlign="TextAlign.Center" Width="220"></GridColumn>
                                    <GridColumn Field=@nameof(SelectContractTrackingFicheLinesDto.StationCode) HeaderText="@L["ContractTrackingFicheGridStationCode"]" TextAlign="TextAlign.Center" Width="220"></GridColumn>
                                    <GridColumn Field=@nameof(SelectContractTrackingFicheLinesDto.StationName) HeaderText="@L["ContractTrackingFicheGridStationName"]" TextAlign="TextAlign.Center" Width="220"></GridColumn>
                                    <GridColumn Field=@nameof(SelectContractTrackingFicheLinesDto.OperationCode) HeaderText="@L["ContractTrackingFicheGridOperationCode"]" TextAlign="TextAlign.Center" Width="220"></GridColumn>
                                    <GridColumn Field=@nameof(SelectContractTrackingFicheLinesDto.OperationName) HeaderText="@L["ContractTrackingFicheGridOperationName"]" TextAlign="TextAlign.Center" Width="220"></GridColumn>
                                    <GridColumn Field=@nameof(SelectContractTrackingFicheLinesDto.IsSent) DisplayAsCheckBox=true HeaderText="@L["ContractTrackingFicheGridIsSent"]" TextAlign="TextAlign.Center" Width="220"></GridColumn>
                                </GridColumns>
                            </SfGrid>
                        </Template>
                    </DxGridLayoutItem>
                </Items>
            </DxGridLayout>
        </BodyTemplate>
        <FooterContentTemplate>
            <SfButton CssClass="TSICancelButton" OnClick="HideContractTrackingFicheModal"><SfIcon Size="IconSize.Medium" Name="IconName.Undo"></SfIcon>&nbsp;@L["CloseButton"]</SfButton>
        </FooterContentTemplate>
    </DxPopup>
}


@if (SelectStationsPopupVisible)
{
    <DxPopup @bind-Visible="SelectStationsPopupVisible"
             ShowFooter="true"
             CloseOnEscape="false"
             CloseOnOutsideClick="false"
             HeaderText="@L["StationModalTitle"]"
             Width="64%"
             Height="44%"
             MinWidth="1220px"
             MinHeight="470px"
             HeaderCssClass="HeaderTitleCss">
        <BodyTemplate>

            <DevGridLayout ColumnCount="1" RowCount="1">
                <GridLayoutItems>
                    <DxGridLayoutItem Row="1" Column="1">
                        <Template>
                            <SfCard class="TSIGridCards">

                                <CardContent>
                                    <SfGrid ID="StationsGrid" ColumnMenuItems=@MenuItems ShowColumnMenu="true" DataSource="@StationsList" AllowPaging="true" AllowFiltering="true" AllowReordering="true" AllowResizing="true" AllowGrouping="true" AllowExcelExport="true" ShowColumnChooser="true" GridLines="GridLine.Both" AllowSelection="true" AllowSorting="true" Height="100%" Width="100%" class="GridZebra">
                                        <GridGroupSettings ShowGroupedColumn="true"></GridGroupSettings>

                                        <GridEvents OnRecordDoubleClick="@StationsDoubleClickHandler" TValue="ListStationsDto"></GridEvents>
                                        <GridEditSettings AllowAdding="false" AllowEditing="false" AllowDeleting="false" Mode="Syncfusion.Blazor.Grids.EditMode.Normal"></GridEditSettings>
                                        <GridFilterSettings Type="Syncfusion.Blazor.Grids.FilterType.Menu"></GridFilterSettings>
                                        <GridPageSettings PageSizes="true"></GridPageSettings>
                                        <GridSelectionSettings Type="Syncfusion.Blazor.Grids.SelectionType.Multiple"></GridSelectionSettings>
                                        <GridColumns>
                                            <GridColumn Field=@nameof(ListStationsDto.Code) HeaderText="@L["StationModalGridCode"]" TextAlign="TextAlign.Center" Width="120"></GridColumn>
                                            <GridColumn Field=@nameof(ListStationsDto.Name) HeaderText="@L["StationModalGridName"]" TextAlign="TextAlign.Center" Width="120"></GridColumn>
                                        </GridColumns>
                                    </SfGrid>
                                </CardContent>
                                <CardFooter>
                                </CardFooter>
                            </SfCard>
                        </Template>
                    </DxGridLayoutItem>
                </GridLayoutItems>
            </DevGridLayout>

        </BodyTemplate>
        <FooterContentTemplate>
        </FooterContentTemplate>
    </DxPopup>
}