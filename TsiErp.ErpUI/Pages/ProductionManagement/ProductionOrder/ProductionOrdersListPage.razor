@page "/production-orders"
@layout MainLayout


@inject IStringLocalizer<ProductionOrdersResource> L
@inherits BaseListPage<SelectProductionOrdersDto, ListProductionOrdersDto, CreateProductionOrdersDto, UpdateProductionOrdersDto, ListProductionOrdersParameterDto>


@inject IProductionOrdersAppService ProductionOrdersAppService
@inject IPurchaseManagementParametersAppService PurchaseManagementParametersAppService
@inject IBranchesAppService BranchesAppService
@inject IWarehousesAppService WarehousesAppService
@inject IStockFichesAppService StockFichesAppService
@inject IFicheNumbersAppService FicheNumbersAppService
@inject IUserPermissionsAppService UserPermissionsAppService
@inject IMenusAppService MenusAppService
@inject IGetSQLDateAppService GetSQLDateAppService

@if (!base.IsLoaded)
{
    <CircleLoading Caption="@base.LoadingCaption" Text="@base.LoadingText" />
}
else
{
    <DevGridLayout ColumnCount="1" RowCount="3" RowHeights="@RowHeights("*")">
        <GridLayoutItems>
            <DxGridLayoutItem Row="0" Column="0" ColumnSpan="1">
                <Template>
                    <SfCard class="TSIListPageTitleCard">
                        <CardContent>
                            <TsiBreadCrumb PreviousMenus="@L["UIPreviousMenu"]" CurrentMenu="@L["UICurrentMenu"]" />
                        </CardContent>
                        <CardFooter>
                        </CardFooter>
                    </SfCard>
                </Template>
            </DxGridLayoutItem>
            <DxGridLayoutItem Row="2" Column="0" ColumnSpan="1">
                <Template>
                    <SfCard class="TSIGridCards">
                        <CardContent>
                            <SfGrid ID="Grid" @ref="_grid" ColumnMenuItems=@MenuItems ShowColumnMenu="true" DataSource="@ListDataSource" AllowPaging="false" AllowFiltering="true" AllowReordering="true" AllowResizing="true" AllowGrouping="true" AllowExcelExport="true" AllowPdfExport=true ShowColumnChooser="true" GridLines="GridLine.Both" AllowSelection="true" AllowSorting="true" Height="100%" Width="100%" ContextMenuItems="@MainGridContextMenu" class="GridZebra" Toolbar=@GridToolbarItems>
                                <GridGroupSettings ShowGroupedColumn="true"></GridGroupSettings>
                                <GridEvents ContextMenuItemClicked="@MainContextMenuClick" OnToolbarClick="@ToolbarClickHandler" TValue="ListProductionOrdersDto"></GridEvents>
                                <GridEditSettings AllowAdding="false" AllowEditing="false" AllowDeleting="false" Mode="Syncfusion.Blazor.Grids.EditMode.Normal"></GridEditSettings>

                                <GridFilterSettings Type="Syncfusion.Blazor.Grids.FilterType.Menu"></GridFilterSettings>
                                <GridPageSettings PageSizes="true"></GridPageSettings>
                                <GridSelectionSettings Type="Syncfusion.Blazor.Grids.SelectionType.Single"></GridSelectionSettings>
                                <GridColumns>
                                    <GridColumn Field=@nameof(ListProductionOrdersDto.FicheNo) HeaderText="@L["FicheNo"]" TextAlign="TextAlign.Center" Width="120"></GridColumn>

                                    <GridColumn Field=@nameof(ListProductionOrdersDto.ProductionOrderState) HeaderText="@L["ProductionOrderState"]" TextAlign="TextAlign.Center" Width="120">

                                        <Template>
                                            @{
                                                ProductionOrderStateEnum stateEnumform = (context as ListProductionOrdersDto).ProductionOrderState;
                                                string stateForm = "";

                                                if (stateEnumform == ProductionOrderStateEnum.Baslamadi)
                                                {
                                                    stateForm = L["EnumBaslamadi"];
                                                }
                                                else if (stateEnumform == ProductionOrderStateEnum.Durduruldu)
                                                {
                                                    stateForm = L["EnumDurduruldu"];
                                                }
                                                else if (stateEnumform == ProductionOrderStateEnum.Iptal)
                                                {
                                                    stateForm = L["EnumIptal"];
                                                }
                                                else if (stateEnumform == ProductionOrderStateEnum.DevamEdiyor)
                                                {
                                                    stateForm = L["EnumDevamEdiyor"];
                                                }
                                                else if (stateEnumform == ProductionOrderStateEnum.Tamamlandi)
                                                {
                                                    stateForm = L["EnumTamamlandi"];
                                                }
                                            }
                                            @stateForm
                                        </Template>

                                    </GridColumn>
                                    
                                    <GridColumn Field=@nameof(ListProductionOrdersDto.PlannedQuantity) HeaderText="@L["PlannedQuantity"]" Type="ColumnType.Number" TextAlign="TextAlign.Center" Width="120" Format="N0"></GridColumn>
                                    <GridColumn Field=@nameof(ListProductionOrdersDto.ProducedQuantity) HeaderText="@L["ProducedQuantity"]" Type="ColumnType.Number" TextAlign="TextAlign.Center" Width="120" Format="N0"></GridColumn>
                                    <GridColumn Field=@nameof(ListProductionOrdersDto.CustomerCode) HeaderText="@L["CustomerCode"]" TextAlign="TextAlign.Center" Width="120"></GridColumn>
                                    <GridColumn Field=@nameof(ListProductionOrdersDto.OrderFicheNo) HeaderText="@L["OrderFicheNo"]" TextAlign="TextAlign.Center" Width="120"></GridColumn>
                                    <GridColumn Field=@nameof(ListProductionOrdersDto.FinishedProductCode) HeaderText="@L["FinishedProductCode"]" TextAlign="TextAlign.Center" Width="120"></GridColumn>
                                    <GridColumn Field=@nameof(ListProductionOrdersDto.LinkedProductCode) HeaderText="@L["LinkedProductCode"]" TextAlign="TextAlign.Center" Width="120"></GridColumn>
                                    <GridColumn Field=@nameof(ListProductionOrdersDto.UnitSetCode) HeaderText="@L["UnitSetCode"]" TextAlign="TextAlign.Center" Width="120"></GridColumn>
                                    <GridColumn Field=@nameof(ListProductionOrdersDto.BOMCode) HeaderText="@L["BOMCode"]" TextAlign="TextAlign.Center" Width="120"></GridColumn>
                                </GridColumns>
                            </SfGrid>
                        </CardContent>
                        <CardFooter>
                        </CardFooter>
                    </SfCard>
                </Template>
            </DxGridLayoutItem>
        </GridLayoutItems>
    </DevGridLayout>

    <DxPopup @bind-Visible="OccuredAmountPopup"
         ShowFooter="true"
         CloseOnEscape="false"
         CloseOnOutsideClick="false"
         HeaderText="@L["OccuredAmountTitle"]"
         Width="35%"
         Height="80%"
         MinWidth="600px"
         MinHeight="700px"
         HeaderCssClass="HeaderTitleCss">

        <BodyTemplate>
            <DxGridLayout CssClass="TSIGridLayout">

                <Rows>
                    <DxGridLayoutRow Height="14%" />
                    <DxGridLayoutRow Height="12%" />
                    <DxGridLayoutRow Height="12%" />
                    <DxGridLayoutRow Height="12%" />
                    <DxGridLayoutRow Height="12%" />
                    <DxGridLayoutRow Height="12%" />
                    <DxGridLayoutRow Height="12%" />
                    <DxGridLayoutRow Height="12%" />
                </Rows>

                <Columns>
                    <DxGridLayoutColumn Width="6%" />
                    <DxGridLayoutColumn Width="30%" />
                    <DxGridLayoutColumn Width="6%" />
                    <DxGridLayoutColumn Width="50%" />
                    <DxGridLayoutColumn Width="6%" />

                </Columns>

                <Items>
                    <br />
                    <DxGridLayoutItem Row="0" Column="1">
                        <Template>
                            <label class="TSIModalLabel"><strong>@L["FinishedProductCodeLabel"] </strong></label>
                        </Template>
                    </DxGridLayoutItem>

                     <DxGridLayoutItem Row="0" Column="3">
                        <Template>
                            <SfTextBox Enabled=false @bind-Value="DataSource.FinishedProductCode"></SfTextBox>
                        </Template>
                    </DxGridLayoutItem>

                     <DxGridLayoutItem Row="1" Column="1">
                        <Template>
                            <label class="TSIModalLabel"><strong>@L["FinishedProductNameLabel"] </strong></label>
                        </Template>
                    </DxGridLayoutItem>

                     <DxGridLayoutItem Row="1" Column="3">
                        <Template>
                            <SfTextBox Enabled=false @bind-Value="DataSource.FinishedProductName"></SfTextBox>
                        </Template>
                    </DxGridLayoutItem>

                    <DxGridLayoutItem Row="2" Column="1">
                        <Template>
                            <label class="TSIModalLabel"><strong>@L["CustomerCodeLabel"] </strong></label>
                        </Template>
                    </DxGridLayoutItem>

                     <DxGridLayoutItem Row="2" Column="3">
                        <Template>
                            <SfTextBox Enabled=false @bind-Value="DataSource.CustomerCode"></SfTextBox>
                        </Template>
                    </DxGridLayoutItem>

                    <DxGridLayoutItem Row="3" Column="1">
                        <Template>
                            <label class="TSIModalLabel"><strong>@L["Date_Label"] </strong></label>
                        </Template>
                    </DxGridLayoutItem>

                     <DxGridLayoutItem Row="3" Column="3">
                        <Template>
                            <SfDatePicker Enabled=false @bind-Value="DataSource.Date_"></SfDatePicker>
                        </Template>
                    </DxGridLayoutItem>

                    <DxGridLayoutItem Row="4" Column="1">
                        <Template>
                            <label class="TSIModalLabel"><strong>@L["QuantityLabel"] </strong></label>
                        </Template>
                    </DxGridLayoutItem>

                     <DxGridLayoutItem Row="4" Column="3">
                        <Template>
                            <SfNumericTextBox Min=0 TValue="decimal" @bind-Value="quantity"></SfNumericTextBox>
                        </Template>
                    </DxGridLayoutItem>

                     <DxGridLayoutItem Row="5" Column="1">
                        <Template>
                            <label class="TSIModalLabel"><strong>@L["ProductionDateReferanceLabel"] </strong></label>
                        </Template>
                    </DxGridLayoutItem>

                     <DxGridLayoutItem Row="5" Column="3">
                        <Template>
                            <SfTextBox  @bind-Value="productionDateReferance"></SfTextBox>
                        </Template>
                    </DxGridLayoutItem>

                    <DxGridLayoutItem Row="6" Column="1">
                        <Template>
                            <label class="TSIModalLabel"><strong>@L["BranchCodeButtonEditLabel"] </strong></label>
                        </Template>
                    </DxGridLayoutItem>

                     <DxGridLayoutItem Row="6" Column="3">
                        <Template>
                             <SfTextBox @ref="@BranchesButtonEdit" Created="@BranchesOnCreateIcon" @bind-Value="DataSource.BranchCode" ShowClearButton=true ValueChange="BranchesOnValueChange"></SfTextBox>
                        </Template>
                    </DxGridLayoutItem>

                    <DxGridLayoutItem Row="7" Column="1">
                        <Template>
                            <label class="TSIModalLabel"><strong>@L["WarehouseCodeButtonEditLabel"] </strong></label>
                        </Template>
                    </DxGridLayoutItem>

                     <DxGridLayoutItem Row="7" Column="3">
                        <Template>
                            <SfTextBox @ref="@WarehousesButtonEdit" Created="@WarehousesOnCreateIcon" @bind-Value="DataSource.WarehouseCode" ShowClearButton=true ValueChange="WarehousesOnValueChange"></SfTextBox>
                        </Template>
                    </DxGridLayoutItem>

                  

                </Items>
            </DxGridLayout>
        </BodyTemplate>
        <FooterContentTemplate>
            <SfButton CssClass="TSISaveButton" OnClick="CreateFiche"><SfIcon Size="IconSize.Medium" Name="IconName.Save"></SfIcon>&nbsp;@L["CreateFicheButton"]</SfButton>
            <SfButton CssClass="TSICancelButton" OnClick="HideOccuredAmountPopup"><SfIcon Size="IconSize.Medium" Name="IconName.Undo"></SfIcon>&nbsp;@L["CloseButton"]</SfButton>
        </FooterContentTemplate>
    </DxPopup>

}

 @if (SelectWarehousesPopupVisible)
{
    <DxPopup @bind-Visible="SelectWarehousesPopupVisible"
         ShowFooter="true"
         CloseOnEscape="false"
         CloseOnOutsideClick="false"
         HeaderText="@L["WarehouseModalTitle"]"
         Width="64%"
         Height="44%"
         MinWidth="1220px"
         MinHeight="470px"
         HeaderCssClass="HeaderTitleCss">
        <BodyTemplate>

            <DevGridLayout ColumnCount="1" RowCount="1">
                <GridLayoutItems>
                    <DxGridLayoutItem Row="1" Column="1">
                        <Template>
                            <SfCard class="TSIGridCards">

                                <CardContent>
                                    <SfGrid ID="WarehouseGrid1" ColumnMenuItems=@MenuItems ShowColumnMenu="true" DataSource="@WarehousesList" AllowPaging="true" AllowFiltering="true" AllowReordering="true" AllowResizing="true" AllowGrouping="true" AllowExcelExport="true" AllowSelection="true" ShowColumnChooser="true" GridLines="GridLine.Both"
                                        AllowSorting="true" Height="100%" Width="100%" class="GridZebra" >
                                        <GridGroupSettings ShowGroupedColumn="true"></GridGroupSettings>

                                        <GridEvents OnRecordDoubleClick="@WarehousesDoubleClickHandler" TValue="ListWarehousesDto"></GridEvents>
                                        <GridEditSettings AllowAdding="false" AllowEditing="false" AllowDeleting="false" Mode="Syncfusion.Blazor.Grids.EditMode.Normal"></GridEditSettings>
                                        <GridFilterSettings Type="Syncfusion.Blazor.Grids.FilterType.Menu"></GridFilterSettings>
                                        <GridPageSettings PageSizes="true"></GridPageSettings>
                                        <GridSelectionSettings Type="Syncfusion.Blazor.Grids.SelectionType.Multiple"></GridSelectionSettings>
                                        <GridColumns>
                                            <GridColumn Field=@nameof(ListWarehousesDto.Code) HeaderText="@L["WarehousesPopupGridCode"]" TextAlign="TextAlign.Center" Width="120"></GridColumn>
                                            <GridColumn Field=@nameof(ListWarehousesDto.Name) HeaderText="@L["WarehousesPopupGridName"]" TextAlign="TextAlign.Center" Width="120"></GridColumn>

                                        </GridColumns>
                                    </SfGrid>
                                </CardContent>
                                <CardFooter>
                                </CardFooter>
                            </SfCard>
                        </Template>
                    </DxGridLayoutItem>
                </GridLayoutItems>
            </DevGridLayout>

        </BodyTemplate>
        <FooterContentTemplate>
        </FooterContentTemplate>
    </DxPopup>
}

@if (SelectBranchesPopupVisible)
{
    <DxPopup @bind-Visible="SelectBranchesPopupVisible"
         ShowFooter="true"
         CloseOnEscape="false"
         CloseOnOutsideClick="false"
         HeaderText="@L["BranchModalTitle"]"
         Width="64%"
         Height="44%"
         MinWidth="1220px"
         MinHeight="470px"
         HeaderCssClass="HeaderTitleCss">
        <BodyTemplate>

            <DevGridLayout ColumnCount="1" RowCount="1">
                <GridLayoutItems>
                    <DxGridLayoutItem Row="1" Column="1">
                        <Template>
                            <SfCard class="TSIGridCards">

                                <CardContent>
                                    <SfGrid ID="BranchGrid1" ColumnMenuItems=@MenuItems ShowColumnMenu="true" DataSource="@BranchesList" AllowPaging="true" AllowFiltering="true" AllowReordering="true" AllowResizing="true" AllowGrouping="true" AllowExcelExport="true" AllowSelection="true" ShowColumnChooser="true" GridLines="GridLine.Both"
                                        AllowSorting="true" Height="100%" Width="100%" class="GridZebra" >
                                        <GridGroupSettings ShowGroupedColumn="true"></GridGroupSettings>

                                        <GridEvents OnRecordDoubleClick="@BranchesDoubleClickHandler" TValue="ListBranchesDto"></GridEvents>
                                        <GridEditSettings AllowAdding="false" AllowEditing="false" AllowDeleting="false" Mode="Syncfusion.Blazor.Grids.EditMode.Normal"></GridEditSettings>
                                        <GridFilterSettings Type="Syncfusion.Blazor.Grids.FilterType.Menu"></GridFilterSettings>
                                        <GridPageSettings PageSizes="true"></GridPageSettings>
                                        <GridSelectionSettings Type="Syncfusion.Blazor.Grids.SelectionType.Multiple"></GridSelectionSettings>
                                        <GridColumns>
                                            <GridColumn Field=@nameof(ListBranchesDto.Code) HeaderText="@L["BranchesPopupGridCode"]" TextAlign="TextAlign.Center" Width="120"></GridColumn>
                                            <GridColumn Field=@nameof(ListBranchesDto.Name) HeaderText="@L["BranchesPopupGridName"]" TextAlign="TextAlign.Center" Width="120"></GridColumn>

                                        </GridColumns>
                                    </SfGrid>
                                </CardContent>
                                <CardFooter>
                                </CardFooter>
                            </SfCard>
                        </Template>
                    </DxGridLayoutItem>
                </GridLayoutItems>
            </DevGridLayout>

        </BodyTemplate>
        <FooterContentTemplate>
        </FooterContentTemplate>
    </DxPopup>
}