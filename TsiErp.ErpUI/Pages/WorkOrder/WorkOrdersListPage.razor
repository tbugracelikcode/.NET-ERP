@page "/work-orders"
@layout MainLayout

@using Syncfusion.Blazor.Buttons
@using TsiErp.Business.Entities.WorkOrder.Services
@using TsiErp.Entities.Entities.WorkOrder
@using TsiErp.Entities.Entities.WorkOrder.Dtos
@using TsiErp.Entities.Entities.Route.Dtos
@using TsiErp.Business.Entities.Route.Services
@using TsiErp.Entities.Entities.ProductionOrder.Dtos
@using TsiErp.Business.Entities.ProductionOrder.Services
@using TsiErp.Entities.Entities.SalesProposition.Dtos
@using TsiErp.Business.Entities.SalesProposition.Services
@using TsiErp.Entities.Entities.ProductsOperation.Dtos
@using TsiErp.Business.Entities.ProductsOperation.Services
@using TsiErp.Entities.Entities.Station.Dtos
@using TsiErp.Business.Entities.Station.Services
@using TsiErp.Entities.Entities.StationGroup.Dtos
@using TsiErp.Business.Entities.StationGroup.Services
@using TsiErp.Entities.Entities.Product.Dtos
@using TsiErp.Business.Entities.Product.Services
@using TsiErp.Entities.Entities.CurrentAccountCard.Dtos
@using TsiErp.Business.Entities.CurrentAccountCard.Services
@using TsiErp.ErpUI.Pages.Base
@using TsiErp.Localizations.Resources.WorkOrders.Page
@inject IStringLocalizer<WorkOrdersResource> L 
@inherits BaseListPage<SelectWorkOrdersDto, ListWorkOrdersDto, CreateWorkOrdersDto, UpdateWorkOrdersDto, ListWorkOrdersParameterDto>


@inject IWorkOrdersAppService WorkOrdersAppService
@inject ICurrentAccountCardsAppService CurrentAccountCardsService
@inject IProductionOrdersAppService ProductionOrdersAppService
@inject ISalesPropositionsAppService SalesPropositionsAppService
@inject IRoutesAppService RoutesAppService
@inject IProductsOperationsAppService ProductsOperationsAppService
@inject IStationsAppService StationsAppService
@inject IStationGroupsAppService StationGroupsAppService
@inject IProductsAppService ProductsAppService

@if (!base.IsLoaded)
{
    <CircleLoading Caption="@base.LoadingCaption" Text="@base.LoadingText" />
}
else
{
    <DevGridLayout ColumnCount="1" RowCount="3" RowHeights="@RowHeights("*")">
        <GridLayoutItems>
            <DxGridLayoutItem Row="0" Column="0" ColumnSpan="1">
                <Template>
                    <SfCard class="TSIListPageTitleCard">
                        <CardContent>
                            <TsiBreadCrumb PreviousMenus="@L["UIPreviousMenu"]" CurrentMenu="@L["UICurrentMenu"]" />
                        </CardContent>
                        <CardFooter>
                        </CardFooter>
                    </SfCard>
                </Template>
            </DxGridLayoutItem>
            <DxGridLayoutItem Row="2" Column="0" ColumnSpan="1">
                <Template>
                    <SfCard class="TSIGridCards">
                        <CardContent>
                            <SfGrid ID="Grid" @ref="_grid" ColumnMenuItems=@MenuItems ShowColumnMenu="true" DataSource="@ListDataSource"   AllowPaging="false" AllowFiltering="true" AllowReordering="true" AllowResizing="true" AllowGrouping="true" AllowExcelExport="true" AllowPdfExport=true ShowColumnChooser="true" GridLines="GridLine.Both" AllowSelection="true" AllowSorting="true" Height="100%" Width="100%" class="GridZebra">
                                <GridGroupSettings ShowGroupedColumn="true"></GridGroupSettings>
                                 <GridEvents    ContextMenuItemClicked="@OnContextMenuClick" TValue="ListWorkOrdersDto"></GridEvents>
                                <GridEditSettings AllowAdding="false" AllowEditing="false" AllowDeleting="false" Mode="Syncfusion.Blazor.Grids.EditMode.Normal"></GridEditSettings>
                                <SfToolbar>
                                    <ToolbarItems>
                                        <ToolbarItem Type="ItemType.Button">
                                            <Template>

                                                <SfButton CssClass="TSIExcelButton" OnClick="@(()=>OnToolbarClicked("ExcelExport", @L["UIExportTitle"], @L["UIExportFileName"]))"><img class="TSIExcelIcon" src="/images/excelicon.png" /></SfButton>
                                            </Template>
                                        </ToolbarItem>

                                        <ToolbarItem Type="ItemType.Button">
                                            <Template>

                                                <SfButton CssClass="TSIExcelButton" OnClick="@(()=>OnToolbarClicked("PDFExport", @L["UIExportTitle"], @L["UIExportFileName"]))"><img class="TSIPdfIcon" src="/images/pdficon.png" /></SfButton>
                                            </Template>
                                        </ToolbarItem>

                                    </ToolbarItems>
                                </SfToolbar>
                                <GridFilterSettings Type="Syncfusion.Blazor.Grids.FilterType.Menu"></GridFilterSettings>
                                <GridPageSettings PageSizes="true"></GridPageSettings>
                                <GridSelectionSettings Type="Syncfusion.Blazor.Grids.SelectionType.Single"></GridSelectionSettings>
                                <GridColumns>
                                    <GridColumn Field=@nameof(ListWorkOrdersDto.Code) HeaderText="@L["Code"]" TextAlign="TextAlign.Center" Width="120"></GridColumn>
                                    <GridColumn Field=@nameof(ListWorkOrdersDto.WorkOrderNo) HeaderText="@L["WorkOrderNo"]" TextAlign="TextAlign.Center" Width="120"></GridColumn>
                                    <GridColumn Field=@nameof(ListWorkOrdersDto.WorkOrderState) HeaderText="@L["WorkOrderState"]" TextAlign="TextAlign.Center" Width="120"></GridColumn>
                                    <GridColumn Field=@nameof(ListWorkOrdersDto.AdjustmentAndControlTime) HeaderText="@L["AdjustmentAndControlTime"]" Type="ColumnType.Number" TextAlign="TextAlign.Center" Width="120"></GridColumn>
                                    <GridColumn Field=@nameof(ListWorkOrdersDto.OperationTime) HeaderText="@L["OperationTime"]" Type="ColumnType.Number" TextAlign="TextAlign.Center" Width="120"></GridColumn>
                                    <GridColumn Field=@nameof(ListWorkOrdersDto.OccuredStartDate) HeaderText="@L["OccuredStartDate"]" Type="ColumnType.DateTime" TextAlign="TextAlign.Center" Width="120"></GridColumn>
                                    <GridColumn Field=@nameof(ListWorkOrdersDto.OccuredFinishDate) HeaderText="@L["OccuredFinishDate"]" Type="ColumnType.DateTime" TextAlign="TextAlign.Center" Width="120"></GridColumn>
                                    <GridColumn Field=@nameof(ListWorkOrdersDto.PlannedQuantity) HeaderText="@L["PlannedQuantity"]" TextAlign="TextAlign.Center" Type="ColumnType.Number" Width="120"></GridColumn>
                                    <GridColumn Field=@nameof(ListWorkOrdersDto.ProducedQuantity) HeaderText="@L["ProducedQuantity"]" TextAlign="TextAlign.Center" Type="ColumnType.Number" Width="120"></GridColumn>
                                    <GridColumn Field=@nameof(ListWorkOrdersDto.ProductionOrderFicheNo) HeaderText="@L["ProductionOrderFicheNo"]" TextAlign="TextAlign.Center" Width="120"></GridColumn>
                                    <GridColumn Field=@nameof(ListWorkOrdersDto.PropositionFicheNo) HeaderText="@L["PropositionFicheNo"]" TextAlign="TextAlign.Center" Width="120"></GridColumn>
                                    <GridColumn Field=@nameof(ListWorkOrdersDto.RouteCode) HeaderText="@L["RouteCode"]" TextAlign="TextAlign.Center" Width="120"></GridColumn>
                                    <GridColumn Field=@nameof(ListWorkOrdersDto.ProductsOperationCode) HeaderText="@L["ProductsOperationCode"]" TextAlign="TextAlign.Center" Width="120"></GridColumn>
                                    <GridColumn Field=@nameof(ListWorkOrdersDto.StationCode) HeaderText="@L["StationCode"]" TextAlign="TextAlign.Center" Width="120"></GridColumn>
                                
                                    <GridColumn Field=@nameof(ListWorkOrdersDto.StationGroupCode) HeaderText="@L["StationGroupCode"]" TextAlign="TextAlign.Center" Width="120"></GridColumn>
                                    <GridColumn Field=@nameof(ListWorkOrdersDto.ProductCode) HeaderText="@L["ProductCode"]" TextAlign="TextAlign.Center" Width="120"></GridColumn>
                            
                                    <GridColumn Field=@nameof(ListWorkOrdersDto.CurrentAccountCardName) HeaderText="@L["CurrentAccountCardName"]" TextAlign="TextAlign.Center" Width="120"></GridColumn>
                                </GridColumns>
                            </SfGrid>
                        </CardContent>
                        <CardFooter>
                        </CardFooter>
                    </SfCard>
                </Template>
            </DxGridLayoutItem>
        </GridLayoutItems>
    </DevGridLayout>

}