﻿
@inject SpinnerService _spinnerService

<style>

    .loading-container {
        z-index: 5000;
        width: 100vw;
        height: 100vh;
    }

    .loading-overlay {
        position: fixed;
        top: 0;
        left: 0;
        background: rgba(0,0,0,0.8);
        z-index: 4000;
        width: 100%;
        height: 100%;
    }

    .icon-container {
        text-align: center;
        margin-top: 200px;
    }

    .text-container {
        color: white;
        text-align: center;
        font-size: 2em;
        font-weight: 100;
        margin-top: 200px;
    }

    .icon {
        max-width: 120px;
    }

</style>
@if (IsVisible)
{

    <div class="loading-overlay">
        <div class="loading-container">
            @if (Type == SpinnerType.Icon)
            {
                <div class="icon-container">
                    @if (!string.IsNullOrEmpty(Icon))
                    {
                        <object type="image/svg+xml" class="icon" data="@Icon">SVG not supported</object>
                    }
                    else if (string.IsNullOrEmpty(Icon))
                    {
                        <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" class="icon" style="margin: auto; background: transparent; display: block; shape-rendering: auto;" width="153px" height="153px" viewBox="0 0 100 100" preserveAspectRatio="xMidYMid">

                            <circle cx="50" cy="50" fill="none" stroke="white" stroke-width="10" r="36" stroke-dasharray="169.64600329384882 58.548667764616276">
                                <animateTransform attributeName="transform" type="rotate" repeatCount="indefinite" dur="3.2258064516129035s" values="0 50 50;360 50 50" keyTimes="0;1"></animateTransform>

                            </circle>

                        </svg>


                    }
                </div>
            }
            else if (Type == SpinnerType.Text)
            {
                <div class="text-container">@Text</div>
            }
        </div>
    </div>
}
@code
{

    [Parameter]
    public SpinnerType Type { get; set; } = SpinnerType.Icon;

    [Parameter]
    public string Icon { get; set; }

    [Parameter]
    public string Text { get; set; } = "Loading...";

    protected bool IsVisible { get; set; }
    protected override void OnInitialized()
    {
        _spinnerService.OnShow += ShowLoadingSpinner;
        _spinnerService.OnHide += HideLoadingSpinner;
    }

    async public void ShowLoadingSpinner()
    {
        IsVisible = true;
        if (IsVisible == true)
        {
            await InvokeAsync(StateHasChanged);
        }
    }

    async public void HideLoadingSpinner()
    {
        IsVisible = false;
        await Task.Delay(100);

        if (IsVisible == false)
        {
            await InvokeAsync(StateHasChanged);
        }
    }
}