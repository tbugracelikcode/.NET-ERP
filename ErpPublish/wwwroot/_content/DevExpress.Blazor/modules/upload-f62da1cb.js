import{_ as e}from"./_tslib-6e8ca86b.js";import{d as t}from"./dom-e3fa5208.js";import{C as s}from"./custom-events-helper-e7f279d3.js";import{D as i}from"./dx-html-element-base-3bcbe019.js";import{S as o}from"./single-slot-element-base-4efb3864.js";import{e as a}from"./property-d3853089.js";import"./browser-f8f6e902.js";import"./common-eb095e4d.js";import"./data-qa-utils-8be7c726.js";import"./dx-html-element-pointer-events-helper-1bf230d1.js";import"./eventhelper-8570b930.js";import"./constants-58283e53.js";import"./devices-9f03a976.js";import"./dx-ui-element-db9e89a3.js";import"./lit-element-base-7a85dca5.js";import"./lit-element-70cf14f4.js";import"./logicaltreehelper-99f1adf9.js";import"./layouthelper-1d804c8c.js";import"./point-e4ec110e.js";const r="dxbl-upload";class n{constructor(e){this.files=e}}class l{constructor(e){this.request=e}}class d{constructor(e){this.progress=e}}class u{constructor(e){this.requestOptions=e}}class c extends CustomEvent{constructor(e){super(c.eventName,{detail:new n(e),bubbles:!0,composed:!0})}}c.eventName=r+".filesadded",s.register(c.eventName,(e=>e.detail));class h extends CustomEvent{constructor(e){super(h.eventName,{detail:new l(e),bubbles:!0,composed:!0,cancelable:!0})}}h.eventName=r+".actionrequest",s.register(h.eventName,(e=>e.detail));class p extends CustomEvent{constructor(e){super(p.eventName,{detail:new d(e),bubbles:!0,composed:!0})}}p.eventName=r+".uploadprogress",s.register(p.eventName,(e=>e.detail));class m extends CustomEvent{constructor(e){super(m.eventName,{detail:new u(e),bubbles:!0,composed:!0})}}m.eventName=r+".customizeformdata",s.register(m.eventName,(e=>e.detail));class f extends CustomEvent{constructor(){super(f.eventName,{bubbles:!0,composed:!0})}}f.eventName=r+".maxfilecountexceeded",s.register(f.eventName,(e=>null));var g,F,S;!function(e){e.acceptedFileTypes="accepted-file-types",e.allowedFileExtensions="allowed-file-extensions",e.externalSelectButtonCssSelector="external-select-button-css-selector",e.chunkSize="chunk-size",e.maxFileSize="max-file-size",e.minFileSize="min-file-size",e.maxFileCount="max-file-count",e.multiple="multiple",e.uploadMode="upload-mode",e.dragOverClassName="drag-over-class-name",e.dropZoneCssSelector="drop-zone-css-selector",e.applyFileStates="apply-file-states",e.customizeFormData="customize-form-data",e.triggerShowFileSelectorDialog="trigger-show-file-selector-dialog"}(g||(g={})),function(e){e[e.Instant=0]="Instant",e[e.OnButtonClick=1]="OnButtonClick"}(F||(F={})),function(e){e[e.WaitingStart=0]="WaitingStart",e[e.PendingUpload=1]="PendingUpload",e[e.Uploading=2]="Uploading",e[e.Paused=3]="Paused",e[e.Complete=4]="Complete",e[e.Canceled=5]="Canceled",e[e.Error=6]="Error",e[e.Removing=7]="Removing"}(S||(S={}));class v{constructor(e,t,s=null){this.file=e,this.action=t,this.newReloadedFile=s}}class b{constructor(){this.guids=[],this.actions=[],this.reloadedFileGuids=[]}}class C{constructor(e){this.FileName=e.fileInfo.name,this.FileSize=e.fileInfo.size,this.FileType=e.fileInfo.type,this.LastModified=e.fileInfo.lastModified,this.FileGuid=e.fileInfo.guid,this.Index=e.chunkIndex,this.TotalCount=e.totalChunkCount}}class y{constructor(e,t,s){this._value=e,this._status=s.uploadMode===F.Instant?S.PendingUpload:S.WaitingStart,this._chunkIndex=0,this._loadedBytes=0,this._totalChunkCount=0,this._isFileExtensionValid=y.validateFileExtension(e,s),this._isMinSizeValid=y.validateMinFileSize(e,s),this._isMaxSizeValid=y.validateMaxFileSize(e,s),this._fileInfo={name:e.name,size:e.size,type:e.type,lastModified:1e4*e.lastModified+621355968e9,guid:t},this._request=null,this._onLoadStart=null,this._onProgress=null,this._onAbort=null,this._onPause=null,this._onError=null,this._onLoadEnd=null,this.isValid()||(this._status=S.Error)}get value(){return this._value}get status(){return this._status}set status(e){this._status=e}get chunkIndex(){return this._chunkIndex}set chunkIndex(e){this._chunkIndex=e}get loadedBytes(){return this._loadedBytes}set loadedBytes(e){this._loadedBytes=e}get totalChunkCount(){return this._totalChunkCount}set totalChunkCount(e){this._totalChunkCount=e}get isFileExtensionValid(){return this._isFileExtensionValid}get isMinSizeValid(){return this._isMinSizeValid}get isMaxSizeValid(){return this._isMaxSizeValid}get fileInfo(){return this._fileInfo}get request(){return this._request}set request(e){this._request=e}get onLoadStart(){return this._onLoadStart}set onLoadStart(e){this._onLoadStart=e}get onProgress(){return this._onProgress}set onProgress(e){this._onProgress=e}get onAbort(){return this._onAbort}set onAbort(e){this._onAbort=e}get onError(){return this._onError}set onError(e){this._onError=e}get onLoadEnd(){return this._onLoadEnd}set onLoadEnd(e){this._onLoadEnd=e}isValid(){return this.isFileExtensionValid&&this.isMaxSizeValid&&this.isMinSizeValid}isUploadComplete(){return this.loadedBytes>=this.fileInfo.size}loadStart(){this.status!==S.Uploading&&(this.status=S.Uploading,this.onLoadStart&&this.onLoadStart.call(this))}progress(){this.onProgress&&this.onProgress.call(this)}loadEnd(){this.isUploadComplete()&&(this.status=S.Complete,this.onLoadEnd&&this.onLoadEnd.call(this))}abort(e=!0){this.status!==S.Canceled&&(this.status=S.Canceled,this.request&&this.request.abort(),e&&this.onAbort&&this.onAbort.call(this))}error(e){this.status=S.Error,this.onError&&this.onError.call(this,e)}static validateFileExtension(e,t){const s=t.allowedFileExtensions,i=e.name.substring(e.name.lastIndexOf(".")).toLowerCase();if(0===s.length)return!0;for(let e=0;e<s.length;e++)if(i===s[e].toLowerCase())return!0;return!1}static validateMinFileSize(e,t){const s=t.minFileSize;return!(s>0)||e.size>=s}static validateMaxFileSize(e,t){const s=t.maxFileSize;return!(s>0)||e.size<=s}}class E{constructor(e){this.control=e,this.requestMetadata=null}customizeFormData(e){this.control.dispatchEvent(new m(e))}}class I extends E{constructor(e){super(e)}upload(e,t,s,i){if(!e)return;e.totalChunkCount||(e.chunkIndex=0,e.totalChunkCount=I.calculateTotalChunkCount(e.fileInfo.size,t));const o=t.chunkSize*e.chunkIndex,a=e.value.slice(o,o+t.chunkSize);this.requestMetadata={formData:new FormData,request:t,file:e,loadEnd:i},this.createFormData(t.name,a,e,s)}createFormData(e,t,s,i){var o,a;const r=new C(s);null===(o=this.requestMetadata)||void 0===o||o.formData.append(e,t),null===(a=this.requestMetadata)||void 0===a||a.formData.append("chunkMetadata",JSON.stringify(r)),this.control.customizeFormData||i||(i={}),i?this.onCustomizeChunkMetadataResponse(i):this.customizeFormData(r)}onCustomizeChunkMetadataResponse(e){if(null==this.requestMetadata)return;const{formData:t,request:s,file:i,loadEnd:o}=this.requestMetadata;if(i.status!==S.Paused&&i.status!==S.Canceled){for(const s in e)if(Object.prototype.hasOwnProperty.call(e,s)){const i=e[s];t.append(s,i instanceof Object?JSON.stringify(i):i)}for(const e in s.requestData)Object.prototype.hasOwnProperty.call(s.requestData,e)&&t.append(e,s.requestData[e]);i.request=D.sendRequest(t,{crossDomain:!1,url:s.uploadUrl,method:"POST",headers:s.requestHeaders,onAbort:()=>{i.abort()},onProgress:()=>{},onError:e=>{e.target&&i.error(e.target)},onLoadStart:()=>{i.loadStart()},onLoad:e=>{if(e.target)if(200===e.target.status){const e=t.get(s.name);i.chunkIndex++,i.loadedBytes+=e.size,i.progress(),o(i)}else i.error(e.target)},onLoadEnd:null})}}static calculateTotalChunkCount(e,t){let s=Math.trunc(e/t.chunkSize);return e%t.chunkSize>0&&s++,s}}class x extends E{constructor(e){super(e)}upload(e,t,s,i){e&&(this.requestMetadata={formData:new FormData,request:t,file:e,loadEnd:i},this.createFormData(t.name,e,s))}createFormData(e,t,s){var i;null===(i=this.requestMetadata)||void 0===i||i.formData.append(e,t.value),this.onCustomizeChunkMetadataResponse(s||{})}onCustomizeChunkMetadataResponse(e){if(null==this.requestMetadata)return;const{formData:t,request:s,file:i,loadEnd:o}=this.requestMetadata;for(const e in s.requestData)Object.prototype.hasOwnProperty.call(s.requestData,e)&&t.append(e,s.requestData[e]);let a=!1;i.request=D.sendRequest(t,{url:s.uploadUrl,method:"POST",headers:s.requestHeaders,crossDomain:!1,onProgress:e=>{a=!0,i.loadedBytes=e.loaded>i.fileInfo.size?i.fileInfo.size:e.loaded,i.progress()},onAbort:e=>{i.abort()},onError:e=>{e.target&&i.error(e.target)},onLoadStart:e=>{i.loadStart()},onLoad:e=>{e.target&&(200===e.target.status?(a||(i.loadedBytes=i.fileInfo.size,i.progress()),o(i,e)):i.error(e.target))},onLoadEnd:null})}}class D{static sendRequest(e,t){const s=new XMLHttpRequest;t.crossDomain=D.isCrossDomain(t.url);const i=D.getRequestHeaders(t);s.open(t.method,t.url,!0),t.onLoadStart&&(s.upload.onloadstart=t.onLoadStart),t.onLoad&&(s.onload=t.onLoad),t.onLoadEnd&&(s.upload.onloadend=t.onLoadEnd),t.onProgress&&(s.upload.onprogress=t.onProgress),t.onError&&(s.upload.onerror=t.onError),t.onAbort&&(s.upload.onabort=t.onAbort);for(const e in i)Object.prototype.hasOwnProperty.call(i,e)&&i[e]&&s.setRequestHeader(e,i[e]);return s.send(e),s}static getRequestHeaders(e){const t=e.headers||{};return t.Accept=t.Accept||D.getAcceptHeader(),e.crossDomain||t["X-Requested-With"]||(t["X-Requested-With"]="XMLHttpRequest"),t}static getAcceptHeader(){return"*/*"}static isCrossDomain(e){let t=!1;const s=document.createElement("a"),i=document.createElement("a");s.href=window.location.href;try{i.href=e,i.href=i.href,t=s.protocol+"//"+s.host!=i.protocol+"//"+i.host}catch(e){t=!0}return t}}class z{constructor(e){this.control=e,this.state=new w,this.indexMap=new Map,this.dispatchTimerId=-1,this.idleTimerId=-1}dispatch(e,t,s=null){const i=this.getFileIndex(t),o=new M(i,e,t.loadedBytes,t.status);this.state.progressInfos.push(o),s&&this.state.errors.push(s),this.tryPerformDispatch()}forceDelayedDispatch(){-1!==this.dispatchTimerId&&clearTimeout(this.dispatchTimerId),this.performDispatch()}tryPerformDispatch(){if(-1===this.dispatchTimerId){let e=50;-1!==this.idleTimerId&&(clearTimeout(this.idleTimerId),this.idleTimerId=-1,e=200),this.dispatchTimerId=setTimeout((()=>this.performDispatch()),e)}}performDispatch(){this.dispatchTimerId=-1,this.control.dispatchEvent(new p(this.state)),this.state=new w,this.indexMap.clear(),this.idleTimerId=setTimeout((()=>{this.idleTimerId=-1}),1e3)}getFileIndex(e){let t=this.indexMap.get(e.fileInfo.guid);return void 0!==t||(t=this.state.fileGuids.length,this.state.fileGuids.push(e.fileInfo.guid),this.indexMap.set(e.fileInfo.guid,t)),t}}class w{constructor(){this.fileGuids=[],this.progressInfos=[],this.errors=[]}}class M{constructor(e,t,s,i){this.index=e,this.type=t,this.loaded=s,this.status=i}}var k;!function(e){e[e.Started=0]="Started",e[e.Progress=1]="Progress",e[e.Uploaded=2]="Uploaded",e[e.Aborted=3]="Aborted",e[e.Error=4]="Error"}(k||(k={}));const _=100;class q extends o{constructor(){super(),this.onInputChangeHandler=this.onFileInputChange.bind(this),this.onSelectButtonClickHandler=this.onSelectButtonClick.bind(this),this.onFilesDropHandler=this.onFilesDrop.bind(this),this.onFilesDragOverHandler=this.onFilesDragOver.bind(this),this.onFilesDragLeaveHandler=this.onFilesDragLeave.bind(this),this.acceptedFileTypes=null,this.allowedFileExtensions=[],this.externalSelectButtonCssSelector="",this.chunkSize=0,this.maxFileSize=0,this.minFileSize=0,this.maxFileCount=1e3,this.multiple=!1,this.uploadMode=F.Instant,this.dragOverClassName="",this.dropZoneCssSelector="",this.customizeFormData=!1,this.applyFileStates={},this.triggerShowFileSelectorDialog="",this.files=new Map,this.uploaders=new Map,this.progressDispatcher=new z(this)}firstUpdated(e){super.firstUpdated(e),this.initEvents(),this.prepareInputElement()}getFileInput(){return this.querySelector("input")}getSelectButton(){return this.externalSelectButtonCssSelector?document.querySelector(this.externalSelectButtonCssSelector):this.querySelector(".dxuc-select-button")}getDropZoneContainer(){return this.dropZoneCssSelector?document.querySelector(this.dropZoneCssSelector):null}initEvents(){var e;this.getFileInput().addEventListener("change",this.onInputChangeHandler),null===(e=this.getSelectButton())||void 0===e||e.addEventListener("click",this.onSelectButtonClickHandler);const t=this.getDropZoneContainer();t&&(t.addEventListener("drop",this.onFilesDropHandler),t.addEventListener("dragover",this.onFilesDragOverHandler),t.addEventListener("dragleave",this.onFilesDragLeaveHandler))}prepareInputElement(){const e=this.getFileInput();this.multiple?e.setAttribute("multiple",""):e.removeAttribute("multiple"),this.acceptedFileTypes&&e.setAttribute("accept",this.acceptedFileTypes.join(","))}onFileInputChange(e){this.addFiles(this.createFileItems(this.getFileInput().files)),this.getFileInput().value=""}onSelectButtonClick(e){this.getFileInput().click()}onFilesDrop(e){e.preventDefault(),this.addFiles(this.createFileItems(this.getFileFromDataTransfer(e.dataTransfer))),this.onFilesDragLeave(e)}onFilesDragOver(e){this.dragOverClassName&&e.srcElement&&t.DomUtils.addClassName(e.srcElement,this.dragOverClassName),e.preventDefault()}onFilesDragLeave(e){this.dragOverClassName&&t.DomUtils.removeClassName(e.srcElement,this.dragOverClassName)}raiseFilesLimitExceeded(){this.dispatchEvent(new f)}createFileItems(e){if(!e)return[];const t=[],s=this.getAllowedFileTypes();for(let i=0,o=e[i];o;i++,o=e[i]){const a=new y(o,this.getUUID4(),this);a.isValid()&&s&&!this.isFileTypeAllowed(e[i],s)||t.push(a)}return t}isFileTypeAllowed(e,t){return t.some((function(t){if("."===t[0]){if(t=t.replace(".","\\."),e.name.match(new RegExp(t+"$","i")))return!0}else if(t=t.replace("*",""),e.type.match(new RegExp(t,"i")))return!0}))}addFiles(e){0!==e.length&&(this.maxFileCount>0&&this.files.size+e.length>this.maxFileCount?this.raiseFilesLimitExceeded():(e.forEach((e=>this.files.set(e.fileInfo.guid,e))),this.raiseFilesAddedByParts(e)))}raiseFilesAddedByParts(e){if(e.length<=_)this.filesAdded(e);else{let t=0,s=_;do{const i=e.slice(t,s);this.filesAdded(i),t+=_,s=Math.min(t+_,e.length)}while(t<e.length)}}getFileFromDataTransfer(e){const t=[];if(e)if(e.items){for(let s=0,i=e.items[s];i;s++,i=e.items[s])if("file"===i.kind){const e=i.getAsFile();e&&t.push(e)}}else for(let s=0,i=e.files[s];i;s++,i=e.files[s])t.push(i);return this.multiple?t:[t[0]]}getFileInfosCollection(e){return e.map((e=>this.createFileViewInfo(e)))}createFileViewInfo(e){return{name:e.fileInfo.name,size:e.fileInfo.size,type:e.fileInfo.type,lastModified:e.fileInfo.lastModified,guid:e.fileInfo.guid,loadedBytes:e.loadedBytes,status:e.status,isFileExtensionValid:e.isFileExtensionValid,isMinSizeValid:e.isMinSizeValid,isMaxSizeValid:e.isMaxSizeValid}}getAllowedFileTypes(){return this.acceptedFileTypes&&this.acceptedFileTypes.length>0?this.acceptedFileTypes.map((e=>e.trim())):null}getUUID4(){const e=new Uint8Array(16);crypto.getRandomValues(e),e[8]&=63,e[8]|=128,e[6]&=15,e[6]|=64;let t=0;return"XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX".replace(/XX/g,(()=>e[t++].toString(16).padStart(2,"0")))}onUploadStartCallback(e,t){const{guid:s,requestJSOptions:i}=e,o=this.files.get(s);o&&(this.attachEventsToFileItem(o),i?i.uploadUrl?this.startUpload(o,i,t.customData||{}):o.error(new EventTarget):o.abort())}startUpload(e,t,s){e.status=S.PendingUpload;const i=this.chunkSize>0?new I(this):new x(this);this.uploaders.set(e.fileInfo.guid,i),i.upload(e,t,s,(e=>{e.loadEnd(),e.isUploadComplete()||e.status!==S.Uploading||this.startUpload(e,t,null)}))}reloadFile(e){const t=this.createFileItems([e.value])[0];return t.status=S.PendingUpload,this.files=q.replaceFileInFilesMap(this.files,e.fileInfo.guid,t),t}static replaceFileInFilesMap(e,t,s){const i=new Map;for(const o of e.values()){const e=o.fileInfo.guid===t?s:o;i.set(e.fileInfo.guid,e)}return i}attachEventsToFileItem(e){e.onLoadStart=()=>{this.fileUploadStarted(e)},e.onProgress=()=>{this.fileProgress(e)},e.onAbort=()=>{this.fileUploadAborted(e)},e.onError=t=>{this.fileUploadError(e,t.status,t.statusText,t.responseText)},e.onLoadEnd=()=>{this.fileUploaded(e)}}filesAdded(e){this.dispatchEvent(new c(this.getFileInfosCollection(e)))}fileUploadStarted(e){this.progressDispatcher.dispatch(k.Started,e)}fileUploaded(e){this.progressDispatcher.dispatch(k.Uploaded,e)}fileUploadAborted(e){this.progressDispatcher.dispatch(k.Aborted,e)}fileProgress(e){this.progressDispatcher.dispatch(k.Progress,e)}fileUploadError(e,t,s,i){this.progressDispatcher.dispatch(k.Error,e,{status:t,statusText:s,responseText:i})}requestAction(e){this.dispatchEvent(new h(e))}tryProcessFileStates(){if(!this.applyFileStates)return;const e=[];if(this.updateFileStates(this.applyFileStates,e)){const t=this.createActionRequest(e);this.progressDispatcher.forceDelayedDispatch(),this.requestAction(t)}}updateFileStates(e,t){let s=!1;for(const i in e){if(!Object.prototype.hasOwnProperty.call(e,i))continue;const o=this.files.get(i);if(o&&o.status!==e[i]){const a=this.changeStatus(o,e[i]);t.push(a),s=!0}}return s}createActionRequest(e){const t=new b,s=new Map;return e.forEach((e=>{const i=e.file.fileInfo.guid;let o=s.get(i);void 0===o&&(o=t.guids.length,t.guids.push(i),s.set(i,o)),t.actions.push(e.action,o),e.action===S.PendingUpload&&e.newReloadedFile&&t.reloadedFileGuids.push(e.newReloadedFile.fileInfo.guid)})),t}changeStatus(e,t){switch(t){case S.PendingUpload:{const t=this.reloadFile(e);return new v(e,S.PendingUpload,t)}case S.Paused:e.status=S.Paused;break;case S.Canceled:e.abort(!1);break;case S.Removing:this.files.delete(e.fileInfo.guid);break;default:throw new Error("Status not supported.")}return new v(e,t)}onCustomizeFormDataCallback(e){var t;const s=e.fileGuid;null===(t=this.uploaders.get(s))||void 0===t||t.onCustomizeChunkMetadataResponse(e.customData),this.uploaders.delete(s)}updated(e){var t;(e.has("acceptedFileTypes")||e.has("multiple"))&&this.prepareInputElement(),e.has("applyFileStates")&&this.tryProcessFileStates(),e.has("triggerShowFileSelectorDialog")&&q.tryParseJson(this.triggerShowFileSelectorDialog)&&(null===(t=this.getFileInput())||void 0===t||t.click())}static tryParseJson(e){let t=!1;try{if(e){const s=JSON.parse(e);s&&"object"==typeof s&&(t=s)}}catch{}return t}}e([a({attribute:g.acceptedFileTypes,type:Array})],q.prototype,"acceptedFileTypes",void 0),e([a({attribute:g.allowedFileExtensions,type:Array})],q.prototype,"allowedFileExtensions",void 0),e([a({attribute:g.externalSelectButtonCssSelector})],q.prototype,"externalSelectButtonCssSelector",void 0),e([a({attribute:g.chunkSize,type:Number})],q.prototype,"chunkSize",void 0),e([a({attribute:g.maxFileSize,type:Number})],q.prototype,"maxFileSize",void 0),e([a({attribute:g.minFileSize,type:Number})],q.prototype,"minFileSize",void 0),e([a({attribute:g.maxFileCount,type:Number})],q.prototype,"maxFileCount",void 0),e([a({attribute:g.multiple,type:Boolean})],q.prototype,"multiple",void 0),e([a({attribute:g.uploadMode,type:Number})],q.prototype,"uploadMode",void 0),e([a({attribute:g.dragOverClassName})],q.prototype,"dragOverClassName",void 0),e([a({attribute:g.dropZoneCssSelector})],q.prototype,"dropZoneCssSelector",void 0),e([a({attribute:g.customizeFormData,type:Boolean})],q.prototype,"customizeFormData",void 0),e([a({attribute:g.applyFileStates,type:Object,converter:e=>q.tryParseJson(e)||null})],q.prototype,"applyFileStates",void 0),e([a({attribute:g.triggerShowFileSelectorDialog})],q.prototype,"triggerShowFileSelectorDialog",void 0),customElements.define("dxbl-upload",q),customElements.define("dxbl-uploaded-file",class extends i{constructor(){super(),this._control=null,this._lastUploadStartOptions=null}initializeComponent(){super.initializeComponent(),this._control=t.DomUtils.getParentByTagName(this,"DXBL-UPLOAD"),this.startUpload(this.uploadStartOptions,this.customDataOptions)}get uploadStartOptions(){const e=this.getAttribute("upload-start-options")||"";return JSON.parse(e)}get customDataOptions(){const e=this.getAttribute("custom-form-data-options")||"";return JSON.parse(e)}startUpload(e,t){this._control&&e&&t&&this._control.onUploadStartCallback(e,t)}static get observedAttributes(){return["upload-start-options","custom-form-data-options"]}attributeChangedCallback(e,t,s){var i;if(this._control)switch(e){case"upload-start-options":this._lastUploadStartOptions=this.uploadStartOptions;break;case"custom-form-data-options":{const e=JSON.parse(s);if(e)if(this._lastUploadStartOptions){const t=this._lastUploadStartOptions;this._lastUploadStartOptions=null,this.startUpload(t,e)}else null===(i=this._control)||void 0===i||i.onCustomizeFormDataCallback(e);break}}}});const U={loadModule:function(){}};export{q as DxUpload,U as default};
