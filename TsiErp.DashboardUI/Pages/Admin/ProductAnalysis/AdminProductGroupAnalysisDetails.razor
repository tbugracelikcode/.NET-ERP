@page "/admin/product-group-analysis/details/{productgroupID:int}/{startDate:datetime}/{endDate:datetime}"
@layout AdminLayout

@inject StokDetayService StokDetayService
@inject NavigationManager NavigationManager


<SfCard class="FilterCard">
    <CardContent>
        <table width="1000px">
            <tr>
                <td width="200px">
                </td>
                <td width="200px">
                    <label class="FilterLabelTitle"><strong>Ürün Grubu Adı:</strong></label><label class="FilterLabelTitleValue">&nbsp;@productgroupName</label>
                </td>
                <td width="200px">
                    <label class="FilterLabelTitle"><strong>Başlangıç Tarih:</strong></label><label class="FilterLabelTitleValue">&nbsp;@startDate.ToString("dd/MM/yyyy")</label>
                </td>
                <td width="200px">
                    <label class="FilterLabelTitle"><strong>Bitiş Tarih:</strong></label><label class="FilterLabelTitleValue">&nbsp;@endDate.ToString("dd/MM/yyyy")</label>
                </td>
                <td width="200px">
                    <SfButton IsPrimary="true" CssClass="e-btn e-secondary" style="background-color:#AD0000; font-size:18px; font-weight:bold" OnClick="@OnBackButtonClicked">Geri</SfButton> <SfSpinner @bind-Visible="VisibleSpinner"> </SfSpinner>
                </td>
            </tr>
        </table>
    </CardContent>
    <CardFooter>
    </CardFooter>
</SfCard>
<br />


<br />

<SfCard class="Cards">
    <CardHeader>
    </CardHeader>
    <CardContent>
        <SfTab CssClass="default-tab" OverflowMode="@OverflowMode.Scrollable" HeaderPlacement="HeaderPosition.Top" Width="100%">
            <TabAnimationSettings>
                <TabAnimationPrevious Effect="Syncfusion.Blazor.AnimationEffect.FadeIn"></TabAnimationPrevious>
                <TabAnimationNext Effect="Syncfusion.Blazor.AnimationEffect.FadeOut"></TabAnimationNext>
            </TabAnimationSettings>
            <TabItems>
                <TabItem>
                    <ChildContent>
                        <TabHeader Text="Hurda Analizi"></TabHeader>
                    </ChildContent>
                    <ContentTemplate>
                        <SfCard class="Cards" style="text-align:center">
                            <CardContent>
                                <SfChart Width="90%" Theme="Theme.Bootstrap5" Title="Hurda PPM Analiz Grafiği">
                                    <ChartTitleStyle Size="22px" Color="black" FontWeight="bold"></ChartTitleStyle>
                                    <ChartPrimaryXAxis ValueType="Syncfusion.Blazor.Charts.ValueType.Category" LabelIntersectAction="LabelIntersectAction.Rotate45">
                                        <ChartAxisLabelStyle Size="14px" Color="black" FontWeight="bold" />
                                    </ChartPrimaryXAxis>
                                    <ChartPrimaryYAxis LabelFormat="#">
                                        <ChartAxisLabelStyle Size="14px" Color="black" FontWeight="bold" />
                                    </ChartPrimaryYAxis>
                                    <ChartTooltipSettings Enable="true"></ChartTooltipSettings>
                                    <ChartSeriesCollection>
                                        <ChartSeries DataSource="@dataproductgroupchart" ColumnWidth="@columnwidth" Name="PPM" XName="ScrapCauseName" YName="PPM" Width="1" Fill="darkred" Type="Syncfusion.Blazor.Charts.ChartSeriesType.Column">

                                        </ChartSeries>
                                    </ChartSeriesCollection>
                                    <ChartTooltipSettings Enable="true"></ChartTooltipSettings>
                                    <ChartZoomSettings EnableSelectionZooming="true"></ChartZoomSettings>
                                </SfChart>

                            </CardContent>
                            <CardFooter>
                            </CardFooter>
                        </SfCard>
                        <SfCard class="Cards">

                            <CardContent>
                                <SfGrid ID="Grid" DataSource="@dataproductscrap" @ref="ProductGroupGrid" AllowPaging="true" AllowFiltering="true" AllowReordering="true" AllowResizing="true" AllowGrouping="true" AllowExcelExport="true" AllowSelection="true"
                                        AllowSorting="true" Height="100%" Width="100%" class="GridZebra">
                                    <GridEditSettings AllowAdding="false" AllowEditing="false" AllowDeleting="false" Mode="EditMode.Normal"></GridEditSettings>
                                    <GridFilterSettings Type="Syncfusion.Blazor.Grids.FilterType.FilterBar"></GridFilterSettings>
                                    <GridEvents TValue="ProductScrapAnalysis"></GridEvents>
                                    <GridPageSettings PageSizes="true"></GridPageSettings>
                                    <GridSelectionSettings Type="Syncfusion.Blazor.Grids.SelectionType.Multiple"></GridSelectionSettings>
                                    <GridColumns>
                                        <GridColumn Field=@nameof(ProductScrapAnalysis.ScrapCauseName) HeaderText="HURDA SEBEBİ" TextAlign="TextAlign.Center" Width="120"></GridColumn>
                                        <GridColumn Field=@nameof(ProductScrapAnalysis.TotalScrap) HeaderText="HURDA ADETİ" TextAlign="TextAlign.Center" Width="120"></GridColumn>
                                        <GridColumn Field=@nameof(ProductScrapAnalysis.TotalProduction) HeaderText="ÜRETİLEN ADET" TextAlign="TextAlign.Center" Width="120"></GridColumn>
                                        <GridColumn Field=@nameof(ProductScrapAnalysis.PPM) Format="#" HeaderText="PPM" TextAlign="TextAlign.Center" Width="120"></GridColumn>
                                    </GridColumns>
                                </SfGrid>
                            </CardContent>
                            <CardFooter>
                            </CardFooter>
                        </SfCard>
                    </ContentTemplate>
                </TabItem>

            </TabItems>
        </SfTab>
    </CardContent>
    <CardFooter>
    </CardFooter>
</SfCard>

@code {
    List<ProductScrapAnalysis> dataproductscrap = new List<ProductScrapAnalysis>();

    List<ProductGroupDetailedChart> dataproductgroupchart = new List<ProductGroupDetailedChart>();

    SfGrid<ProductScrapAnalysis> ProductGroupGrid;

    SfChart ChartInstance;

    bool VisibleSpinner = false;
    private bool isProductGroupsChecked = false;
    int productgroups = 1;
    double columnwidth;
    string productgroupName = string.Empty;

    [Parameter]
    public DateTime startDate { get; set; }

    [Parameter]
    public DateTime endDate { get; set; }

    [Parameter]
    public int productgroupID { get; set; }


    protected override void OnInitialized()
    {
        dataproductscrap = StokDetayService.GetProductScrapAnalysis(productgroupID, startDate, endDate);
        dataproductgroupchart = StokDetayService.GetProductGroupDetailedtChart(productgroupID, startDate, endDate, 1);
        productgroupName = dataproductscrap.Select(t => t.ProductGroupName).FirstOrDefault();
        if(dataproductgroupchart.Count()<3)
        {
            columnwidth = 0.1;
        }
    }

    private void OnChangeProductCheck(Microsoft.AspNetCore.Components.ChangeEventArgs args)
    {
        if (isProductGroupsChecked) { productgroups = 2; }
        else { productgroups = 1; }
        dataproductgroupchart = StokDetayService.GetProductGroupDetailedtChart(productgroupID, startDate, endDate, productgroups);
        ChartInstance.RefreshAsync();
    }

    private void OnBackButtonClicked()
    {
        this.VisibleSpinner = true;

        NavigationManager.NavigateTo("/admin/product-group-analysis");
    }

}
