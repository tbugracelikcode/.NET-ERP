@page "/admin/machine-analysis"
@layout AdminLayout

@inject IstasyonOEEService IstasyonOEEService
@using Syncfusion.Blazor.Charts
@using Syncfusion.Blazor.Calendars
@using Syncfusion.Blazor.Buttons
@using Syncfusion.Blazor.Grids
@using Syncfusion.Blazor.Cards
@using Syncfusion.Blazor.DropDowns
@using Syncfusion.Blazor.Data
@using Syncfusion.Blazor.Inputs

<style>
    .GridZebra table tbody tr:nth-child(odd) {
        background-color: #B5B5B5;
    }

    .GridZebra table tbody tr:nth-child(n) {
        text-align: center;
    }

    table {
        font-family: arial, sans-serif;
        border-collapse: collapse;
        width: 100%;
    }

    td, th {
        border: 0px solid #dddddd;
        text-align: center;
        padding: 8px;
    }

    .ulstyle {
        margin: 0px;
        padding-left: 20px;
        display: inline-block;
    }

    .list {
        float: left;
        line-height: 20px;
        margin: 10px;
        min-width: 280px;
    }
</style>

<SfCard>
    <CardContent>

        @*  <table width="1000px">
        <tr>
        <td width="200px">
        </td>
        <td width="200px">
        <label><strong>Zaman Periyodu:</strong></label>
        <SfComboBox TValue="int" TItem="ComboboxTimePeriods" @bind-Index="@selectedTimeIndex" PopupHeight="230px" Placeholder="Seçiniz." DataSource="@timeperiods">
        <ComboBoxFieldSettings Text="TimeText" Value="TimeID"></ComboBoxFieldSettings>
        </SfComboBox>
        </td>
        <td width="200px">
        <label><strong>Verim Değeri:</strong></label>
        <SfNumericTextBox TValue="int" @bind-Value="threshold" Placeholder="Verim Değeri Yazınız."></SfNumericTextBox>
        </td>
        <td width="100px">
        </td>
        <td width="50px" align="right">
        <label> </label>
        <SfButton IsPrimary="true" CssClass="e-btn e-secondary" OnClick="@OnDateButtonClicked">Filtrele</SfButton>
        </td>
        <td width="50px">
        </td>
        </tr>
        </table>*@
        <table width="1000px">
            <tr>
                <td width="200px">
                </td>
                <td width="400px">
                    <label><strong>Zaman Periyodu:</strong></label>
                    <SfComboBox TValue="int" TItem="ComboboxTimePeriods" @bind-Index="@selectedTimeIndex" PopupHeight="230px" Placeholder="Seçiniz." DataSource="@timeperiods">
                        <ComboBoxFieldSettings Text="TimeText" Value="TimeID"></ComboBoxFieldSettings>
                    </SfComboBox>
                </td>
                <td width="100px">
                </td>
                <td width="50px" align="right">
                    <label> </label>
                    <SfButton IsPrimary="true" CssClass="e-btn e-secondary" OnClick="@OnDateButtonClicked">Filtrele</SfButton>
                </td>
                <td width="50px">
                </td>
            </tr>
        </table>
    </CardContent>
    <CardFooter>
    </CardFooter>
</SfCard>
<br />
<SfCard style="text-align:center">
    <CardContent>
        <SfChart @ref="ChartInstance" Theme="Theme.Bootstrap5" Title="Makina Verimlilik Grafiği">
            <ChartPrimaryXAxis ValueType="Syncfusion.Blazor.Charts.ValueType.Category">
            </ChartPrimaryXAxis>
            <ChartPrimaryYAxis LabelFormat="p2">
               @* <ChartStriplines>
                    <ChartStripline Start="@thresholddouble" Size="0.05" Color="darkblue">
                    </ChartStripline>
                </ChartStriplines>*@
            </ChartPrimaryYAxis>
            <ChartTooltipSettings Enable="true"></ChartTooltipSettings>
            <ChartSeriesCollection>
                <ChartSeries DataSource="@datachart" Name="Verimlilik" XName="AY" YName="KULLANILABILIRLIK" Width="3" Fill="darkred" Type="ChartSeriesType.Line">
                    <ChartMarker Visible="true" Width="7" Height="7" IsFilled="true" Shape="ChartShape.Circle">
                    </ChartMarker>
                    <ChartTrendlines>
                        <ChartTrendline Type="TrendlineTypes.Linear" Width="3" Name="Trend" Fill="#3345A7">
                        </ChartTrendline>
                    </ChartTrendlines>
                </ChartSeries>
            </ChartSeriesCollection>
            <ChartTooltipSettings Enable="true"></ChartTooltipSettings>
            <ChartZoomSettings EnableSelectionZooming="true"></ChartZoomSettings>
        </SfChart>

    </CardContent>
    <CardFooter>
    </CardFooter>
</SfCard>
<br />
<SfCard>
    <CardContent>
        <SfGrid ID="Grid" DataSource="@dataoee" @ref="Grid" AllowPaging="true" AllowFiltering="true" AllowReordering="true" AllowResizing="true" AllowGrouping="true" AllowExcelExport="true" AllowSelection="true"
                AllowSorting="true" Height="100%" Width="100%" class="GridZebra">
            <GridEditSettings AllowAdding="false" AllowEditing="false" AllowDeleting="false" Mode="EditMode.Normal"></GridEditSettings>
            <GridFilterSettings Type="Syncfusion.Blazor.Grids.FilterType.FilterBar"></GridFilterSettings>
            <GridEvents QueryCellInfo="CellInfoHandler" TValue="StationOEEAnalysis"></GridEvents>
            <GridPageSettings PageSizes="true"></GridPageSettings>
            <GridSelectionSettings Type="Syncfusion.Blazor.Grids.SelectionType.Multiple"></GridSelectionSettings>
            <GridColumns>
                <GridColumn Field=@nameof(StationOEEAnalysis.Code) HeaderText="Makina Kodu" TextAlign="TextAlign.Center" Width="120"></GridColumn>
                <GridColumn Field=@nameof(StationOEEAnalysis.OccuredOperationTime) Format="#######" HeaderText="Üretim Süresi" TextAlign="TextAlign.Center" Width="120"></GridColumn>
                <GridColumn Field=@nameof(StationOEEAnalysis.HaltTime) HeaderText="Duruş Süresi" TextAlign="TextAlign.Center" Width="130"></GridColumn>
                <GridColumn Field=@nameof(StationOEEAnalysis.Availability) HeaderText="Verimlilik" Format="#%" TextAlign="TextAlign.Center" Width="130"></GridColumn>
            </GridColumns>
        </SfGrid>
    </CardContent>
    <CardFooter>
    </CardFooter>
</SfCard>




@code {
    List<StationOEEAnalysis> dataoee = new List<StationOEEAnalysis>();
    List<AdminMachineChart> datachart = new List<AdminMachineChart>();
    SfGrid<StationOEEAnalysis> Grid;
    DateTime startDate = DateTime.Today.AddDays(-90);
    DateTime endDate = DateTime.Today;
    private int? selectedTimeIndex { get; set; }
    private int threshold;
    private double thresholddouble;
    private int frequencyChart;

    SfChart ChartInstance;

    protected override void OnInitialized()
    {
        dataoee = IstasyonOEEService.GetStationOEEAnalysis(startDate, endDate);
        datachart = IstasyonOEEService.GetAdminMachineChart(startDate, endDate, 2);
    }





    void OnDateButtonClicked()
    {
        endDate = DateTime.Today;
        #region Zaman Seçimi
        if (selectedTimeIndex == 0)
        {
            startDate = DateTime.Today.AddDays(-365);
            frequencyChart = 0;
        }
        else if (selectedTimeIndex == 1)
        {
            startDate = DateTime.Today.AddDays(-181);
            frequencyChart = 1;
        }
        else if (selectedTimeIndex == 2)
        {
            startDate = DateTime.Today.AddDays(-90);
            frequencyChart = 2;
        }
        else if (selectedTimeIndex == 3)
        {
            startDate = DateTime.Today.AddDays(-60);
            frequencyChart = 3;
        }
        else if (selectedTimeIndex == 4)
        {
            startDate = DateTime.Today.AddDays(-30);
            frequencyChart = 4;
        }
        else if (selectedTimeIndex == 5)
        {
            startDate = DateTime.Today.AddDays(-7);
            frequencyChart = 5;
        }
        #endregion

        thresholddouble = Convert.ToDouble(threshold) / 100;

        ChartInstance.Refresh();
        dataoee = IstasyonOEEService.GetStationOEEAnalysis(startDate, endDate);
        datachart = IstasyonOEEService.GetAdminMachineChart(startDate, endDate, frequencyChart);
        StateHasChanged();
        //threshold = 0;
        selectedTimeIndex = -1;
    }


    public void CellInfoHandler(QueryCellInfoEventArgs<StationOEEAnalysis> Args)
    {
        if (Args.Column.Field == "Availability")
        {
            if (Args.Data.Availability < 0.4m)
            {
                Args.Cell.AddStyle(new string[] { "background-color: #DF0000; color: white; " });
            }
            else
            {
                Args.Cell.AddStyle(new string[] { "background-color: #35C930; color: white;" });
            }
        }
    }

    private List<ComboboxTimePeriods> timeperiods = new List<ComboboxTimePeriods>() {
        new ComboboxTimePeriods(){ TimeID= 1, TimeText= "Yıllık" },
        new ComboboxTimePeriods(){ TimeID= 2, TimeText= "Son 6 Ay" },
        new ComboboxTimePeriods(){ TimeID= 3, TimeText= "Son 3 Ay" },
        new ComboboxTimePeriods(){ TimeID= 4, TimeText= "Son 2 Ay" },
        new ComboboxTimePeriods(){ TimeID= 5, TimeText= "Son 1 Ay" },
        new ComboboxTimePeriods(){ TimeID= 6, TimeText= "Son 1 Hafta" }
     };

}
