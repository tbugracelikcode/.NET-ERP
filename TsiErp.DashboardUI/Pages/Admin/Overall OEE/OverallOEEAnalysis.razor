@page "/admin/overall-oee"
@layout AdminLayout

@inject GenelOEEService GenelOEEService
@inject NavigationManager NavigationManager


<SfCard class="FilterCard">
    <CardContent>
        <table width="1000px">
            <tr>
                <td width="200px">
                    <br />
                    <SfCheckBox @bind-Checked="isGridChecked" @onchange="OnCheckedChanged" CssClass="e-customcheck"></SfCheckBox>
                    <label class=FilterLabelTitle><strong>Detay Tablosunu Gizle</strong></label>
                </td>
                <td width="200px">
                    <br />
                    <SfCheckBox @bind-Checked="isLabelsChecked" @onchange="OnChangeLabelCheck" CssClass="e-customcheck"></SfCheckBox>
                    <label class=FilterLabelTitle><strong>Etiketleri Göster</strong></label>
                </td>
                <td width="200px">
                    <label class="FilterLabelTitle"><strong>Zaman Periyodu:</strong></label>
                    <SfComboBox TValue="int?" TItem="ComboboxTimePeriods" @bind-Index="@selectedTimeIndex" PopupHeight="230px" Placeholder="Son 3 Ay" DataSource="@timeperiods">
                        <ComboBoxFieldSettings Text="TimeText" Value="TimeID"></ComboBoxFieldSettings>
                    </SfComboBox>
                </td>
                <td width="200px">
                    <label class="FilterLabelTitle"><strong>Verim Değeri:</strong></label>
                    <SfNumericTextBox TValue="int" @bind-Value="threshold" Placeholder="Verim Değeri Yazınız."></SfNumericTextBox>
                </td>
                <td width="100px">
                </td>
                <td width="50px" align="right">
                    <br />
                    <SfButton IsPrimary="true" CssClass="e-btn e-secondary" style="background-color:#AD0000; font-size:18px; font-weight:bold" OnClick="@OnDateButtonClicked">Filtrele</SfButton>
                    @*<SfProgressButton OnClick="@OnDateButtonClicked" Content="Filtrele" IsPrimary="true">
                    <ProgressButtonSpinSettings Position="SpinPosition.Right"></ProgressButtonSpinSettings>
                    </SfProgressButton>*@
                    <SfSpinner @bind-Visible="VisibleSpinner">
                    </SfSpinner>
                </td>
                <td width="50px">
                </td>
            </tr>
        </table>
    </CardContent>
    <CardFooter>
    </CardFooter>
</SfCard>
<br />
<SfCard class="Cards" style="text-align:center">
    <CardContent>
        <SfChart @ref="ChartInstance" Theme="Theme.Bootstrap5" Title="Genel Fabrika OEE Grafiği">
            <ChartTitleStyle Size="22px" Color="black" FontWeight="bold"></ChartTitleStyle>
            <ChartPrimaryXAxis ValueType="Syncfusion.Blazor.Charts.ValueType.Category" LabelIntersectAction="LabelIntersectAction.Rotate45">
                <ChartAxisLabelStyle Size="18px" Color="black" FontWeight="bold" />
            </ChartPrimaryXAxis>
            <ChartPrimaryYAxis LabelFormat="p2">
                <ChartAxisLabelStyle Size="18px" Color="black" FontWeight="bold" />
            </ChartPrimaryYAxis>
            <ChartTooltipSettings Enable="true"></ChartTooltipSettings>
            <ChartSeriesCollection>
                <ChartSeries DataSource="@datachart" Name="OEE" XName="AY" YName="OEE" Width="3" Fill="darkred" Type="Syncfusion.Blazor.Charts.ChartSeriesType.Line">
                    <ChartMarker Visible="true" Width="7" Height="7" IsFilled="true" Shape="ChartShape.Circle">
                        <ChartDataLabel Visible="@dataLabels">
                            <ChartDataLabelFont FontWeight="bold" Size="14px" Color="darkred"></ChartDataLabelFont>
                        </ChartDataLabel>
                    </ChartMarker>
                    <ChartTrendlines>
                        <ChartTrendline Type="TrendlineTypes.Linear" Width="3" Name="Trend" Fill="#3345A7">
                            <ChartTrendlineMarker Visible="true" Width="7" Height="7" IsFilled="true" Shape="ChartShape.Diamond">
                            </ChartTrendlineMarker>
                        </ChartTrendline>
                    </ChartTrendlines>
                </ChartSeries>
            </ChartSeriesCollection>
            <ChartTooltipSettings Enable="true"></ChartTooltipSettings>
        </SfChart>

    </CardContent>
    <CardFooter>
    </CardFooter>
</SfCard>
<br />
<SfCard class="Cards" hidden="@isGridChecked">
    <CardContent>
        <SfGrid ID="Grid" DataSource="@dataoee" @ref="Grid" AllowPaging="false" AllowFiltering="true" AllowReordering="true" AllowResizing="true" AllowGrouping="true" AllowExcelExport="true" AllowSelection="true"
                AllowSorting="true" Height="100%" Width="100%" class="GridZebra">
            <GridEditSettings AllowAdding="false" AllowEditing="false" AllowDeleting="false" Mode="EditMode.Normal"></GridEditSettings>
            <GridFilterSettings Type="Syncfusion.Blazor.Grids.FilterType.FilterBar"></GridFilterSettings>
            <GridEvents QueryCellInfo="CellInfoHandler" TValue="StationOEEAnalysis"></GridEvents>
            <GridPageSettings PageSizes="true"></GridPageSettings>
            <GridSelectionSettings Type="Syncfusion.Blazor.Grids.SelectionType.Multiple"></GridSelectionSettings>
            <GridColumns>
                <GridColumn Field=@nameof(StationOEEAnalysis.Code) HeaderText="MAKİNA KODU" TextAlign="TextAlign.Center" Width="120"></GridColumn>
                <GridColumn Field=@nameof(StationOEEAnalysis.Department) HeaderText="DEPARTMAN" TextAlign="TextAlign.Center" Width="120"></GridColumn>
                <GridColumn Field=@nameof(StationOEEAnalysis.Availability) Format="#%" HeaderText="KULLANILABİLİRLİK" TextAlign="TextAlign.Center" Width="120"></GridColumn>
                <GridColumn Field=@nameof(StationOEEAnalysis.Performance) Format="#%" HeaderText="PERFORMANS" TextAlign="TextAlign.Center" Width="130"></GridColumn>
                <GridColumn Field=@nameof(StationOEEAnalysis.Quality) HeaderText="KALİTE" Format="#%" TextAlign="TextAlign.Center" Width="130"></GridColumn>
                <GridColumn Field=@nameof(StationOEEAnalysis.OEE) HeaderText="OEE" Format="p2" TextAlign="TextAlign.Center" Width="130"></GridColumn>
                <GridColumn Field=@nameof(StationOEEAnalysis.Code) HeaderText="DETAYLAR" TextAlign="TextAlign.Center" Width="80">
                    <Template>
                        @{
                            var row = (context as StationOEEAnalysis);
                            <SfButton IconCss="oi oi-spreadsheet" IsPrimary="true" style="background-color:#AD0000;" CssClass="e-btn e-secondary" OnClick="@(()=>OnDetailButtonClicked(row.StationID))"></SfButton>
                        }

                    </Template>
                </GridColumn>
            </GridColumns>
        </SfGrid>

    </CardContent>
    <CardFooter>
    </CardFooter>
</SfCard>




@code {
    List<StationOEEAnalysis> dataoee = new List<StationOEEAnalysis>();
    List<AdminMachineChart> datachart = new List<AdminMachineChart>();
    SfGrid<StationOEEAnalysis> Grid;
    DateTime startDate = DateTime.Today.AddDays(-90);
    DateTime endDate = DateTime.Today;
    private int? selectedTimeIndex { get; set; } = 3;
    private int? selectedProductIndex { get; set; }
    private int threshold=75 ;
    private double thresholddouble = 0.75;
    private int frequencyChart;
    SfChart ChartInstance;
    bool VisibleSpinner = false;
    private bool isLabelsChecked = true;
    private bool isGridChecked = true;
    private bool dataLabels = true;

    protected override void OnInitialized()
    {
        dataoee = GenelOEEService.GetStationOEEAnalysis(startDate, endDate);
        datachart = GenelOEEService.GetAdminMachineChart(startDate, endDate);
    }

    #region Component Metotları



    private void OnDateButtonClicked()
    {
        this.VisibleSpinner = true;
        endDate = DateTime.Today;
        #region Zaman Seçimi
        if (selectedTimeIndex == 0)
        {
            startDate = DateTime.Today.AddDays(-330);
        }
        else if (selectedTimeIndex == 1)
        {
            startDate = DateTime.Today.AddDays(-273);
        }
        else if (selectedTimeIndex == 2)
        {
            startDate = DateTime.Today.AddDays(-181);
        }
        else if (selectedTimeIndex == 3)
        {
            startDate = DateTime.Today.AddDays(-90);
        }
        #endregion

        thresholddouble = Convert.ToDouble(threshold) / 100;
        Grid.Refresh();
        ChartInstance.RefreshAsync();
        dataoee = GenelOEEService.GetStationOEEAnalysis(startDate, endDate);
        datachart = GenelOEEService.GetAdminMachineChart(startDate, endDate);
        this.VisibleSpinner = false;
        StateHasChanged();
    }

    private void OnDetailButtonClicked(int stationID)
    {
        NavigationManager.NavigateTo("/admin/machine-analysis/details" + "/" + stationID.ToString() + "/" + startDate.ToString("yyyy, MM, dd") + "/" + endDate.ToString("yyyy, MM, dd")); ;
    }

    private void OnChangeLabelCheck(Microsoft.AspNetCore.Components.ChangeEventArgs args)
    {
        ChartInstance.RefreshAsync();
        if (isLabelsChecked) { dataLabels = true; }
        else { dataLabels = false; }
    }

    private void OnCheckedChanged(Microsoft.AspNetCore.Components.ChangeEventArgs args)
    {
        bool argsValue = Convert.ToBoolean(args.Value);
        isGridChecked = argsValue;

        StateHasChanged();
    }

    #endregion


    public void CellInfoHandler(QueryCellInfoEventArgs<StationOEEAnalysis> Args)
    {
        if (Args.Column.Field == "OEE")
        {
            if (Args.Data.OEE < Convert.ToDecimal(thresholddouble))
            {
                Args.Cell.AddStyle(new string[] { "background-color: #DF0000; color: white; " });
            }
            else
            {
                Args.Cell.AddStyle(new string[] { "background-color: #37CB00; color: white;" });
            }
        }
        StateHasChanged();
    }

    private List<ComboboxTimePeriods> timeperiods = new List<ComboboxTimePeriods>() {
        new ComboboxTimePeriods(){ TimeID= 1, TimeText= "Yıllık" },
        new ComboboxTimePeriods(){ TimeID= 2, TimeText= "Son 9 Ay" },
        new ComboboxTimePeriods(){ TimeID= 3, TimeText= "Son 6 Ay" },
        new ComboboxTimePeriods(){ TimeID= 4, TimeText= "Son 3 Ay" }
     };

}
