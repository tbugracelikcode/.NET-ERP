// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TsiErp.DataAccess.EntityFrameworkCore;

#nullable disable

namespace TsiErp.DataAccess.Migrations
{
    [DbContext(typeof(TsiErpDbContext))]
    [Migration("20230222161906_logTableUpdated5")]
    partial class logTableUpdated5
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("TsiErp.Entities.Entities.BillsofMaterial.BillsofMaterials", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(17)
                        .HasColumnType("NVarChar(17)");

                    b.Property<DateTime?>("CreationTime")
                        .IsRequired()
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<bool?>("DataOpenStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("DataOpenStatus");

                    b.Property<Guid?>("DataOpenStatusUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("00000000-0000-0000-0000-000000000000"))
                        .HasColumnName("DataOpenStatusUserId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<Guid>("FinishedProductID")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<bool>("IsActive")
                        .HasColumnType("Bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("NVarChar(200)");

                    b.Property<Guid>("RouteID")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<string>("_Description")
                        .HasMaxLength(200)
                        .HasColumnType("NVarChar(200)");

                    b.HasKey("Id");

                    b.HasIndex("Code");

                    b.HasIndex("FinishedProductID");

                    b.ToTable("BillsofMaterials", (string)null);
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.BillsofMaterialLine.BillsofMaterialLines", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<Guid>("BoMID")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<DateTime?>("CreationTime")
                        .IsRequired()
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<bool?>("DataOpenStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("DataOpenStatus");

                    b.Property<Guid?>("DataOpenStatusUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("00000000-0000-0000-0000-000000000000"))
                        .HasColumnName("DataOpenStatusUserId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<Guid>("FinishedProductID")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<int>("LineNr")
                        .HasColumnType("Int");

                    b.Property<int>("MaterialType")
                        .HasColumnType("Int");

                    b.Property<Guid>("ProductID")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("Decimal");

                    b.Property<decimal>("Size")
                        .HasColumnType("Decimal");

                    b.Property<Guid>("UnitSetID")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<string>("_Description")
                        .HasMaxLength(200)
                        .HasColumnType("NVarChar(200)");

                    b.HasKey("Id");

                    b.HasIndex("BoMID");

                    b.HasIndex("ProductID");

                    b.HasIndex("UnitSetID");

                    b.ToTable("BillsofMaterialLines", (string)null);
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.Branch.Branches", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(17)
                        .HasColumnType("NVarChar(17)");

                    b.Property<DateTime?>("CreationTime")
                        .IsRequired()
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<bool?>("DataOpenStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("DataOpenStatus");

                    b.Property<Guid?>("DataOpenStatusUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("00000000-0000-0000-0000-000000000000"))
                        .HasColumnName("DataOpenStatusUserId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("Description_")
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("Bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("NVarChar(200)");

                    b.HasKey("Id");

                    b.HasIndex("Code");

                    b.ToTable("Branches", (string)null);
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.ByDateStockMovement.ByDateStockMovements", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<decimal>("Amount")
                        .HasPrecision(18, 6)
                        .HasColumnType("decimal(18,6)");

                    b.Property<Guid>("BranchID")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<DateTime?>("CreationTime")
                        .IsRequired()
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<bool?>("DataOpenStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("DataOpenStatus");

                    b.Property<Guid?>("DataOpenStatusUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("00000000-0000-0000-0000-000000000000"))
                        .HasColumnName("DataOpenStatusUserId");

                    b.Property<DateTime?>("Date_")
                        .IsRequired()
                        .HasColumnType("DateTime");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<Guid>("ProductID")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<decimal>("TotalConsumption")
                        .HasPrecision(18, 6)
                        .HasColumnType("Decimal(18,6)");

                    b.Property<decimal>("TotalGoodsIssue")
                        .HasPrecision(18, 6)
                        .HasColumnType("Decimal(18,6)");

                    b.Property<decimal>("TotalGoodsReceipt")
                        .HasPrecision(18, 6)
                        .HasColumnType("Decimal(18,6)");

                    b.Property<decimal>("TotalProduction")
                        .HasPrecision(18, 6)
                        .HasColumnType("Decimal(18,6)");

                    b.Property<decimal>("TotalPurchaseOrder")
                        .HasPrecision(18, 6)
                        .HasColumnType("Decimal(18,6)");

                    b.Property<decimal>("TotalPurchaseRequest")
                        .HasPrecision(18, 6)
                        .HasColumnType("Decimal(18,6)");

                    b.Property<decimal>("TotalSalesOrder")
                        .HasPrecision(18, 6)
                        .HasColumnType("Decimal(18,6)");

                    b.Property<decimal>("TotalSalesProposition")
                        .HasPrecision(18, 6)
                        .HasColumnType("Decimal(18,6)");

                    b.Property<decimal>("TotalWastage")
                        .HasPrecision(18, 6)
                        .HasColumnType("Decimal(18,6)");

                    b.Property<Guid>("WarehouseID")
                        .HasColumnType("UniqueIdentifier");

                    b.HasKey("Id");

                    b.HasIndex("BranchID");

                    b.HasIndex("ProductID");

                    b.HasIndex("WarehouseID");

                    b.ToTable("ByDateStockMovements", (string)null);
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.Calendar.Calendars", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<decimal>("AvailableDays")
                        .HasColumnType("Decimal");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(17)
                        .HasColumnType("NVarChar(17)");

                    b.Property<DateTime?>("CreationTime")
                        .IsRequired()
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<bool?>("DataOpenStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("DataOpenStatus");

                    b.Property<Guid?>("DataOpenStatusUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("00000000-0000-0000-0000-000000000000"))
                        .HasColumnName("DataOpenStatusUserId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPlanned")
                        .HasColumnType("Bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("NVarChar(200)");

                    b.Property<decimal>("OfficialHolidayDays")
                        .HasColumnType("Decimal");

                    b.Property<decimal>("TotalDays")
                        .HasColumnType("Decimal");

                    b.Property<int>("Year")
                        .HasColumnType("Int");

                    b.Property<string>("_Description")
                        .HasMaxLength(200)
                        .HasColumnType("NVarChar(200)");

                    b.HasKey("Id");

                    b.HasIndex("Code");

                    b.ToTable("Calendars", (string)null);
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.CalendarDay.CalendarDays", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<int>("CalendarDayStateEnum")
                        .HasColumnType("Int");

                    b.Property<Guid>("CalendarID")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<string>("ColorCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVarChar(50)");

                    b.Property<DateTime?>("CreationTime")
                        .IsRequired()
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<bool?>("DataOpenStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("DataOpenStatus");

                    b.Property<Guid?>("DataOpenStatusUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("00000000-0000-0000-0000-000000000000"))
                        .HasColumnName("DataOpenStatusUserId");

                    b.Property<DateTime>("Date_")
                        .HasColumnType("Date");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.HasKey("Id");

                    b.HasIndex("CalendarID");

                    b.ToTable("CalendarDays", (string)null);
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.CalendarLine.CalendarLines", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<decimal>("AvailableTime")
                        .HasColumnType("Decimal");

                    b.Property<Guid>("CalendarID")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<DateTime?>("CreationTime")
                        .IsRequired()
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<bool?>("DataOpenStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("DataOpenStatus");

                    b.Property<Guid?>("DataOpenStatusUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("00000000-0000-0000-0000-000000000000"))
                        .HasColumnName("DataOpenStatusUserId");

                    b.Property<DateTime>("Date_")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<decimal>("PlannedHaltTimes")
                        .HasColumnType("Decimal");

                    b.Property<Guid>("ShiftID")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<decimal>("ShiftOverTime")
                        .HasColumnType("Decimal");

                    b.Property<decimal>("ShiftTime")
                        .HasColumnType("Decimal");

                    b.Property<Guid>("StationID")
                        .HasColumnType("UniqueIdentifier");

                    b.HasKey("Id");

                    b.HasIndex("CalendarID");

                    b.HasIndex("ShiftID");

                    b.HasIndex("StationID");

                    b.ToTable("CalendarLines", (string)null);
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.CalibrationRecord.CalibrationRecords", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(17)
                        .HasColumnType("NVarChar(17)");

                    b.Property<DateTime?>("CreationTime")
                        .IsRequired()
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<bool?>("DataOpenStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("DataOpenStatus");

                    b.Property<Guid?>("DataOpenStatusUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("00000000-0000-0000-0000-000000000000"))
                        .HasColumnName("DataOpenStatusUserId");

                    b.Property<DateTime>("Date")
                        .HasColumnType("DateTime");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<Guid>("EquipmentID")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<string>("InfinitiveCertificateNo")
                        .HasMaxLength(50)
                        .HasColumnType("NVarChar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("NVarChar(200)");

                    b.Property<DateTime>("NextControl")
                        .HasColumnType("DateTime");

                    b.Property<string>("ReceiptNo")
                        .HasMaxLength(50)
                        .HasColumnType("NVarChar(50)");

                    b.Property<string>("Result")
                        .HasColumnType("nvarchar(MAX)");

                    b.HasKey("Id");

                    b.HasIndex("Code");

                    b.HasIndex("EquipmentID");

                    b.ToTable("CalibrationRecords", (string)null);
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.CalibrationVerification.CalibrationVerifications", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(17)
                        .HasColumnType("NVarChar(17)");

                    b.Property<DateTime?>("CreationTime")
                        .IsRequired()
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<bool?>("DataOpenStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("DataOpenStatus");

                    b.Property<Guid?>("DataOpenStatusUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("00000000-0000-0000-0000-000000000000"))
                        .HasColumnName("DataOpenStatusUserId");

                    b.Property<DateTime>("Date")
                        .HasColumnType("DateTime");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<Guid>("EquipmentID")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<string>("InfinitiveCertificateNo")
                        .HasMaxLength(50)
                        .HasColumnType("NVarChar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("NVarChar(200)");

                    b.Property<DateTime>("NextControl")
                        .HasColumnType("DateTime");

                    b.Property<string>("ReceiptNo")
                        .HasMaxLength(50)
                        .HasColumnType("NVarChar(50)");

                    b.Property<string>("Result")
                        .HasColumnType("nvarchar(MAX)");

                    b.HasKey("Id");

                    b.HasIndex("Code");

                    b.HasIndex("EquipmentID");

                    b.ToTable("CalibrationVerifications", (string)null);
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.ContractProductionTracking.ContractProductionTrackings", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<DateTime?>("CreationTime")
                        .IsRequired()
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid>("CurrentAccountID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("DataOpenStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("DataOpenStatus");

                    b.Property<Guid?>("DataOpenStatusUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("00000000-0000-0000-0000-000000000000"))
                        .HasColumnName("DataOpenStatusUserId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<Guid>("EmployeeID")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<string>("EmployeeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsFinished")
                        .HasColumnType("Bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<DateTime>("OperationEndDate")
                        .HasColumnType("DateTime");

                    b.Property<TimeSpan?>("OperationEndTime")
                        .HasColumnType("time(7)");

                    b.Property<DateTime>("OperationStartDate")
                        .HasColumnType("DateTime");

                    b.Property<TimeSpan?>("OperationStartTime")
                        .HasColumnType("time(7)");

                    b.Property<decimal>("OperationTime")
                        .HasPrecision(18, 6)
                        .HasColumnType("Decimal(18,6)");

                    b.Property<decimal>("PlannedQuantity")
                        .HasPrecision(18, 6)
                        .HasColumnType("Decimal(18,6)");

                    b.Property<decimal>("ProducedQuantity")
                        .HasPrecision(18, 6)
                        .HasColumnType("Decimal(18,6)");

                    b.Property<Guid?>("ProductID")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<string>("ShiftCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ShiftID")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<string>("StationCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("StationID")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<Guid>("WorkOrderID")
                        .HasColumnType("UniqueIdentifier");

                    b.HasKey("Id");

                    b.HasIndex("CurrentAccountID");

                    b.HasIndex("EmployeeID");

                    b.HasIndex("ProductID");

                    b.HasIndex("ShiftID");

                    b.HasIndex("StationID");

                    b.HasIndex("WorkOrderID");

                    b.ToTable("ContractProductionTrackings", (string)null);
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.ContractUnsuitabilityItem.ContractUnsuitabilityItems", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(17)
                        .HasColumnType("NVarChar(17)");

                    b.Property<DateTime?>("CreationTime")
                        .IsRequired()
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<bool?>("DataOpenStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("DataOpenStatus");

                    b.Property<Guid?>("DataOpenStatusUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("00000000-0000-0000-0000-000000000000"))
                        .HasColumnName("DataOpenStatusUserId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<int>("Detection")
                        .HasColumnType("Int");

                    b.Property<byte[]>("Image")
                        .HasColumnType("varbinary(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("Bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("NVarChar(200)");

                    b.Property<bool>("PerProductivityAnalysis")
                        .HasColumnType("Bit");

                    b.Property<int>("Severity")
                        .HasColumnType("Int");

                    b.Property<bool>("StaProductivityAnalysis")
                        .HasColumnType("Bit");

                    b.HasKey("Id");

                    b.HasIndex("Code");

                    b.ToTable("ContractUnsuitabilityItems", (string)null);
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.Currency.Currencies", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(17)
                        .HasColumnType("NVarChar(17)");

                    b.Property<DateTime?>("CreationTime")
                        .IsRequired()
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<bool?>("DataOpenStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("DataOpenStatus");

                    b.Property<Guid?>("DataOpenStatusUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("00000000-0000-0000-0000-000000000000"))
                        .HasColumnName("DataOpenStatusUserId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<bool>("IsActive")
                        .HasColumnType("Bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("NVarChar(200)");

                    b.HasKey("Id");

                    b.HasIndex("Code");

                    b.ToTable("Currencies", (string)null);
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.CurrentAccountCard.CurrentAccountCards", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<string>("Address1")
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("Address2")
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("City")
                        .HasMaxLength(50)
                        .HasColumnType("NVarChar(50)");

                    b.Property<bool>("CoatingCustomer")
                        .HasColumnType("Bit");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(17)
                        .HasColumnType("NVarChar(17)");

                    b.Property<bool>("ContractSupplier")
                        .HasColumnType("Bit");

                    b.Property<string>("Country")
                        .HasMaxLength(50)
                        .HasColumnType("NVarChar(50)");

                    b.Property<DateTime?>("CreationTime")
                        .IsRequired()
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid>("CurrencyID")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<bool?>("DataOpenStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("DataOpenStatus");

                    b.Property<Guid?>("DataOpenStatusUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("00000000-0000-0000-0000-000000000000"))
                        .HasColumnName("DataOpenStatusUserId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("District")
                        .HasMaxLength(50)
                        .HasColumnType("NVarChar(50)");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("NVarChar(50)");

                    b.Property<string>("Fax")
                        .HasMaxLength(50)
                        .HasColumnType("NVarChar(50)");

                    b.Property<string>("IDnumber")
                        .HasMaxLength(11)
                        .HasColumnType("NVarChar(11)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("Bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("NVarChar(200)");

                    b.Property<int>("PlusPercentage")
                        .HasColumnType("Int");

                    b.Property<string>("PostCode")
                        .HasMaxLength(50)
                        .HasColumnType("NVarChar(50)");

                    b.Property<string>("PrivateCode1")
                        .HasMaxLength(50)
                        .HasColumnType("NVarChar(50)");

                    b.Property<string>("PrivateCode2")
                        .HasMaxLength(50)
                        .HasColumnType("NVarChar(50)");

                    b.Property<string>("PrivateCode3")
                        .HasMaxLength(50)
                        .HasColumnType("NVarChar(50)");

                    b.Property<string>("PrivateCode4")
                        .HasMaxLength(50)
                        .HasColumnType("NVarChar(50)");

                    b.Property<string>("PrivateCode5")
                        .HasMaxLength(50)
                        .HasColumnType("NVarChar(50)");

                    b.Property<string>("Responsible")
                        .HasMaxLength(50)
                        .HasColumnType("NVarChar(50)");

                    b.Property<string>("SaleContract")
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("ShippingAddress")
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<bool>("SoleProprietorship")
                        .HasColumnType("Bit");

                    b.Property<bool>("Supplier")
                        .HasColumnType("Bit");

                    b.Property<string>("SupplierNo")
                        .HasMaxLength(50)
                        .HasColumnType("NVarChar(50)");

                    b.Property<string>("TaxAdministration")
                        .IsRequired()
                        .HasMaxLength(75)
                        .HasColumnType("NVarChar(75)");

                    b.Property<string>("TaxNumber")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("NVarChar(10)");

                    b.Property<string>("Tel1")
                        .HasMaxLength(50)
                        .HasColumnType("NVarChar(50)");

                    b.Property<string>("Tel2")
                        .HasMaxLength(50)
                        .HasColumnType("NVarChar(50)");

                    b.Property<int>("Type")
                        .HasColumnType("Int");

                    b.Property<string>("Web")
                        .HasMaxLength(50)
                        .HasColumnType("NVarChar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Code");

                    b.HasIndex("CurrencyID");

                    b.ToTable("CurrentAccountCards", (string)null);
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.CustomerComplaintItem.CustomerComplaintItems", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(17)
                        .HasColumnType("NVarChar(17)");

                    b.Property<DateTime?>("CreationTime")
                        .IsRequired()
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<bool?>("DataOpenStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("DataOpenStatus");

                    b.Property<Guid?>("DataOpenStatusUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("00000000-0000-0000-0000-000000000000"))
                        .HasColumnName("DataOpenStatusUserId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<int>("Detection")
                        .HasColumnType("Int");

                    b.Property<byte[]>("Image")
                        .HasColumnType("varbinary(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("Bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("NVarChar(200)");

                    b.Property<bool>("PerProductivityAnalysis")
                        .HasColumnType("Bit");

                    b.Property<int>("Severity")
                        .HasColumnType("Int");

                    b.Property<bool>("StaProductivityAnalysis")
                        .HasColumnType("Bit");

                    b.HasKey("Id");

                    b.HasIndex("Code");

                    b.ToTable("CustomerComplaintItems", (string)null);
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.Department.Departments", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(17)
                        .HasColumnType("NVarChar(17)");

                    b.Property<DateTime?>("CreationTime")
                        .IsRequired()
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<bool?>("DataOpenStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("DataOpenStatus");

                    b.Property<Guid?>("DataOpenStatusUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("00000000-0000-0000-0000-000000000000"))
                        .HasColumnName("DataOpenStatusUserId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<bool>("IsActive")
                        .HasColumnType("Bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("NVarChar(200)");

                    b.HasKey("Id");

                    b.HasIndex("Code");

                    b.ToTable("Departments", (string)null);
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.Employee.Employees", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<string>("Address")
                        .HasMaxLength(200)
                        .HasColumnType("NVarChar(200)");

                    b.Property<DateTime?>("Birthday")
                        .HasColumnType("DateTime");

                    b.Property<int>("BloodType")
                        .HasColumnType("Int");

                    b.Property<string>("CellPhone")
                        .HasMaxLength(100)
                        .HasColumnType("NVarChar(100)");

                    b.Property<string>("City")
                        .HasMaxLength(100)
                        .HasColumnType("NVarChar(100)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(17)
                        .HasColumnType("NVarChar(17)");

                    b.Property<DateTime?>("CreationTime")
                        .IsRequired()
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<bool?>("DataOpenStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("DataOpenStatus");

                    b.Property<Guid?>("DataOpenStatusUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("00000000-0000-0000-0000-000000000000"))
                        .HasColumnName("DataOpenStatusUserId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<Guid>("DepartmentID")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<string>("District")
                        .HasMaxLength(100)
                        .HasColumnType("NVarChar(100)");

                    b.Property<string>("Email")
                        .HasMaxLength(200)
                        .HasColumnType("NVarChar(200)");

                    b.Property<string>("HomePhone")
                        .HasMaxLength(100)
                        .HasColumnType("NVarChar(100)");

                    b.Property<string>("IDnumber")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("NVarChar(11)");

                    b.Property<byte[]>("Image")
                        .HasColumnType("varbinary(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("Bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("NVarChar(200)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVarChar(100)");

                    b.HasKey("Id");

                    b.HasIndex("Code");

                    b.HasIndex("DepartmentID");

                    b.ToTable("Employees", (string)null);
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.EquipmentRecord.EquipmentRecords", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<bool>("Cancel")
                        .HasColumnType("Bit");

                    b.Property<DateTime?>("CancellationDate")
                        .HasColumnType("DateTime");

                    b.Property<string>("CancellationReason")
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(17)
                        .HasColumnType("NVarChar(17)");

                    b.Property<DateTime?>("CreationTime")
                        .IsRequired()
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<bool?>("DataOpenStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("DataOpenStatus");

                    b.Property<Guid?>("DataOpenStatusUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("00000000-0000-0000-0000-000000000000"))
                        .HasColumnName("DataOpenStatusUserId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<Guid>("Department")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<string>("EquipmentSerialNo")
                        .HasMaxLength(250)
                        .HasColumnType("NVarChar(250)");

                    b.Property<string>("Frequency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("Bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("MeasuringAccuracy")
                        .HasMaxLength(50)
                        .HasColumnType("NVarChar(50)");

                    b.Property<string>("MeasuringRange")
                        .HasMaxLength(150)
                        .HasColumnType("NVarChar(150)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("NVarChar(200)");

                    b.Property<DateTime>("RecordDate")
                        .HasColumnType("DateTime");

                    b.Property<string>("Responsible")
                        .HasMaxLength(150)
                        .HasColumnType("NVarChar(150)");

                    b.HasKey("Id");

                    b.HasIndex("Code");

                    b.HasIndex("Department");

                    b.ToTable("EquipmentRecords", (string)null);
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.ExchangeRate.ExchangeRates", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<decimal>("BuyingRate")
                        .HasPrecision(18, 6)
                        .HasColumnType("Decimal(18,6)");

                    b.Property<DateTime?>("CreationTime")
                        .IsRequired()
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid>("CurrencyID")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<bool?>("DataOpenStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("DataOpenStatus");

                    b.Property<Guid?>("DataOpenStatusUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("00000000-0000-0000-0000-000000000000"))
                        .HasColumnName("DataOpenStatusUserId");

                    b.Property<DateTime>("Date")
                        .HasColumnType("DateTime");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<decimal>("EffectiveBuyingRate")
                        .HasPrecision(18, 6)
                        .HasColumnType("Decimal(18,6)");

                    b.Property<decimal>("EffectiveSaleRate")
                        .HasPrecision(18, 6)
                        .HasColumnType("Decimal(18,6)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<decimal>("SaleRate")
                        .HasPrecision(18, 6)
                        .HasColumnType("Decimal(18,6)");

                    b.HasKey("Id");

                    b.HasIndex("CurrencyID");

                    b.HasIndex("Date");

                    b.ToTable("ExchangeRates", (string)null);
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.FinalControlUnsuitabilityItem.FinalControlUnsuitabilityItems", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(17)
                        .HasColumnType("NVarChar(17)");

                    b.Property<DateTime?>("CreationTime")
                        .IsRequired()
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<bool?>("DataOpenStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("DataOpenStatus");

                    b.Property<Guid?>("DataOpenStatusUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("00000000-0000-0000-0000-000000000000"))
                        .HasColumnName("DataOpenStatusUserId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<int>("Detection")
                        .HasColumnType("Int");

                    b.Property<byte[]>("Image")
                        .HasColumnType("varbinary(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("Bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("NVarChar(200)");

                    b.Property<bool>("PerProductivityAnalysis")
                        .HasColumnType("Bit");

                    b.Property<int>("Severity")
                        .HasColumnType("Int");

                    b.Property<bool>("StaProductivityAnalysis")
                        .HasColumnType("Bit");

                    b.HasKey("Id");

                    b.HasIndex("Code");

                    b.ToTable("FinalControlUnsuitabilityItems", (string)null);
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.FinalControlUnsuitabilityReport.FinalControlUnsuitabilityReports", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<decimal>("ControlFormDeclaration")
                        .HasPrecision(18, 6)
                        .HasColumnType("Decimal(18,6)");

                    b.Property<DateTime?>("CreationTime")
                        .IsRequired()
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<bool?>("DataOpenStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("DataOpenStatus");

                    b.Property<Guid?>("DataOpenStatusUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("00000000-0000-0000-0000-000000000000"))
                        .HasColumnName("DataOpenStatusUserId");

                    b.Property<DateTime?>("Date_")
                        .IsRequired()
                        .HasColumnType("DateTime");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("Description_")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("EmployeeID")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<string>("FicheNo")
                        .IsRequired()
                        .HasMaxLength(17)
                        .HasColumnType("NVarChar(17)");

                    b.Property<bool>("IsCorrection")
                        .HasColumnType("Bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsScrap")
                        .HasColumnType("Bit");

                    b.Property<bool>("IsToBeUsedAs")
                        .HasColumnType("Bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("PartyNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ProductID")
                        .HasColumnType("UniqueIdentifier");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeID");

                    b.HasIndex("FicheNo");

                    b.HasIndex("ProductID");

                    b.ToTable("FinalControlUnsuitabilityReports", (string)null);
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.Forecast.Forecasts", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<Guid>("BranchID")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(17)
                        .HasColumnType("NVarChar(17)");

                    b.Property<DateTime>("CreationDate_")
                        .HasColumnType("DateTime");

                    b.Property<DateTime?>("CreationTime")
                        .IsRequired()
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid>("CurrentAccountCardID")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<bool?>("DataOpenStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("DataOpenStatus");

                    b.Property<Guid?>("DataOpenStatusUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("00000000-0000-0000-0000-000000000000"))
                        .HasColumnName("DataOpenStatusUserId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("Description_")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<int>("LineNumber")
                        .HasColumnType("Int");

                    b.Property<Guid>("PeriodID")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<decimal>("Total")
                        .HasPrecision(18, 6)
                        .HasColumnType("Decimal(18,6)");

                    b.Property<DateTime?>("ValidityEndDate")
                        .HasColumnType("DateTime");

                    b.Property<DateTime?>("ValidityStartDate")
                        .HasColumnType("DateTime");

                    b.HasKey("Id");

                    b.HasIndex("BranchID");

                    b.HasIndex("Code");

                    b.HasIndex("CurrentAccountCardID");

                    b.HasIndex("PeriodID");

                    b.ToTable("Forecasts", (string)null);
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.ForecastLine.ForecastLines", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<decimal>("Amount")
                        .HasPrecision(18, 6)
                        .HasColumnType("Decimal(18,6)");

                    b.Property<DateTime?>("CreationTime")
                        .IsRequired()
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<string>("CustomerProductCode")
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<bool?>("DataOpenStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("DataOpenStatus");

                    b.Property<Guid?>("DataOpenStatusUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("00000000-0000-0000-0000-000000000000"))
                        .HasColumnName("DataOpenStatusUserId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<Guid>("ForecastID")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<int>("LineNr")
                        .HasColumnType("Int");

                    b.Property<Guid>("ProductID")
                        .HasColumnType("UniqueIdentifier");

                    b.HasKey("Id");

                    b.HasIndex("ForecastID");

                    b.HasIndex("ProductID");

                    b.ToTable("ForecastLines", (string)null);
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.GrandTotalStockMovement.GrandTotalStockMovements", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<decimal>("Amount")
                        .HasPrecision(18, 6)
                        .HasColumnType("decimal(18,6)");

                    b.Property<Guid>("BranchID")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<DateTime?>("CreationTime")
                        .IsRequired()
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<bool?>("DataOpenStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("DataOpenStatus");

                    b.Property<Guid?>("DataOpenStatusUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("00000000-0000-0000-0000-000000000000"))
                        .HasColumnName("DataOpenStatusUserId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<Guid>("ProductID")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<decimal>("TotalConsumption")
                        .HasPrecision(18, 6)
                        .HasColumnType("Decimal(18,6)");

                    b.Property<decimal>("TotalGoodsIssue")
                        .HasPrecision(18, 6)
                        .HasColumnType("Decimal(18,6)");

                    b.Property<decimal>("TotalGoodsReceipt")
                        .HasPrecision(18, 6)
                        .HasColumnType("Decimal(18,6)");

                    b.Property<decimal>("TotalProduction")
                        .HasPrecision(18, 6)
                        .HasColumnType("Decimal(18,6)");

                    b.Property<decimal>("TotalPurchaseOrder")
                        .HasPrecision(18, 6)
                        .HasColumnType("Decimal(18,6)");

                    b.Property<decimal>("TotalPurchaseRequest")
                        .HasPrecision(18, 6)
                        .HasColumnType("Decimal(18,6)");

                    b.Property<decimal>("TotalReserved")
                        .HasPrecision(18, 6)
                        .HasColumnType("Decimal(18,6)");

                    b.Property<decimal>("TotalSalesOrder")
                        .HasPrecision(18, 6)
                        .HasColumnType("Decimal(18,6)");

                    b.Property<decimal>("TotalSalesProposition")
                        .HasPrecision(18, 6)
                        .HasColumnType("Decimal(18,6)");

                    b.Property<decimal>("TotalWastage")
                        .HasPrecision(18, 6)
                        .HasColumnType("Decimal(18,6)");

                    b.Property<Guid>("WarehouseID")
                        .HasColumnType("UniqueIdentifier");

                    b.HasKey("Id");

                    b.HasIndex("BranchID");

                    b.HasIndex("ProductID");

                    b.HasIndex("WarehouseID");

                    b.ToTable("GrandTotalStockMovements", (string)null);
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.HaltReason.HaltReasons", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVarChar(50)");

                    b.Property<DateTime?>("CreationTime")
                        .IsRequired()
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<bool?>("DataOpenStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("DataOpenStatus");

                    b.Property<Guid?>("DataOpenStatusUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("00000000-0000-0000-0000-000000000000"))
                        .HasColumnName("DataOpenStatusUserId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsMachine")
                        .HasColumnType("Bit");

                    b.Property<bool>("IsManagement")
                        .HasColumnType("Bit");

                    b.Property<bool>("IsOperator")
                        .HasColumnType("Bit");

                    b.Property<bool>("IsPlanned")
                        .HasColumnType("Bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("NVarChar(200)");

                    b.HasKey("Id");

                    b.ToTable("HaltReasons", (string)null);
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.Logging.Logs", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("UniqueIdentifier");

                    b.Property<object>("AfterValues")
                        .IsRequired()
                        .HasMaxLength(5000)
                        .HasColumnType("sql_variant");

                    b.Property<object>("BeforeValues")
                        .IsRequired()
                        .HasMaxLength(5000)
                        .HasColumnType("sql_variant");

                    b.Property<DateTime>("Date_")
                        .HasMaxLength(200)
                        .HasColumnType("DateTime");

                    b.Property<object>("DiffValues")
                        .IsRequired()
                        .HasMaxLength(5000)
                        .HasColumnType("sql_variant");

                    b.Property<Guid>("LinkedRecordId")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<string>("LogLevel_")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVarChar(50)");

                    b.Property<string>("MethodName_")
                        .IsRequired()
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("RecordId")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("UniqueIdentifier");

                    b.HasKey("Id");

                    b.ToTable("Logs", (string)null);
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.MaintenanceInstruction.MaintenanceInstructions", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(17)
                        .HasColumnType("NVarChar(17)");

                    b.Property<DateTime?>("CreationTime")
                        .IsRequired()
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<bool?>("DataOpenStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("DataOpenStatus");

                    b.Property<Guid?>("DataOpenStatusUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("00000000-0000-0000-0000-000000000000"))
                        .HasColumnName("DataOpenStatusUserId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("InstructionName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("Note_")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("PeriodID")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<decimal>("PeriodTime")
                        .HasPrecision(18, 6)
                        .HasColumnType("Decimal(18,6)");

                    b.Property<decimal>("PlannedMaintenanceTime")
                        .HasPrecision(18, 6)
                        .HasColumnType("Decimal(18,6)");

                    b.Property<Guid>("StationID")
                        .HasColumnType("UniqueIdentifier");

                    b.HasKey("Id");

                    b.HasIndex("Code");

                    b.HasIndex("PeriodID");

                    b.HasIndex("StationID");

                    b.ToTable("MaintenanceInstructions", (string)null);
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.MaintenanceInstructionLine.MaintenanceInstructionLines", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<decimal>("Amount")
                        .HasPrecision(18, 6)
                        .HasColumnType("Decimal(18,6)");

                    b.Property<DateTime?>("CreationTime")
                        .IsRequired()
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<bool?>("DataOpenStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("DataOpenStatus");

                    b.Property<Guid?>("DataOpenStatusUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("00000000-0000-0000-0000-000000000000"))
                        .HasColumnName("DataOpenStatusUserId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("InstructionDescription")
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("InstructionID")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<int>("LineNr")
                        .HasColumnType("Int");

                    b.Property<Guid>("ProductID")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<Guid>("UnitSetID")
                        .HasColumnType("UniqueIdentifier");

                    b.HasKey("Id");

                    b.HasIndex("InstructionID");

                    b.HasIndex("ProductID");

                    b.HasIndex("UnitSetID");

                    b.ToTable("MaintenanceInstructionLines", (string)null);
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.MaintenancePeriod.MaintenancePeriods", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(17)
                        .HasColumnType("NVarChar(17)");

                    b.Property<DateTime?>("CreationTime")
                        .IsRequired()
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<bool?>("DataOpenStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("DataOpenStatus");

                    b.Property<Guid?>("DataOpenStatusUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("00000000-0000-0000-0000-000000000000"))
                        .HasColumnName("DataOpenStatusUserId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("Description_")
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("Bit");

                    b.Property<bool>("IsDaily")
                        .HasColumnType("Bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("NVarChar(200)");

                    b.Property<decimal>("PeriodTime")
                        .HasPrecision(18, 6)
                        .HasColumnType("Decimal(18,6)");

                    b.HasKey("Id");

                    b.HasIndex("Code");

                    b.ToTable("MaintenancePeriods", (string)null);
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.Menu.Menus", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<DateTime?>("CreationTime")
                        .IsRequired()
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<bool?>("DataOpenStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("DataOpenStatus");

                    b.Property<Guid?>("DataOpenStatusUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("00000000-0000-0000-0000-000000000000"))
                        .HasColumnName("DataOpenStatusUserId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("MenuName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("NVarChar(200)");

                    b.Property<Guid>("ParentMenuId")
                        .HasColumnType("UniqueIdentifier");

                    b.HasKey("Id");

                    b.ToTable("Menus", (string)null);
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.OperationUnsuitabilityItem.OperationUnsuitabilityItems", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(17)
                        .HasColumnType("NVarChar(17)");

                    b.Property<DateTime?>("CreationTime")
                        .IsRequired()
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<bool?>("DataOpenStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("DataOpenStatus");

                    b.Property<Guid?>("DataOpenStatusUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("00000000-0000-0000-0000-000000000000"))
                        .HasColumnName("DataOpenStatusUserId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<int>("Detection")
                        .HasColumnType("Int");

                    b.Property<byte[]>("Image")
                        .HasColumnType("varbinary(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("Bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("NVarChar(200)");

                    b.Property<bool>("PerProductivityAnalysis")
                        .HasColumnType("Bit");

                    b.Property<int>("Severity")
                        .HasColumnType("Int");

                    b.Property<bool>("StaProductivityAnalysis")
                        .HasColumnType("Bit");

                    b.HasKey("Id");

                    b.HasIndex("Code");

                    b.ToTable("OperationUnsuitabilityItems", (string)null);
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.OperationUnsuitabilityReport.OperationUnsuitabilityReports", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<decimal>("ControlFormDeclaration")
                        .HasPrecision(18, 6)
                        .HasColumnType("Decimal(18,6)");

                    b.Property<DateTime?>("CreationTime")
                        .IsRequired()
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<bool?>("DataOpenStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("DataOpenStatus");

                    b.Property<Guid?>("DataOpenStatusUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("00000000-0000-0000-0000-000000000000"))
                        .HasColumnName("DataOpenStatusUserId");

                    b.Property<DateTime?>("Date_")
                        .IsRequired()
                        .HasColumnType("DateTime");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("Description_")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("EmployeeID")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<string>("FicheNo")
                        .IsRequired()
                        .HasMaxLength(17)
                        .HasColumnType("NVarChar(17)");

                    b.Property<bool>("IsCorrection")
                        .HasColumnType("Bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsScrap")
                        .HasColumnType("Bit");

                    b.Property<bool>("IsToBeUsedAs")
                        .HasColumnType("Bit");

                    b.Property<bool>("IsUnsuitabilityWorkOrder")
                        .HasColumnType("Bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<Guid>("OperationID")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<Guid>("ProductID")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<Guid>("ProductionOrderID")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<Guid>("StationGroupID")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<Guid>("StationID")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<Guid>("WorkOrderID")
                        .HasColumnType("UniqueIdentifier");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeID");

                    b.HasIndex("FicheNo");

                    b.HasIndex("OperationID");

                    b.HasIndex("ProductID");

                    b.HasIndex("ProductionOrderID");

                    b.HasIndex("StationGroupID");

                    b.HasIndex("StationID");

                    b.HasIndex("WorkOrderID");

                    b.ToTable("OperationUnsuitabilityReports", (string)null);
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.PaymentPlan.PaymentPlans", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(17)
                        .HasColumnType("NVarChar(17)");

                    b.Property<DateTime?>("CreationTime")
                        .IsRequired()
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<bool?>("DataOpenStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("DataOpenStatus");

                    b.Property<Guid?>("DataOpenStatusUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("00000000-0000-0000-0000-000000000000"))
                        .HasColumnName("DataOpenStatusUserId");

                    b.Property<int>("Days_")
                        .HasColumnType("Int");

                    b.Property<decimal>("DelayMaturityDifference")
                        .HasPrecision(18, 6)
                        .HasColumnType("Decimal(18,6)");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<bool>("IsActive")
                        .HasColumnType("Bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("NVarChar(200)");

                    b.HasKey("Id");

                    b.HasIndex("Code");

                    b.ToTable("PaymentPlans", (string)null);
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.Period.Periods", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<Guid>("BranchID")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(17)
                        .HasColumnType("NVarChar(17)");

                    b.Property<DateTime?>("CreationTime")
                        .IsRequired()
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<bool?>("DataOpenStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("DataOpenStatus");

                    b.Property<Guid?>("DataOpenStatusUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("00000000-0000-0000-0000-000000000000"))
                        .HasColumnName("DataOpenStatusUserId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("Description_")
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("Bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("NVarChar(200)");

                    b.HasKey("Id");

                    b.HasIndex("BranchID");

                    b.HasIndex("Code");

                    b.ToTable("Periods", (string)null);
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.PlannedMaintenance.PlannedMaintenances", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<string>("Caregiver")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CompletionDate")
                        .HasColumnType("DateTime");

                    b.Property<DateTime?>("CreationTime")
                        .IsRequired()
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<bool?>("DataOpenStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("DataOpenStatus");

                    b.Property<Guid?>("DataOpenStatusUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("00000000-0000-0000-0000-000000000000"))
                        .HasColumnName("DataOpenStatusUserId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("Note_")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumberofCaregivers")
                        .HasColumnType("Int");

                    b.Property<decimal>("OccuredTime")
                        .HasPrecision(18, 6)
                        .HasColumnType("Decimal(18,6)");

                    b.Property<Guid>("PeriodID")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<decimal>("PeriodTime")
                        .HasPrecision(18, 6)
                        .HasColumnType("Decimal(18,6)");

                    b.Property<DateTime?>("PlannedDate")
                        .HasColumnType("DateTime");

                    b.Property<decimal>("PlannedTime")
                        .HasPrecision(18, 6)
                        .HasColumnType("Decimal(18,6)");

                    b.Property<string>("RegistrationNo")
                        .IsRequired()
                        .HasMaxLength(17)
                        .HasColumnType("NVarChar(17)");

                    b.Property<decimal>("RemainingTime")
                        .HasPrecision(18, 6)
                        .HasColumnType("Decimal(18,6)");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("DateTime");

                    b.Property<Guid>("StationID")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<int>("Status")
                        .HasColumnType("Int");

                    b.HasKey("Id");

                    b.HasIndex("PeriodID");

                    b.HasIndex("RegistrationNo");

                    b.HasIndex("StationID");

                    b.ToTable("PlannedMaintenances", (string)null);
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.PlannedMaintenanceLine.PlannedMaintenanceLines", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<decimal>("Amount")
                        .HasPrecision(18, 6)
                        .HasColumnType("Decimal(18,6)");

                    b.Property<DateTime?>("CreationTime")
                        .IsRequired()
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<bool?>("DataOpenStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("DataOpenStatus");

                    b.Property<Guid?>("DataOpenStatusUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("00000000-0000-0000-0000-000000000000"))
                        .HasColumnName("DataOpenStatusUserId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("InstructionDescription")
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<int>("LineNr")
                        .HasColumnType("Int");

                    b.Property<string>("MaintenanceNote")
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("PlannedMaintenanceID")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<Guid>("ProductID")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<Guid>("UnitSetID")
                        .HasColumnType("UniqueIdentifier");

                    b.HasKey("Id");

                    b.HasIndex("PlannedMaintenanceID");

                    b.HasIndex("ProductID");

                    b.HasIndex("UnitSetID");

                    b.ToTable("PlannedMaintenanceLines", (string)null);
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.Product.Products", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<decimal>("CoatingWeight")
                        .HasPrecision(18, 6)
                        .HasColumnType("Decimal(18,6)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(17)
                        .HasColumnType("NVarChar(17)");

                    b.Property<bool>("Confirmation")
                        .HasColumnType("Bit");

                    b.Property<DateTime?>("CreationTime")
                        .IsRequired()
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<bool?>("DataOpenStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("DataOpenStatus");

                    b.Property<Guid?>("DataOpenStatusUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("00000000-0000-0000-0000-000000000000"))
                        .HasColumnName("DataOpenStatusUserId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("EnglishDefinition")
                        .HasMaxLength(201)
                        .HasColumnType("NVarChar(201)");

                    b.Property<string>("ExportCatNo")
                        .HasMaxLength(50)
                        .HasColumnType("NVarChar(50)");

                    b.Property<Guid>("FeatureSetID")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<string>("GTIP")
                        .HasMaxLength(50)
                        .HasColumnType("NVarChar(50)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("Bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("ManufacturerCode")
                        .HasMaxLength(50)
                        .HasColumnType("NVarChar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("NVarChar(200)");

                    b.Property<string>("OemRefNo")
                        .HasMaxLength(50)
                        .HasColumnType("NVarChar(50)");

                    b.Property<string>("OemRefNo2")
                        .HasMaxLength(50)
                        .HasColumnType("NVarChar(50)");

                    b.Property<string>("OemRefNo3")
                        .HasMaxLength(50)
                        .HasColumnType("NVarChar(50)");

                    b.Property<int>("PlannedWastage")
                        .HasColumnType("Int");

                    b.Property<string>("ProductDescription")
                        .HasMaxLength(500)
                        .HasColumnType("NVarChar(500)");

                    b.Property<Guid>("ProductGrpID")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<decimal>("ProductSize")
                        .HasPrecision(18, 6)
                        .HasColumnType("Decimal(18,6)");

                    b.Property<int>("ProductType")
                        .HasColumnType("Int");

                    b.Property<int>("PurchaseVAT")
                        .HasColumnType("Int");

                    b.Property<int>("SaleVAT")
                        .HasColumnType("Int");

                    b.Property<decimal>("SawWastage")
                        .HasPrecision(18, 6)
                        .HasColumnType("Decimal(18,6)");

                    b.Property<int>("SupplyForm")
                        .HasColumnType("Int");

                    b.Property<bool>("TechnicalConfirmation")
                        .HasColumnType("Bit");

                    b.Property<Guid>("UnitSetID")
                        .HasColumnType("UniqueIdentifier");

                    b.HasKey("Id");

                    b.HasIndex("Code");

                    b.HasIndex("ProductGrpID");

                    b.HasIndex("UnitSetID");

                    b.ToTable("Products", (string)null);
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.ProductGroup.ProductGroups", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(17)
                        .HasColumnType("NVarChar(17)");

                    b.Property<DateTime?>("CreationTime")
                        .IsRequired()
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<bool?>("DataOpenStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("DataOpenStatus");

                    b.Property<Guid?>("DataOpenStatusUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("00000000-0000-0000-0000-000000000000"))
                        .HasColumnName("DataOpenStatusUserId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<bool>("IsActive")
                        .HasColumnType("Bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("NVarChar(200)");

                    b.HasKey("Id");

                    b.HasIndex("Code");

                    b.ToTable("ProductGroups", (string)null);
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.ProductionOrder.ProductionOrders", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<Guid>("BOMID")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<bool>("Cancel_")
                        .HasColumnType("Bit");

                    b.Property<DateTime?>("CreationTime")
                        .IsRequired()
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid>("CurrentAccountID")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<string>("CustomerOrderNo")
                        .HasMaxLength(200)
                        .HasColumnType("NVarChar(200)");

                    b.Property<bool?>("DataOpenStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("DataOpenStatus");

                    b.Property<Guid?>("DataOpenStatusUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("00000000-0000-0000-0000-000000000000"))
                        .HasColumnName("DataOpenStatusUserId");

                    b.Property<DateTime?>("Date_")
                        .HasColumnType("DateTime");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("Description_")
                        .HasMaxLength(200)
                        .HasColumnType("NVarChar(200)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("DateTime");

                    b.Property<string>("FicheNo")
                        .IsRequired()
                        .HasMaxLength(17)
                        .HasColumnType("NVarChar(17)");

                    b.Property<Guid>("FinishedProductID")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<Guid>("LinkedProductID")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<Guid>("LinkedProductionOrderID")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<Guid>("OrderID")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<Guid>("OrderLineID")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<decimal>("PlannedQuantity")
                        .HasPrecision(18, 6)
                        .HasColumnType("Decimal(18,6)");

                    b.Property<decimal>("ProducedQuantity")
                        .HasPrecision(18, 6)
                        .HasColumnType("Decimal(18,6)");

                    b.Property<Guid>("ProductTreeID")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<Guid>("ProductTreeLineID")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<int>("ProductionOrderState")
                        .HasColumnType("Int");

                    b.Property<Guid>("PropositionID")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<Guid>("PropositionLineID")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<Guid>("RouteID")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("DateTime");

                    b.Property<Guid>("UnitSetID")
                        .HasColumnType("UniqueIdentifier");

                    b.HasKey("Id");

                    b.HasIndex("BOMID");

                    b.HasIndex("CurrentAccountID");

                    b.HasIndex("FicheNo");

                    b.HasIndex("FinishedProductID");

                    b.HasIndex("OrderID");

                    b.HasIndex("OrderLineID")
                        .IsUnique();

                    b.HasIndex("PropositionID");

                    b.HasIndex("PropositionLineID")
                        .IsUnique();

                    b.HasIndex("RouteID");

                    b.HasIndex("UnitSetID");

                    b.ToTable("ProductionOrders", (string)null);
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.ProductionOrderChangeItem.ProductionOrderChangeItems", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(17)
                        .HasColumnType("NVarChar(17)");

                    b.Property<DateTime?>("CreationTime")
                        .IsRequired()
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<bool?>("DataOpenStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("DataOpenStatus");

                    b.Property<Guid?>("DataOpenStatusUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("00000000-0000-0000-0000-000000000000"))
                        .HasColumnName("DataOpenStatusUserId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<int>("Detection")
                        .HasColumnType("Int");

                    b.Property<byte[]>("Image")
                        .HasColumnType("varbinary(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("Bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("NVarChar(200)");

                    b.Property<bool>("PerProductivityAnalysis")
                        .HasColumnType("Bit");

                    b.Property<int>("Severity")
                        .HasColumnType("Int");

                    b.Property<bool>("StaProductivityAnalysis")
                        .HasColumnType("Bit");

                    b.HasKey("Id");

                    b.HasIndex("Code");

                    b.ToTable("ProductionOrderChangeItems", (string)null);
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.ProductionTracking.ProductionTrackings", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<decimal>("AdjustmentTime")
                        .HasPrecision(18, 6)
                        .HasColumnType("Decimal(18,6)");

                    b.Property<DateTime?>("CreationTime")
                        .IsRequired()
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<bool?>("DataOpenStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("DataOpenStatus");

                    b.Property<Guid?>("DataOpenStatusUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("00000000-0000-0000-0000-000000000000"))
                        .HasColumnName("DataOpenStatusUserId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<Guid>("EmployeeID")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<string>("EmployeeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("HaltTime")
                        .HasPrecision(18, 6)
                        .HasColumnType("Decimal(18,6)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsFinished")
                        .HasColumnType("Bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<DateTime>("OperationEndDate")
                        .HasColumnType("DateTime");

                    b.Property<TimeSpan?>("OperationEndTime")
                        .IsRequired()
                        .HasColumnType("time(7)");

                    b.Property<DateTime>("OperationStartDate")
                        .HasColumnType("DateTime");

                    b.Property<TimeSpan?>("OperationStartTime")
                        .IsRequired()
                        .HasColumnType("time(7)");

                    b.Property<decimal>("OperationTime")
                        .HasPrecision(18, 6)
                        .HasColumnType("Decimal(18,6)");

                    b.Property<decimal>("PlannedQuantity")
                        .HasPrecision(18, 6)
                        .HasColumnType("Decimal(18,6)");

                    b.Property<decimal>("ProducedQuantity")
                        .HasPrecision(18, 6)
                        .HasColumnType("Decimal(18,6)");

                    b.Property<string>("ShiftCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ShiftID")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<string>("StationCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("StationID")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<Guid>("WorkOrderID")
                        .HasColumnType("UniqueIdentifier");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeID");

                    b.HasIndex("ShiftID");

                    b.HasIndex("StationID");

                    b.HasIndex("WorkOrderID");

                    b.ToTable("ProductionTrackings", (string)null);
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.ProductionTrackingHaltLine.ProductionTrackingHaltLines", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<DateTime?>("CreationTime")
                        .IsRequired()
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<bool?>("DataOpenStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("DataOpenStatus");

                    b.Property<Guid?>("DataOpenStatusUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("00000000-0000-0000-0000-000000000000"))
                        .HasColumnName("DataOpenStatusUserId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("HaltCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("HaltID")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<string>("HaltName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("HaltTime")
                        .HasPrecision(18, 6)
                        .HasColumnType("Decimal(18,6)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<Guid>("ProductionTrackingID")
                        .HasColumnType("UniqueIdentifier");

                    b.HasKey("Id");

                    b.HasIndex("HaltID");

                    b.HasIndex("ProductionTrackingID");

                    b.ToTable("ProductionTrackingHaltLines", (string)null);
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.ProductReferanceNumber.ProductReferanceNumbers", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<DateTime?>("CreationTime")
                        .IsRequired()
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid>("CurrentAccountCardID")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<bool?>("DataOpenStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("DataOpenStatus");

                    b.Property<Guid?>("DataOpenStatusUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("00000000-0000-0000-0000-000000000000"))
                        .HasColumnName("DataOpenStatusUserId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("Description_")
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<Guid>("ProductID")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<string>("ReferanceNo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVarChar(50)");

                    b.HasKey("Id");

                    b.HasIndex("CurrentAccountCardID");

                    b.HasIndex("ProductID");

                    b.HasIndex("ReferanceNo");

                    b.ToTable("ProductReferanceNumbers", (string)null);
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.ProductsOperation.ProductsOperations", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(17)
                        .HasColumnType("NVarChar(17)");

                    b.Property<DateTime?>("CreationTime")
                        .IsRequired()
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<bool?>("DataOpenStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("DataOpenStatus");

                    b.Property<Guid?>("DataOpenStatusUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("00000000-0000-0000-0000-000000000000"))
                        .HasColumnName("DataOpenStatusUserId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<bool>("IsActive")
                        .HasColumnType("Bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("NVarChar(200)");

                    b.Property<Guid>("ProductID")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<Guid>("TemplateOperationID")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<Guid>("WorkCenterID")
                        .HasColumnType("UniqueIdentifier");

                    b.HasKey("Id");

                    b.HasIndex("Code");

                    b.HasIndex("ProductID");

                    b.ToTable("ProductsOperations", (string)null);
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.ProductsOperationLine.ProductsOperationLines", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<decimal>("AdjustmentAndControlTime")
                        .HasPrecision(18, 6)
                        .HasColumnType("Decimal(18,6)");

                    b.Property<bool>("Alternative")
                        .HasColumnType("Bit");

                    b.Property<DateTime?>("CreationTime")
                        .IsRequired()
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<bool?>("DataOpenStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("DataOpenStatus");

                    b.Property<Guid?>("DataOpenStatusUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("00000000-0000-0000-0000-000000000000"))
                        .HasColumnName("DataOpenStatusUserId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<int>("LineNr")
                        .HasColumnType("Int");

                    b.Property<decimal>("OperationTime")
                        .HasPrecision(18, 6)
                        .HasColumnType("Decimal(18,6)");

                    b.Property<int>("Priority")
                        .HasColumnType("Int");

                    b.Property<int>("ProcessQuantity")
                        .HasColumnType("Int");

                    b.Property<Guid>("ProductsOperationID")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<Guid>("StationID")
                        .HasColumnType("UniqueIdentifier");

                    b.HasKey("Id");

                    b.HasIndex("ProductsOperationID");

                    b.HasIndex("StationID");

                    b.ToTable("ProductsOperationLines", (string)null);
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.PurchaseOrder.PurchaseOrders", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<Guid>("BranchID")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<DateTime?>("CreationTime")
                        .IsRequired()
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid>("CurrencyID")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<Guid>("CurrentAccountCardID")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<bool?>("DataOpenStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("DataOpenStatus");

                    b.Property<Guid?>("DataOpenStatusUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("00000000-0000-0000-0000-000000000000"))
                        .HasColumnName("DataOpenStatusUserId");

                    b.Property<DateTime>("Date_")
                        .HasColumnType("DateTime");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("Description_")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("ExchangeRate")
                        .HasPrecision(18, 6)
                        .HasColumnType("Decimal(18,6)");

                    b.Property<string>("FicheNo")
                        .IsRequired()
                        .HasMaxLength(17)
                        .HasColumnType("NVarChar(17)");

                    b.Property<decimal>("GrossAmount")
                        .HasPrecision(18, 6)
                        .HasColumnType("Decimal(18,6)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<Guid>("LinkedPurchaseRequestID")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<decimal>("NetAmount")
                        .HasPrecision(18, 6)
                        .HasColumnType("Decimal(18,6)");

                    b.Property<Guid>("PaymentPlanID")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<Guid>("ProductionOrderID")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<int>("PurchaseOrderState")
                        .HasColumnType("Int");

                    b.Property<Guid?>("ShippingAdressID")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<string>("SpecialCode")
                        .HasMaxLength(201)
                        .HasColumnType("NVarChar(201)");

                    b.Property<TimeSpan?>("Time_")
                        .HasColumnType("time(7)");

                    b.Property<decimal>("TotalDiscountAmount")
                        .HasPrecision(18, 6)
                        .HasColumnType("Decimal(18,6)");

                    b.Property<decimal>("TotalVatAmount")
                        .HasPrecision(18, 6)
                        .HasColumnType("Decimal(18,6)");

                    b.Property<decimal>("TotalVatExcludedAmount")
                        .HasPrecision(18, 6)
                        .HasColumnType("Decimal(18,6)");

                    b.Property<Guid>("WarehouseID")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<DateTime?>("WorkOrderCreationDate")
                        .HasColumnType("DateTime");

                    b.HasKey("Id");

                    b.HasIndex("BranchID");

                    b.HasIndex("CurrencyID");

                    b.HasIndex("CurrentAccountCardID");

                    b.HasIndex("FicheNo");

                    b.HasIndex("PaymentPlanID");

                    b.HasIndex("ShippingAdressID");

                    b.HasIndex("WarehouseID");

                    b.ToTable("PurchaseOrders", (string)null);
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.PurchaseOrderLine.PurchaseOrderLines", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<DateTime?>("CreationTime")
                        .IsRequired()
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<bool?>("DataOpenStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("DataOpenStatus");

                    b.Property<Guid?>("DataOpenStatusUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("00000000-0000-0000-0000-000000000000"))
                        .HasColumnName("DataOpenStatusUserId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<decimal>("DiscountAmount")
                        .HasPrecision(18, 6)
                        .HasColumnType("Decimal(18,6)");

                    b.Property<decimal>("DiscountRate")
                        .HasPrecision(18, 6)
                        .HasColumnType("Decimal(18,6)");

                    b.Property<decimal>("ExchangeRate")
                        .HasPrecision(18, 6)
                        .HasColumnType("Decimal(18,6)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<Guid>("LikedPurchaseRequestLineID")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<decimal>("LineAmount")
                        .HasPrecision(18, 6)
                        .HasColumnType("Decimal(18,6)");

                    b.Property<string>("LineDescription")
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<int>("LineNr")
                        .HasColumnType("Int");

                    b.Property<decimal>("LineTotalAmount")
                        .HasPrecision(18, 6)
                        .HasColumnType("Decimal(18,6)");

                    b.Property<Guid?>("LinkedPurchaseRequestID")
                        .IsRequired()
                        .HasColumnType("UniqueIdentifier");

                    b.Property<Guid>("PaymentPlanID")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<Guid>("ProductID")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<Guid>("ProductionOrderID")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<Guid>("PurchaseOrderID")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<int>("PurchaseOrderLineStateEnum")
                        .HasColumnType("Int");

                    b.Property<decimal>("Quantity")
                        .HasPrecision(18, 6)
                        .HasColumnType("Decimal(18,6)");

                    b.Property<decimal>("UnitPrice")
                        .HasPrecision(18, 6)
                        .HasColumnType("Decimal(18,6)");

                    b.Property<Guid>("UnitSetID")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<decimal>("VATamount")
                        .HasPrecision(18, 6)
                        .HasColumnType("Decimal(18,6)");

                    b.Property<int>("VATrate")
                        .HasColumnType("Int");

                    b.Property<DateTime?>("WorkOrderCreationDate")
                        .HasColumnType("DateTime");

                    b.HasKey("Id");

                    b.HasIndex("PaymentPlanID");

                    b.HasIndex("ProductID");

                    b.HasIndex("PurchaseOrderID");

                    b.HasIndex("UnitSetID");

                    b.ToTable("PurchaseOrderLines", (string)null);
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.PurchasePrice.PurchasePrices", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<Guid?>("BranchID")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(17)
                        .HasColumnType("NVarChar(17)");

                    b.Property<DateTime?>("CreationTime")
                        .IsRequired()
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid>("CurrencyID")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<Guid?>("CurrentAccountCardID")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<bool?>("DataOpenStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("DataOpenStatus");

                    b.Property<Guid?>("DataOpenStatusUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("00000000-0000-0000-0000-000000000000"))
                        .HasColumnName("DataOpenStatusUserId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<DateTime?>("EndDate")
                        .IsRequired()
                        .HasColumnType("DateTime");

                    b.Property<bool>("IsActive")
                        .HasColumnType("Bit");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("Bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("Name")
                        .HasMaxLength(200)
                        .HasColumnType("NVarChar(200)");

                    b.Property<DateTime?>("StartDate")
                        .IsRequired()
                        .HasColumnType("DateTime");

                    b.Property<Guid?>("WarehouseID")
                        .HasColumnType("UniqueIdentifier");

                    b.HasKey("Id");

                    b.HasIndex("BranchID");

                    b.HasIndex("Code");

                    b.HasIndex("CurrencyID");

                    b.HasIndex("CurrentAccountCardID");

                    b.HasIndex("WarehouseID");

                    b.ToTable("PurchasePrices", (string)null);
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.PurchasePriceLine.PurchasePriceLines", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<DateTime?>("CreationTime")
                        .IsRequired()
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid>("CurrencyID")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<Guid>("CurrentAccountCardID")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<bool?>("DataOpenStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("DataOpenStatus");

                    b.Property<Guid?>("DataOpenStatusUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("00000000-0000-0000-0000-000000000000"))
                        .HasColumnName("DataOpenStatusUserId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<DateTime?>("EndDate")
                        .IsRequired()
                        .HasColumnType("DateTime");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<int>("Linenr")
                        .HasColumnType("Int");

                    b.Property<decimal>("Price")
                        .HasPrecision(18, 6)
                        .HasColumnType("Decimal(18,6)");

                    b.Property<Guid>("ProductID")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<Guid>("PurchasePriceID")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<DateTime?>("StartDate")
                        .IsRequired()
                        .HasColumnType("DateTime");

                    b.HasKey("Id");

                    b.HasIndex("CurrencyID");

                    b.HasIndex("CurrentAccountCardID");

                    b.HasIndex("ProductID");

                    b.HasIndex("PurchasePriceID");

                    b.ToTable("PurchasePriceLines", (string)null);
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.PurchaseRequest.PurchaseRequests", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<Guid>("BranchID")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<DateTime?>("CreationTime")
                        .IsRequired()
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid>("CurrencyID")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<Guid>("CurrentAccountCardID")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<bool?>("DataOpenStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("DataOpenStatus");

                    b.Property<Guid?>("DataOpenStatusUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("00000000-0000-0000-0000-000000000000"))
                        .HasColumnName("DataOpenStatusUserId");

                    b.Property<DateTime>("Date_")
                        .HasColumnType("DateTime");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("Description_")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("ExchangeRate")
                        .HasPrecision(18, 6)
                        .HasColumnType("Decimal(18,6)");

                    b.Property<string>("FicheNo")
                        .IsRequired()
                        .HasMaxLength(17)
                        .HasColumnType("NVarChar(17)");

                    b.Property<decimal>("GrossAmount")
                        .HasPrecision(18, 6)
                        .HasColumnType("Decimal(18,6)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<Guid>("LinkedPurchaseRequestID")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<decimal>("NetAmount")
                        .HasPrecision(18, 6)
                        .HasColumnType("Decimal(18,6)");

                    b.Property<Guid>("PaymentPlanID")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<Guid?>("ProductionOrderID")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<string>("PropositionRevisionNo")
                        .HasMaxLength(50)
                        .HasColumnType("NVarChar(50)");

                    b.Property<int>("PurchaseRequestState")
                        .HasColumnType("Int");

                    b.Property<DateTime?>("RevisionDate")
                        .HasColumnType("DateTime");

                    b.Property<string>("RevisionTime")
                        .HasMaxLength(8)
                        .HasColumnType("NVarChar(8)");

                    b.Property<Guid?>("ShippingAdressID")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<string>("SpecialCode")
                        .HasMaxLength(201)
                        .HasColumnType("NVarChar(201)");

                    b.Property<TimeSpan?>("Time_")
                        .HasColumnType("time(7)");

                    b.Property<decimal>("TotalDiscountAmount")
                        .HasPrecision(18, 6)
                        .HasColumnType("Decimal(18,6)");

                    b.Property<decimal>("TotalVatAmount")
                        .HasPrecision(18, 6)
                        .HasColumnType("Decimal(18,6)");

                    b.Property<decimal>("TotalVatExcludedAmount")
                        .HasPrecision(18, 6)
                        .HasColumnType("Decimal(18,6)");

                    b.Property<DateTime>("ValidityDate_")
                        .HasColumnType("DateTime");

                    b.Property<Guid>("WarehouseID")
                        .HasColumnType("UniqueIdentifier");

                    b.HasKey("Id");

                    b.HasIndex("BranchID");

                    b.HasIndex("CurrencyID");

                    b.HasIndex("CurrentAccountCardID");

                    b.HasIndex("FicheNo");

                    b.HasIndex("PaymentPlanID");

                    b.HasIndex("ShippingAdressID");

                    b.HasIndex("WarehouseID");

                    b.ToTable("PurchaseRequests", (string)null);
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.PurchaseRequestLine.PurchaseRequestLines", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<DateTime?>("CreationTime")
                        .IsRequired()
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<bool?>("DataOpenStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("DataOpenStatus");

                    b.Property<Guid?>("DataOpenStatusUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("00000000-0000-0000-0000-000000000000"))
                        .HasColumnName("DataOpenStatusUserId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<decimal>("DiscountAmount")
                        .HasPrecision(18, 6)
                        .HasColumnType("Decimal(18,6)");

                    b.Property<decimal>("DiscountRate")
                        .HasPrecision(18, 6)
                        .HasColumnType("Decimal(18,6)");

                    b.Property<decimal>("ExchangeRate")
                        .HasPrecision(18, 6)
                        .HasColumnType("Decimal(18,6)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<decimal>("LineAmount")
                        .HasPrecision(18, 6)
                        .HasColumnType("Decimal(18,6)");

                    b.Property<string>("LineDescription")
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<int>("LineNr")
                        .HasColumnType("Int");

                    b.Property<decimal>("LineTotalAmount")
                        .HasPrecision(18, 6)
                        .HasColumnType("Decimal(18,6)");

                    b.Property<DateTime?>("OrderConversionDate")
                        .HasColumnType("DateTime");

                    b.Property<Guid>("PaymentPlanID")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<Guid>("ProductID")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<Guid>("ProductionOrderID")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<Guid>("PurchaseRequestID")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<int>("PurchaseRequestLineState")
                        .HasColumnType("Int");

                    b.Property<decimal>("Quantity")
                        .HasPrecision(18, 6)
                        .HasColumnType("Decimal(18,6)");

                    b.Property<decimal>("UnitPrice")
                        .HasPrecision(18, 6)
                        .HasColumnType("Decimal(18,6)");

                    b.Property<Guid>("UnitSetID")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<decimal>("VATamount")
                        .HasPrecision(18, 6)
                        .HasColumnType("Decimal(18,6)");

                    b.Property<int>("VATrate")
                        .HasColumnType("Int");

                    b.HasKey("Id");

                    b.HasIndex("PaymentPlanID");

                    b.HasIndex("ProductID");

                    b.HasIndex("PurchaseRequestID");

                    b.HasIndex("UnitSetID");

                    b.ToTable("PurchaseRequestLines", (string)null);
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.PurchaseUnsuitabilityReport.PurchaseUnsuitabilityReports", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<DateTime?>("CreationTime")
                        .IsRequired()
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid>("CurrentAccountCardID")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<bool?>("DataOpenStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("DataOpenStatus");

                    b.Property<Guid?>("DataOpenStatusUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("00000000-0000-0000-0000-000000000000"))
                        .HasColumnName("DataOpenStatusUserId");

                    b.Property<DateTime?>("Date_")
                        .IsRequired()
                        .HasColumnType("DateTime");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("Description_")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FicheNo")
                        .IsRequired()
                        .HasMaxLength(17)
                        .HasColumnType("NVarChar(17)");

                    b.Property<bool>("IsContactSupplier")
                        .HasColumnType("Bit");

                    b.Property<bool>("IsCorrection")
                        .HasColumnType("Bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsReject")
                        .HasColumnType("Bit");

                    b.Property<bool>("IsToBeUsedAs")
                        .HasColumnType("Bit");

                    b.Property<bool>("IsUnsuitabilityWorkOrder")
                        .HasColumnType("Bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<Guid>("OrderID")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<string>("PartyNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ProductID")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<decimal>("UnsuitableAmount")
                        .HasPrecision(18, 6)
                        .HasColumnType("Decimal(18,6)");

                    b.HasKey("Id");

                    b.HasIndex("CurrentAccountCardID");

                    b.HasIndex("FicheNo");

                    b.HasIndex("OrderID");

                    b.HasIndex("ProductID");

                    b.ToTable("PurchaseUnsuitabilityReports", (string)null);
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.PurchasingUnsuitabilityItem.PurchasingUnsuitabilityItems", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(17)
                        .HasColumnType("NVarChar(17)");

                    b.Property<DateTime?>("CreationTime")
                        .IsRequired()
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<bool?>("DataOpenStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("DataOpenStatus");

                    b.Property<Guid?>("DataOpenStatusUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("00000000-0000-0000-0000-000000000000"))
                        .HasColumnName("DataOpenStatusUserId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<int>("Detection")
                        .HasColumnType("Int");

                    b.Property<byte[]>("Image")
                        .HasColumnType("varbinary(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("Bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("NVarChar(200)");

                    b.Property<bool>("PerProductivityAnalysis")
                        .HasColumnType("Bit");

                    b.Property<int>("Severity")
                        .HasColumnType("Int");

                    b.Property<bool>("StaProductivityAnalysis")
                        .HasColumnType("Bit");

                    b.HasKey("Id");

                    b.HasIndex("Code");

                    b.ToTable("PurchasingUnsuitabilityItems", (string)null);
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.Route.Routes", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<bool>("Approval")
                        .HasColumnType("Bit");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(17)
                        .HasColumnType("NVarChar(17)");

                    b.Property<DateTime?>("CreationTime")
                        .IsRequired()
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<bool?>("DataOpenStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("DataOpenStatus");

                    b.Property<Guid?>("DataOpenStatusUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("00000000-0000-0000-0000-000000000000"))
                        .HasColumnName("DataOpenStatusUserId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<bool>("IsActive")
                        .HasColumnType("Bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("NVarChar(200)");

                    b.Property<Guid>("ProductID")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<string>("ProductionStart")
                        .HasMaxLength(200)
                        .HasColumnType("NVarChar(200)");

                    b.Property<bool>("TechnicalApproval")
                        .HasColumnType("Bit");

                    b.HasKey("Id");

                    b.HasIndex("Code");

                    b.HasIndex("ProductID");

                    b.ToTable("Routes", (string)null);
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.RouteLine.RouteLines", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<int>("AdjustmentAndControlTime")
                        .HasColumnType("Int");

                    b.Property<DateTime?>("CreationTime")
                        .IsRequired()
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<bool?>("DataOpenStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("DataOpenStatus");

                    b.Property<Guid?>("DataOpenStatusUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("00000000-0000-0000-0000-000000000000"))
                        .HasColumnName("DataOpenStatusUserId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<int>("LineNr")
                        .HasColumnType("Int");

                    b.Property<byte[]>("OperationPicture")
                        .HasColumnType("varbinary(max)");

                    b.Property<decimal>("OperationTime")
                        .HasColumnType("Decimal");

                    b.Property<int>("Priority")
                        .HasColumnType("Int");

                    b.Property<Guid>("ProductID")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<string>("ProductionPoolDescription")
                        .HasMaxLength(200)
                        .HasColumnType("NVarChar(200)");

                    b.Property<Guid>("ProductionPoolID")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<Guid>("ProductsOperationID")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<Guid>("RouteID")
                        .HasColumnType("UniqueIdentifier");

                    b.HasKey("Id");

                    b.HasIndex("ProductID");

                    b.HasIndex("ProductsOperationID");

                    b.HasIndex("RouteID");

                    b.ToTable("RouteLines", (string)null);
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.SalesOrder.SalesOrders", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<Guid>("BranchID")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<DateTime?>("CreationTime")
                        .IsRequired()
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid>("CurrencyID")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<Guid>("CurrentAccountCardID")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<bool?>("DataOpenStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("DataOpenStatus");

                    b.Property<Guid?>("DataOpenStatusUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("00000000-0000-0000-0000-000000000000"))
                        .HasColumnName("DataOpenStatusUserId");

                    b.Property<DateTime>("Date_")
                        .HasColumnType("DateTime");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("Description_")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("ExchangeRate")
                        .HasPrecision(18, 6)
                        .HasColumnType("Decimal(18,6)");

                    b.Property<string>("FicheNo")
                        .IsRequired()
                        .HasMaxLength(17)
                        .HasColumnType("NVarChar(17)");

                    b.Property<decimal>("GrossAmount")
                        .HasPrecision(18, 6)
                        .HasColumnType("Decimal(18,6)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<Guid>("LinkedSalesPropositionID")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<decimal>("NetAmount")
                        .HasPrecision(18, 6)
                        .HasColumnType("Decimal(18,6)");

                    b.Property<Guid>("PaymentPlanID")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<int>("SalesOrderState")
                        .HasColumnType("Int");

                    b.Property<Guid?>("ShippingAdressID")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<string>("SpecialCode")
                        .HasMaxLength(201)
                        .HasColumnType("NVarChar(201)");

                    b.Property<TimeSpan?>("Time_")
                        .HasColumnType("time(7)");

                    b.Property<decimal>("TotalDiscountAmount")
                        .HasPrecision(18, 6)
                        .HasColumnType("Decimal(18,6)");

                    b.Property<decimal>("TotalVatAmount")
                        .HasPrecision(18, 6)
                        .HasColumnType("Decimal(18,6)");

                    b.Property<decimal>("TotalVatExcludedAmount")
                        .HasPrecision(18, 6)
                        .HasColumnType("Decimal(18,6)");

                    b.Property<Guid>("WarehouseID")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<DateTime?>("WorkOrderCreationDate")
                        .HasColumnType("DateTime");

                    b.HasKey("Id");

                    b.HasIndex("BranchID");

                    b.HasIndex("CurrencyID");

                    b.HasIndex("CurrentAccountCardID");

                    b.HasIndex("FicheNo");

                    b.HasIndex("PaymentPlanID");

                    b.HasIndex("ShippingAdressID");

                    b.HasIndex("WarehouseID");

                    b.ToTable("SalesOrders", (string)null);
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.SalesOrderLine.SalesOrderLines", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<DateTime?>("CreationTime")
                        .IsRequired()
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<bool?>("DataOpenStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("DataOpenStatus");

                    b.Property<Guid?>("DataOpenStatusUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("00000000-0000-0000-0000-000000000000"))
                        .HasColumnName("DataOpenStatusUserId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<decimal>("DiscountAmount")
                        .HasPrecision(18, 6)
                        .HasColumnType("Decimal(18,6)");

                    b.Property<decimal>("DiscountRate")
                        .HasPrecision(18, 6)
                        .HasColumnType("Decimal(18,6)");

                    b.Property<decimal>("ExchangeRate")
                        .HasPrecision(18, 6)
                        .HasColumnType("Decimal(18,6)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<Guid>("LikedPropositionLineID")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<decimal>("LineAmount")
                        .HasPrecision(18, 6)
                        .HasColumnType("Decimal(18,6)");

                    b.Property<string>("LineDescription")
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<int>("LineNr")
                        .HasColumnType("Int");

                    b.Property<decimal>("LineTotalAmount")
                        .HasPrecision(18, 6)
                        .HasColumnType("Decimal(18,6)");

                    b.Property<Guid>("PaymentPlanID")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<Guid>("ProductID")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<decimal>("Quantity")
                        .HasPrecision(18, 6)
                        .HasColumnType("Decimal(18,6)");

                    b.Property<Guid>("SalesOrderID")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<int>("SalesOrderLineStateEnum")
                        .HasColumnType("Int");

                    b.Property<Guid?>("SalesPropositionLinesId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("UnitPrice")
                        .HasPrecision(18, 6)
                        .HasColumnType("Decimal(18,6)");

                    b.Property<Guid>("UnitSetID")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<decimal>("VATamount")
                        .HasPrecision(18, 6)
                        .HasColumnType("Decimal(18,6)");

                    b.Property<int>("VATrate")
                        .HasColumnType("Int");

                    b.Property<DateTime?>("WorkOrderCreationDate")
                        .HasColumnType("DateTime");

                    b.HasKey("Id");

                    b.HasIndex("PaymentPlanID");

                    b.HasIndex("ProductID");

                    b.HasIndex("SalesOrderID");

                    b.HasIndex("SalesPropositionLinesId");

                    b.HasIndex("UnitSetID");

                    b.ToTable("SalesOrderLines", (string)null);
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.SalesPrice.SalesPrices", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<Guid?>("BranchID")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(17)
                        .HasColumnType("NVarChar(17)");

                    b.Property<DateTime?>("CreationTime")
                        .IsRequired()
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid>("CurrencyID")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<Guid?>("CurrentAccountCardID")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<bool?>("DataOpenStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("DataOpenStatus");

                    b.Property<Guid?>("DataOpenStatusUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("00000000-0000-0000-0000-000000000000"))
                        .HasColumnName("DataOpenStatusUserId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<DateTime?>("EndDate")
                        .IsRequired()
                        .HasColumnType("DateTime");

                    b.Property<bool>("IsActive")
                        .HasColumnType("Bit");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("Bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("Name")
                        .HasMaxLength(200)
                        .HasColumnType("NVarChar(200)");

                    b.Property<DateTime?>("StartDate")
                        .IsRequired()
                        .HasColumnType("DateTime");

                    b.Property<Guid?>("WarehouseID")
                        .HasColumnType("UniqueIdentifier");

                    b.HasKey("Id");

                    b.HasIndex("BranchID");

                    b.HasIndex("Code");

                    b.HasIndex("CurrencyID");

                    b.HasIndex("CurrentAccountCardID");

                    b.HasIndex("WarehouseID");

                    b.ToTable("SalesPrices", (string)null);
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.SalesPriceLine.SalesPriceLines", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<DateTime?>("CreationTime")
                        .IsRequired()
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid>("CurrencyID")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<Guid>("CurrentAccountCardID")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<bool?>("DataOpenStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("DataOpenStatus");

                    b.Property<Guid?>("DataOpenStatusUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("00000000-0000-0000-0000-000000000000"))
                        .HasColumnName("DataOpenStatusUserId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<DateTime?>("EndDate")
                        .IsRequired()
                        .HasColumnType("DateTime");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<int>("Linenr")
                        .HasColumnType("Int");

                    b.Property<decimal>("Price")
                        .HasPrecision(18, 6)
                        .HasColumnType("Decimal(18,6)");

                    b.Property<Guid>("ProductID")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<Guid>("SalesPriceID")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<DateTime?>("StartDate")
                        .IsRequired()
                        .HasColumnType("DateTime");

                    b.HasKey("Id");

                    b.HasIndex("CurrencyID");

                    b.HasIndex("CurrentAccountCardID");

                    b.HasIndex("ProductID");

                    b.HasIndex("SalesPriceID");

                    b.ToTable("SalesPriceLines", (string)null);
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.SalesProposition.SalesPropositions", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<Guid>("BranchID")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<DateTime?>("CreationTime")
                        .IsRequired()
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid>("CurrencyID")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<Guid>("CurrentAccountCardID")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<bool?>("DataOpenStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("DataOpenStatus");

                    b.Property<Guid?>("DataOpenStatusUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("00000000-0000-0000-0000-000000000000"))
                        .HasColumnName("DataOpenStatusUserId");

                    b.Property<DateTime>("Date_")
                        .HasColumnType("DateTime");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("Description_")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("ExchangeRate")
                        .HasPrecision(18, 6)
                        .HasColumnType("Decimal(18,6)");

                    b.Property<string>("FicheNo")
                        .IsRequired()
                        .HasMaxLength(17)
                        .HasColumnType("NVarChar(17)");

                    b.Property<decimal>("GrossAmount")
                        .HasPrecision(18, 6)
                        .HasColumnType("Decimal(18,6)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<Guid>("LinkedSalesPropositionID")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<decimal>("NetAmount")
                        .HasPrecision(18, 6)
                        .HasColumnType("Decimal(18,6)");

                    b.Property<Guid>("PaymentPlanID")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<string>("PropositionRevisionNo")
                        .HasMaxLength(50)
                        .HasColumnType("NVarChar(50)");

                    b.Property<DateTime?>("RevisionDate")
                        .HasColumnType("DateTime");

                    b.Property<string>("RevisionTime")
                        .HasMaxLength(8)
                        .HasColumnType("NVarChar(8)");

                    b.Property<int>("SalesPropositionState")
                        .HasColumnType("Int");

                    b.Property<Guid?>("ShippingAdressID")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<string>("SpecialCode")
                        .HasMaxLength(201)
                        .HasColumnType("NVarChar(201)");

                    b.Property<TimeSpan?>("Time_")
                        .HasColumnType("time(7)");

                    b.Property<decimal>("TotalDiscountAmount")
                        .HasPrecision(18, 6)
                        .HasColumnType("Decimal(18,6)");

                    b.Property<decimal>("TotalVatAmount")
                        .HasPrecision(18, 6)
                        .HasColumnType("Decimal(18,6)");

                    b.Property<decimal>("TotalVatExcludedAmount")
                        .HasPrecision(18, 6)
                        .HasColumnType("Decimal(18,6)");

                    b.Property<DateTime>("ValidityDate_")
                        .HasColumnType("DateTime");

                    b.Property<Guid>("WarehouseID")
                        .HasColumnType("UniqueIdentifier");

                    b.HasKey("Id");

                    b.HasIndex("BranchID");

                    b.HasIndex("CurrencyID");

                    b.HasIndex("CurrentAccountCardID");

                    b.HasIndex("FicheNo");

                    b.HasIndex("PaymentPlanID");

                    b.HasIndex("ShippingAdressID");

                    b.HasIndex("WarehouseID");

                    b.ToTable("SalesPropositions", (string)null);
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.SalesPropositionLine.SalesPropositionLines", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<DateTime?>("CreationTime")
                        .IsRequired()
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<bool?>("DataOpenStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("DataOpenStatus");

                    b.Property<Guid?>("DataOpenStatusUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("00000000-0000-0000-0000-000000000000"))
                        .HasColumnName("DataOpenStatusUserId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<decimal>("DiscountAmount")
                        .HasPrecision(18, 6)
                        .HasColumnType("Decimal(18,6)");

                    b.Property<decimal>("DiscountRate")
                        .HasPrecision(18, 6)
                        .HasColumnType("Decimal(18,6)");

                    b.Property<decimal>("ExchangeRate")
                        .HasPrecision(18, 6)
                        .HasColumnType("Decimal(18,6)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<decimal>("LineAmount")
                        .HasPrecision(18, 6)
                        .HasColumnType("Decimal(18,6)");

                    b.Property<string>("LineDescription")
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<int>("LineNr")
                        .HasColumnType("Int");

                    b.Property<decimal>("LineTotalAmount")
                        .HasPrecision(18, 6)
                        .HasColumnType("Decimal(18,6)");

                    b.Property<DateTime?>("OrderConversionDate")
                        .HasColumnType("DateTime");

                    b.Property<Guid>("PaymentPlanID")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<Guid>("ProductID")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<Guid?>("PurchaseRequestsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Quantity")
                        .HasPrecision(18, 6)
                        .HasColumnType("Decimal(18,6)");

                    b.Property<Guid>("SalesPropositionID")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<int>("SalesPropositionLineState")
                        .HasColumnType("Int");

                    b.Property<decimal>("UnitPrice")
                        .HasPrecision(18, 6)
                        .HasColumnType("Decimal(18,6)");

                    b.Property<Guid>("UnitSetID")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<decimal>("VATamount")
                        .HasPrecision(18, 6)
                        .HasColumnType("Decimal(18,6)");

                    b.Property<int>("VATrate")
                        .HasColumnType("Int");

                    b.HasKey("Id");

                    b.HasIndex("PaymentPlanID");

                    b.HasIndex("ProductID");

                    b.HasIndex("PurchaseRequestsId");

                    b.HasIndex("SalesPropositionID");

                    b.HasIndex("UnitSetID");

                    b.ToTable("SalesPropositionLines", (string)null);
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.Shift.Shifts", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(17)
                        .HasColumnType("NVarChar(17)");

                    b.Property<DateTime?>("CreationTime")
                        .IsRequired()
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<bool?>("DataOpenStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("DataOpenStatus");

                    b.Property<Guid?>("DataOpenStatusUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("00000000-0000-0000-0000-000000000000"))
                        .HasColumnName("DataOpenStatusUserId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<bool>("IsActive")
                        .HasColumnType("Bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("NVarChar(200)");

                    b.Property<decimal>("NetWorkTime")
                        .HasColumnType("Decimal");

                    b.Property<decimal>("Overtime")
                        .HasColumnType("Decimal");

                    b.Property<int>("ShiftOrder")
                        .HasColumnType("Int");

                    b.Property<decimal>("TotalBreakTime")
                        .HasColumnType("Decimal");

                    b.Property<decimal>("TotalWorkTime")
                        .HasColumnType("Decimal");

                    b.HasKey("Id");

                    b.HasIndex("Code");

                    b.ToTable("Shifts", (string)null);
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.ShiftLine.ShiftLines", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<decimal>("Coefficient")
                        .HasColumnType("Decimal");

                    b.Property<DateTime?>("CreationTime")
                        .IsRequired()
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<bool?>("DataOpenStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("DataOpenStatus");

                    b.Property<Guid?>("DataOpenStatusUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("00000000-0000-0000-0000-000000000000"))
                        .HasColumnName("DataOpenStatusUserId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<TimeSpan?>("EndHour")
                        .IsRequired()
                        .HasColumnType("time(7)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<int>("LineNr")
                        .HasColumnType("int");

                    b.Property<Guid>("ShiftID")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<TimeSpan?>("StartHour")
                        .IsRequired()
                        .HasColumnType("time(7)");

                    b.Property<int>("Type")
                        .HasColumnType("Int");

                    b.HasKey("Id");

                    b.HasIndex("ShiftID");

                    b.ToTable("ShiftLines", (string)null);
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.ShippingAdress.ShippingAdresses", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<string>("Adress1")
                        .IsRequired()
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("Adress2")
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVarChar(50)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(17)
                        .HasColumnType("NVarChar(17)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVarChar(50)");

                    b.Property<DateTime?>("CreationTime")
                        .IsRequired()
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("CustomerCardID")
                        .IsRequired()
                        .HasColumnType("UniqueIdentifier");

                    b.Property<bool?>("DataOpenStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("DataOpenStatus");

                    b.Property<Guid?>("DataOpenStatusUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("00000000-0000-0000-0000-000000000000"))
                        .HasColumnName("DataOpenStatusUserId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("District")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVarChar(50)");

                    b.Property<string>("EMail")
                        .HasMaxLength(200)
                        .HasColumnType("NVarChar(200)");

                    b.Property<string>("Fax")
                        .HasMaxLength(100)
                        .HasColumnType("NVarChar(100)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("NVarChar(200)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVarChar(100)");

                    b.Property<string>("PostCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVarChar(50)");

                    b.Property<decimal>("_Default")
                        .HasColumnType("Decimal");

                    b.HasKey("Id");

                    b.HasIndex("Code");

                    b.HasIndex("CustomerCardID");

                    b.ToTable("ShippingAdresses", (string)null);
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.Station.Stations", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<int>("Amortization")
                        .HasColumnType("Int");

                    b.Property<decimal>("AreaCovered")
                        .HasPrecision(18, 6)
                        .HasColumnType("Decimal(18,6)");

                    b.Property<string>("Brand")
                        .HasMaxLength(50)
                        .HasColumnType("NVarChar(50)");

                    b.Property<string>("Capacity")
                        .HasMaxLength(85)
                        .HasColumnType("NVarChar(85)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(17)
                        .HasColumnType("NVarChar(17)");

                    b.Property<DateTime?>("CreationTime")
                        .IsRequired()
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<bool?>("DataOpenStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("DataOpenStatus");

                    b.Property<Guid?>("DataOpenStatusUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("00000000-0000-0000-0000-000000000000"))
                        .HasColumnName("DataOpenStatusUserId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<Guid>("GroupID")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<bool>("IsActive")
                        .HasColumnType("Bit");

                    b.Property<bool>("IsContract")
                        .HasColumnType("Bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsFixtures")
                        .HasColumnType("Bit");

                    b.Property<decimal>("KWA")
                        .HasPrecision(18, 6)
                        .HasColumnType("decimal(18,6)");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<decimal>("MachineCost")
                        .HasPrecision(18, 6)
                        .HasColumnType("Decimal(18,6)");

                    b.Property<int>("Model")
                        .HasColumnType("Int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("NVarChar(200)");

                    b.Property<decimal>("PowerFactor")
                        .HasPrecision(18, 6)
                        .HasColumnType("Decimal(18,6)");

                    b.Property<int>("Shift")
                        .HasColumnType("Int");

                    b.Property<decimal>("ShiftWorkingTime")
                        .HasPrecision(18, 6)
                        .HasColumnType("Decimal(18,6)");

                    b.Property<decimal>("UsageArea")
                        .HasPrecision(18, 6)
                        .HasColumnType("Decimal(18,6)");

                    b.Property<byte[]>("UsageInstruction")
                        .HasColumnType("varbinary(MAX)");

                    b.Property<byte[]>("WorkSafetyInstruction")
                        .HasColumnType("varbinary(MAX)");

                    b.Property<decimal>("X")
                        .HasPrecision(18, 6)
                        .HasColumnType("Decimal(18,6)");

                    b.Property<decimal>("Y")
                        .HasPrecision(18, 6)
                        .HasColumnType("Decimal(18,6)");

                    b.HasKey("Id");

                    b.HasIndex("Code");

                    b.HasIndex("GroupID");

                    b.ToTable("Stations", (string)null);
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.StationGroup.StationGroups", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(17)
                        .HasColumnType("NVarChar(17)");

                    b.Property<DateTime?>("CreationTime")
                        .IsRequired()
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<bool?>("DataOpenStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("DataOpenStatus");

                    b.Property<Guid?>("DataOpenStatusUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("00000000-0000-0000-0000-000000000000"))
                        .HasColumnName("DataOpenStatusUserId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<bool>("IsActive")
                        .HasColumnType("Bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("NVarChar(200)");

                    b.Property<int>("TotalEmployees")
                        .HasColumnType("Int");

                    b.HasKey("Id");

                    b.HasIndex("Code");

                    b.ToTable("StationGroups", (string)null);
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.StationInventory.StationInventories", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<decimal>("Amount")
                        .HasPrecision(18, 6)
                        .HasColumnType("Decimal(18,6)");

                    b.Property<DateTime?>("CreationTime")
                        .IsRequired()
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<bool?>("DataOpenStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("DataOpenStatus");

                    b.Property<Guid?>("DataOpenStatusUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("00000000-0000-0000-0000-000000000000"))
                        .HasColumnName("DataOpenStatusUserId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("Description_")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<Guid>("ProductID")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<Guid>("StationID")
                        .HasColumnType("UniqueIdentifier");

                    b.HasKey("Id");

                    b.HasIndex("ProductID");

                    b.HasIndex("StationID");

                    b.ToTable("StationInventories", (string)null);
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.TechnicalDrawing.TechnicalDrawings", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<DateTime?>("CreationTime")
                        .IsRequired()
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<bool>("CustomerApproval")
                        .HasColumnType("Bit");

                    b.Property<bool?>("DataOpenStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("DataOpenStatus");

                    b.Property<Guid?>("DataOpenStatusUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("00000000-0000-0000-0000-000000000000"))
                        .HasColumnName("DataOpenStatusUserId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("Description_")
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("Drawer")
                        .HasMaxLength(50)
                        .HasColumnType("NVarChar(50)");

                    b.Property<string>("DrawingDomain")
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("DrawingFilePath")
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("DrawingNo")
                        .HasMaxLength(50)
                        .HasColumnType("NVarChar(50)");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("Bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<Guid>("ProductID")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<DateTime?>("RevisionDate")
                        .HasColumnType("DateTime");

                    b.Property<string>("RevisionNo")
                        .HasMaxLength(50)
                        .HasColumnType("NVarChar(50)");

                    b.Property<bool>("SampleApproval")
                        .HasColumnType("Bit");

                    b.HasKey("Id");

                    b.HasIndex("ProductID");

                    b.HasIndex("RevisionNo");

                    b.ToTable("TechnicalDrawings", (string)null);
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.TemplateOperation.TemplateOperations", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(17)
                        .HasColumnType("NVarChar(17)");

                    b.Property<DateTime?>("CreationTime")
                        .IsRequired()
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<bool?>("DataOpenStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("DataOpenStatus");

                    b.Property<Guid?>("DataOpenStatusUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("00000000-0000-0000-0000-000000000000"))
                        .HasColumnName("DataOpenStatusUserId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<bool>("IsActive")
                        .HasColumnType("Bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("NVarChar(200)");

                    b.Property<Guid>("WorkCenterID")
                        .HasColumnType("UniqueIdentifier");

                    b.HasKey("Id");

                    b.HasIndex("Code");

                    b.ToTable("TemplateOperations", (string)null);
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.TemplateOperationLine.TemplateOperationLines", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<int>("AdjustmentAndControlTime")
                        .HasColumnType("Int");

                    b.Property<bool>("Alternative")
                        .HasColumnType("Bit");

                    b.Property<DateTime?>("CreationTime")
                        .IsRequired()
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<bool?>("DataOpenStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("DataOpenStatus");

                    b.Property<Guid?>("DataOpenStatusUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("00000000-0000-0000-0000-000000000000"))
                        .HasColumnName("DataOpenStatusUserId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<int>("LineNr")
                        .HasColumnType("Int");

                    b.Property<decimal>("OperationTime")
                        .HasColumnType("Decimal");

                    b.Property<int>("Priority")
                        .HasColumnType("Int");

                    b.Property<int>("ProcessQuantity")
                        .HasColumnType("Int");

                    b.Property<Guid>("StationID")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<Guid>("TemplateOperationID")
                        .HasColumnType("UniqueIdentifier");

                    b.HasKey("Id");

                    b.HasIndex("StationID");

                    b.HasIndex("TemplateOperationID");

                    b.ToTable("TemplateOperationLines", (string)null);
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.UnitSet.UnitSets", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(17)
                        .HasColumnType("NVarChar(17)");

                    b.Property<DateTime?>("CreationTime")
                        .IsRequired()
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<bool?>("DataOpenStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("DataOpenStatus");

                    b.Property<Guid?>("DataOpenStatusUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("00000000-0000-0000-0000-000000000000"))
                        .HasColumnName("DataOpenStatusUserId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<bool>("IsActive")
                        .HasColumnType("Bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("NVarChar(200)");

                    b.HasKey("Id");

                    b.HasIndex("Code");

                    b.ToTable("UnitSets", (string)null);
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.UnplannedMaintenance.UnplannedMaintenances", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<string>("Caregiver")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CompletionDate")
                        .HasColumnType("DateTime");

                    b.Property<DateTime?>("CreationTime")
                        .IsRequired()
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<bool?>("DataOpenStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("DataOpenStatus");

                    b.Property<Guid?>("DataOpenStatusUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("00000000-0000-0000-0000-000000000000"))
                        .HasColumnName("DataOpenStatusUserId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("Note_")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumberofCaregivers")
                        .HasColumnType("Int");

                    b.Property<decimal>("OccuredTime")
                        .HasPrecision(18, 6)
                        .HasColumnType("Decimal(18,6)");

                    b.Property<Guid>("PeriodID")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<decimal>("PeriodTime")
                        .HasPrecision(18, 6)
                        .HasColumnType("Decimal(18,6)");

                    b.Property<string>("RegistrationNo")
                        .IsRequired()
                        .HasMaxLength(17)
                        .HasColumnType("NVarChar(17)");

                    b.Property<decimal>("RemainingTime")
                        .HasPrecision(18, 6)
                        .HasColumnType("Decimal(18,6)");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("DateTime");

                    b.Property<Guid>("StationID")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<int>("Status")
                        .HasColumnType("Int");

                    b.Property<DateTime?>("UnplannedDate")
                        .HasColumnType("DateTime");

                    b.Property<decimal>("UnplannedTime")
                        .HasPrecision(18, 6)
                        .HasColumnType("Decimal(18,6)");

                    b.HasKey("Id");

                    b.HasIndex("PeriodID");

                    b.HasIndex("RegistrationNo");

                    b.HasIndex("StationID");

                    b.ToTable("UnplannedMaintenances", (string)null);
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.UnplannedMaintenanceLine.UnplannedMaintenanceLines", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<decimal>("Amount")
                        .HasPrecision(18, 6)
                        .HasColumnType("Decimal(18,6)");

                    b.Property<DateTime?>("CreationTime")
                        .IsRequired()
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<bool?>("DataOpenStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("DataOpenStatus");

                    b.Property<Guid?>("DataOpenStatusUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("00000000-0000-0000-0000-000000000000"))
                        .HasColumnName("DataOpenStatusUserId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("InstructionDescription")
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<int>("LineNr")
                        .HasColumnType("Int");

                    b.Property<string>("MaintenanceNote")
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("ProductID")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<Guid>("UnitSetID")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<Guid>("UnplannedMaintenanceID")
                        .HasColumnType("UniqueIdentifier");

                    b.HasKey("Id");

                    b.HasIndex("ProductID");

                    b.HasIndex("UnitSetID");

                    b.HasIndex("UnplannedMaintenanceID");

                    b.ToTable("UnplannedMaintenanceLines", (string)null);
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.User.Users", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(17)
                        .HasColumnType("NVarChar(17)");

                    b.Property<DateTime?>("CreationTime")
                        .IsRequired()
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<bool?>("DataOpenStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("DataOpenStatus");

                    b.Property<Guid?>("DataOpenStatusUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("00000000-0000-0000-0000-000000000000"))
                        .HasColumnName("DataOpenStatusUserId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("Email")
                        .HasMaxLength(300)
                        .HasColumnType("NVarChar(300)");

                    b.Property<Guid>("GroupID")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<bool>("IsActive")
                        .HasColumnType("Bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEmailApproved")
                        .HasColumnType("Bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("NameSurname")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("NVarChar(300)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("NVarChar(300)");

                    b.HasKey("Id");

                    b.HasIndex("Code");

                    b.HasIndex("GroupID");

                    b.ToTable("Users", (string)null);
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.UserGroup.UserGroups", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(17)
                        .HasColumnType("NVarChar(17)");

                    b.Property<DateTime?>("CreationTime")
                        .IsRequired()
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<bool?>("DataOpenStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("DataOpenStatus");

                    b.Property<Guid?>("DataOpenStatusUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("00000000-0000-0000-0000-000000000000"))
                        .HasColumnName("DataOpenStatusUserId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<bool>("IsActive")
                        .HasColumnType("Bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("NVarChar(300)");

                    b.HasKey("Id");

                    b.HasIndex("Code");

                    b.ToTable("UserGroups", (string)null);
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.Vsm.VsmSchemas", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("NVarChar(250)");

                    b.Property<DateTime?>("CreationTime")
                        .IsRequired()
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<bool?>("DataOpenStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("DataOpenStatus");

                    b.Property<Guid?>("DataOpenStatusUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("00000000-0000-0000-0000-000000000000"))
                        .HasColumnName("DataOpenStatusUserId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("Description_")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(max)");

                    b.Property<object>("VSMSchema")
                        .IsRequired()
                        .HasMaxLength(25000000)
                        .HasColumnType("sql_variant");

                    b.HasKey("Id");

                    b.ToTable("VsmSchemas", (string)null);
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.WareHouse.Warehouses", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(17)
                        .HasColumnType("NVarChar(17)");

                    b.Property<DateTime?>("CreationTime")
                        .IsRequired()
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<bool?>("DataOpenStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("DataOpenStatus");

                    b.Property<Guid?>("DataOpenStatusUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("00000000-0000-0000-0000-000000000000"))
                        .HasColumnName("DataOpenStatusUserId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<bool>("IsActive")
                        .HasColumnType("Bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("NVarChar(200)");

                    b.HasKey("Id");

                    b.HasIndex("Code");

                    b.ToTable("Warehouses", (string)null);
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.WorkOrder.WorkOrders", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<decimal>("AdjustmentAndControlTime")
                        .HasPrecision(18, 6)
                        .HasColumnType("Decimal(18,6)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(17)
                        .HasColumnType("NVarChar(17)");

                    b.Property<DateTime?>("CreationTime")
                        .IsRequired()
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid>("CurrentAccountCardID")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<bool?>("DataOpenStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("DataOpenStatus");

                    b.Property<Guid?>("DataOpenStatusUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("00000000-0000-0000-0000-000000000000"))
                        .HasColumnName("DataOpenStatusUserId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<bool>("IsCancel")
                        .HasColumnType("Bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<int>("LineNr")
                        .HasColumnType("Int");

                    b.Property<Guid?>("LinkedWorkOrderID")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<DateTime?>("OccuredFinishDate")
                        .HasColumnType("DateTime");

                    b.Property<DateTime?>("OccuredStartDate")
                        .HasColumnType("DateTime");

                    b.Property<decimal>("OperationTime")
                        .HasPrecision(18, 6)
                        .HasColumnType("Decimal(18,6)");

                    b.Property<decimal>("PlannedQuantity")
                        .HasPrecision(18, 6)
                        .HasColumnType("Decimal(18,6)");

                    b.Property<decimal>("ProducedQuantity")
                        .HasPrecision(18, 6)
                        .HasColumnType("Decimal(18,6)");

                    b.Property<Guid>("ProductID")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<Guid>("ProductionOrderID")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<Guid>("ProductsOperationID")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<Guid>("PropositionID")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<Guid>("RouteID")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<Guid>("StationGroupID")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<Guid>("StationID")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<string>("WorkOrderNo")
                        .HasMaxLength(200)
                        .HasColumnType("NVarChar(200)");

                    b.Property<int>("WorkOrderState")
                        .HasColumnType("Int");

                    b.HasKey("Id");

                    b.HasIndex("Code");

                    b.HasIndex("CurrentAccountCardID");

                    b.HasIndex("ProductID");

                    b.HasIndex("ProductionOrderID");

                    b.HasIndex("ProductsOperationID");

                    b.HasIndex("PropositionID");

                    b.HasIndex("RouteID");

                    b.HasIndex("StationGroupID");

                    b.HasIndex("StationID");

                    b.ToTable("WorkOrders", (string)null);
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.BillsofMaterial.BillsofMaterials", b =>
                {
                    b.HasOne("TsiErp.Entities.Entities.Product.Products", "Products")
                        .WithMany("BillsofMaterials")
                        .HasForeignKey("FinishedProductID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Products");
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.BillsofMaterialLine.BillsofMaterialLines", b =>
                {
                    b.HasOne("TsiErp.Entities.Entities.BillsofMaterial.BillsofMaterials", "BillsofMaterials")
                        .WithMany("BillsofMaterialLines")
                        .HasForeignKey("BoMID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TsiErp.Entities.Entities.Product.Products", "Products")
                        .WithMany("BillsofMaterialLines")
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("TsiErp.Entities.Entities.UnitSet.UnitSets", "UnitSets")
                        .WithMany("BillsofMaterialLines")
                        .HasForeignKey("UnitSetID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("BillsofMaterials");

                    b.Navigation("Products");

                    b.Navigation("UnitSets");
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.ByDateStockMovement.ByDateStockMovements", b =>
                {
                    b.HasOne("TsiErp.Entities.Entities.Branch.Branches", "Branches")
                        .WithMany("ByDateStockMovements")
                        .HasForeignKey("BranchID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("TsiErp.Entities.Entities.Product.Products", "Products")
                        .WithMany("ByDateStockMovements")
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("TsiErp.Entities.Entities.WareHouse.Warehouses", "Warehouses")
                        .WithMany("ByDateStockMovements")
                        .HasForeignKey("WarehouseID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Branches");

                    b.Navigation("Products");

                    b.Navigation("Warehouses");
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.CalendarDay.CalendarDays", b =>
                {
                    b.HasOne("TsiErp.Entities.Entities.Calendar.Calendars", "Calendars")
                        .WithMany("CalendarDays")
                        .HasForeignKey("CalendarID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Calendars");
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.CalendarLine.CalendarLines", b =>
                {
                    b.HasOne("TsiErp.Entities.Entities.Calendar.Calendars", "Calendars")
                        .WithMany("CalendarLines")
                        .HasForeignKey("CalendarID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TsiErp.Entities.Entities.Shift.Shifts", "Shifts")
                        .WithMany("CalendarLines")
                        .HasForeignKey("ShiftID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("TsiErp.Entities.Entities.Station.Stations", "Stations")
                        .WithMany("CalendarLines")
                        .HasForeignKey("StationID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Calendars");

                    b.Navigation("Shifts");

                    b.Navigation("Stations");
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.CalibrationRecord.CalibrationRecords", b =>
                {
                    b.HasOne("TsiErp.Entities.Entities.EquipmentRecord.EquipmentRecords", "EquipmentRecords")
                        .WithMany("CalibrationRecords")
                        .HasForeignKey("EquipmentID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("EquipmentRecords");
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.CalibrationVerification.CalibrationVerifications", b =>
                {
                    b.HasOne("TsiErp.Entities.Entities.EquipmentRecord.EquipmentRecords", "EquipmentRecords")
                        .WithMany("CalibrationVerifications")
                        .HasForeignKey("EquipmentID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("EquipmentRecords");
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.ContractProductionTracking.ContractProductionTrackings", b =>
                {
                    b.HasOne("TsiErp.Entities.Entities.Employee.Employees", "Employees")
                        .WithMany("ContractProductionTrackings")
                        .HasForeignKey("EmployeeID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("TsiErp.Entities.Entities.Product.Products", "Products")
                        .WithMany("ContractProductionTrackings")
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("TsiErp.Entities.Entities.CurrentAccountCard.CurrentAccountCards", "CurrentAccountCards")
                        .WithMany("ContractProductionTrackings")
                        .HasForeignKey("ShiftID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("TsiErp.Entities.Entities.Shift.Shifts", "Shifts")
                        .WithMany("ContractProductionTrackings")
                        .HasForeignKey("ShiftID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("TsiErp.Entities.Entities.Station.Stations", "Stations")
                        .WithMany("ContractProductionTrackings")
                        .HasForeignKey("StationID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("TsiErp.Entities.Entities.WorkOrder.WorkOrders", "WorkOrders")
                        .WithMany("ContractProductionTrackings")
                        .HasForeignKey("WorkOrderID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("CurrentAccountCards");

                    b.Navigation("Employees");

                    b.Navigation("Products");

                    b.Navigation("Shifts");

                    b.Navigation("Stations");

                    b.Navigation("WorkOrders");
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.CurrentAccountCard.CurrentAccountCards", b =>
                {
                    b.HasOne("TsiErp.Entities.Entities.Currency.Currencies", "Currencies")
                        .WithMany("CurrentAccountCards")
                        .HasForeignKey("CurrencyID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Currencies");
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.Employee.Employees", b =>
                {
                    b.HasOne("TsiErp.Entities.Entities.Department.Departments", "Departments")
                        .WithMany("Employees")
                        .HasForeignKey("DepartmentID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Departments");
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.EquipmentRecord.EquipmentRecords", b =>
                {
                    b.HasOne("TsiErp.Entities.Entities.Department.Departments", "Departments")
                        .WithMany("EquipmentRecords")
                        .HasForeignKey("Department")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Departments");
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.ExchangeRate.ExchangeRates", b =>
                {
                    b.HasOne("TsiErp.Entities.Entities.Currency.Currencies", "Currencies")
                        .WithMany("ExchangeRates")
                        .HasForeignKey("CurrencyID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Currencies");
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.FinalControlUnsuitabilityReport.FinalControlUnsuitabilityReports", b =>
                {
                    b.HasOne("TsiErp.Entities.Entities.Employee.Employees", "Employees")
                        .WithMany("FinalControlUnsuitabilityReports")
                        .HasForeignKey("EmployeeID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("TsiErp.Entities.Entities.Product.Products", "Products")
                        .WithMany("FinalControlUnsuitabilityReports")
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Employees");

                    b.Navigation("Products");
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.Forecast.Forecasts", b =>
                {
                    b.HasOne("TsiErp.Entities.Entities.Branch.Branches", "Branches")
                        .WithMany("Forecasts")
                        .HasForeignKey("BranchID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("TsiErp.Entities.Entities.CurrentAccountCard.CurrentAccountCards", "CurrentAccountCards")
                        .WithMany("Forecasts")
                        .HasForeignKey("CurrentAccountCardID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("TsiErp.Entities.Entities.Period.Periods", "Periods")
                        .WithMany("Forecasts")
                        .HasForeignKey("PeriodID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Branches");

                    b.Navigation("CurrentAccountCards");

                    b.Navigation("Periods");
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.ForecastLine.ForecastLines", b =>
                {
                    b.HasOne("TsiErp.Entities.Entities.Forecast.Forecasts", "Forecasts")
                        .WithMany("ForecastLines")
                        .HasForeignKey("ForecastID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TsiErp.Entities.Entities.Product.Products", "Products")
                        .WithMany("ForecastLines")
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Forecasts");

                    b.Navigation("Products");
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.GrandTotalStockMovement.GrandTotalStockMovements", b =>
                {
                    b.HasOne("TsiErp.Entities.Entities.Branch.Branches", "Branches")
                        .WithMany("GrandTotalStockMovements")
                        .HasForeignKey("BranchID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("TsiErp.Entities.Entities.Product.Products", "Products")
                        .WithMany("GrandTotalStockMovements")
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("TsiErp.Entities.Entities.WareHouse.Warehouses", "Warehouses")
                        .WithMany("GrandTotalStockMovements")
                        .HasForeignKey("WarehouseID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Branches");

                    b.Navigation("Products");

                    b.Navigation("Warehouses");
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.MaintenanceInstruction.MaintenanceInstructions", b =>
                {
                    b.HasOne("TsiErp.Entities.Entities.MaintenancePeriod.MaintenancePeriods", "MaintenancePeriods")
                        .WithMany("MaintenanceInstructions")
                        .HasForeignKey("PeriodID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("TsiErp.Entities.Entities.Station.Stations", "Stations")
                        .WithMany("MaintenanceInstructions")
                        .HasForeignKey("StationID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("MaintenancePeriods");

                    b.Navigation("Stations");
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.MaintenanceInstructionLine.MaintenanceInstructionLines", b =>
                {
                    b.HasOne("TsiErp.Entities.Entities.MaintenanceInstruction.MaintenanceInstructions", "MaintenanceInstructions")
                        .WithMany("MaintenanceInstructionLines")
                        .HasForeignKey("InstructionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TsiErp.Entities.Entities.Product.Products", "Products")
                        .WithMany("MaintenanceInstructionLines")
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("TsiErp.Entities.Entities.UnitSet.UnitSets", "UnitSets")
                        .WithMany("MaintenanceInstructionLines")
                        .HasForeignKey("UnitSetID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("MaintenanceInstructions");

                    b.Navigation("Products");

                    b.Navigation("UnitSets");
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.OperationUnsuitabilityReport.OperationUnsuitabilityReports", b =>
                {
                    b.HasOne("TsiErp.Entities.Entities.Employee.Employees", "Employees")
                        .WithMany("OperationUnsuitabilityReports")
                        .HasForeignKey("EmployeeID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("TsiErp.Entities.Entities.ProductsOperation.ProductsOperations", "ProductsOperations")
                        .WithMany("OperationUnsuitabilityReports")
                        .HasForeignKey("OperationID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("TsiErp.Entities.Entities.Product.Products", "Products")
                        .WithMany("OperationUnsuitabilityReports")
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("TsiErp.Entities.Entities.ProductionOrder.ProductionOrders", "ProductionOrders")
                        .WithMany("OperationUnsuitabilityReports")
                        .HasForeignKey("ProductionOrderID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("TsiErp.Entities.Entities.StationGroup.StationGroups", "StationGroups")
                        .WithMany("OperationUnsuitabilityReports")
                        .HasForeignKey("StationGroupID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("TsiErp.Entities.Entities.Station.Stations", "Stations")
                        .WithMany("OperationUnsuitabilityReports")
                        .HasForeignKey("StationID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("TsiErp.Entities.Entities.WorkOrder.WorkOrders", "WorkOrders")
                        .WithMany("OperationUnsuitabilityReports")
                        .HasForeignKey("WorkOrderID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Employees");

                    b.Navigation("ProductionOrders");

                    b.Navigation("Products");

                    b.Navigation("ProductsOperations");

                    b.Navigation("StationGroups");

                    b.Navigation("Stations");

                    b.Navigation("WorkOrders");
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.Period.Periods", b =>
                {
                    b.HasOne("TsiErp.Entities.Entities.Branch.Branches", "Branches")
                        .WithMany("Periods")
                        .HasForeignKey("BranchID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Branches");
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.PlannedMaintenance.PlannedMaintenances", b =>
                {
                    b.HasOne("TsiErp.Entities.Entities.MaintenancePeriod.MaintenancePeriods", "MaintenancePeriods")
                        .WithMany("PlannedMaintenances")
                        .HasForeignKey("PeriodID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("TsiErp.Entities.Entities.Station.Stations", "Stations")
                        .WithMany("PlannedMaintenances")
                        .HasForeignKey("StationID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("MaintenancePeriods");

                    b.Navigation("Stations");
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.PlannedMaintenanceLine.PlannedMaintenanceLines", b =>
                {
                    b.HasOne("TsiErp.Entities.Entities.PlannedMaintenance.PlannedMaintenances", "PlannedMaintenances")
                        .WithMany("PlannedMaintenanceLines")
                        .HasForeignKey("PlannedMaintenanceID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TsiErp.Entities.Entities.Product.Products", "Products")
                        .WithMany("PlannedMaintenanceLines")
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("TsiErp.Entities.Entities.UnitSet.UnitSets", "UnitSets")
                        .WithMany("PlannedMaintenanceLines")
                        .HasForeignKey("UnitSetID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("PlannedMaintenances");

                    b.Navigation("Products");

                    b.Navigation("UnitSets");
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.Product.Products", b =>
                {
                    b.HasOne("TsiErp.Entities.Entities.ProductGroup.ProductGroups", "ProductGroups")
                        .WithMany("Products")
                        .HasForeignKey("ProductGrpID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("TsiErp.Entities.Entities.UnitSet.UnitSets", "UnitSets")
                        .WithMany("Products")
                        .HasForeignKey("UnitSetID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("ProductGroups");

                    b.Navigation("UnitSets");
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.ProductionOrder.ProductionOrders", b =>
                {
                    b.HasOne("TsiErp.Entities.Entities.BillsofMaterial.BillsofMaterials", "BillsofMaterials")
                        .WithMany("ProductionOrders")
                        .HasForeignKey("BOMID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("TsiErp.Entities.Entities.CurrentAccountCard.CurrentAccountCards", "CurrentAccountCards")
                        .WithMany("ProductionOrders")
                        .HasForeignKey("CurrentAccountID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("TsiErp.Entities.Entities.Product.Products", "Products")
                        .WithMany("ProductionOrders")
                        .HasForeignKey("FinishedProductID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("TsiErp.Entities.Entities.SalesOrder.SalesOrders", "SalesOrders")
                        .WithMany("ProductionOrders")
                        .HasForeignKey("OrderID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("TsiErp.Entities.Entities.SalesOrderLine.SalesOrderLines", "SalesOrderLines")
                        .WithOne("ProductionOrders")
                        .HasForeignKey("TsiErp.Entities.Entities.ProductionOrder.ProductionOrders", "OrderLineID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("TsiErp.Entities.Entities.SalesProposition.SalesPropositions", "SalesPropositions")
                        .WithMany("ProductionOrders")
                        .HasForeignKey("PropositionID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("TsiErp.Entities.Entities.SalesPropositionLine.SalesPropositionLines", "SalesPropositionLines")
                        .WithOne("ProductionOrders")
                        .HasForeignKey("TsiErp.Entities.Entities.ProductionOrder.ProductionOrders", "PropositionLineID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("TsiErp.Entities.Entities.Route.Routes", "Routes")
                        .WithMany("ProductionOrders")
                        .HasForeignKey("RouteID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("TsiErp.Entities.Entities.UnitSet.UnitSets", "UnitSets")
                        .WithMany("ProductionOrders")
                        .HasForeignKey("UnitSetID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("BillsofMaterials");

                    b.Navigation("CurrentAccountCards");

                    b.Navigation("Products");

                    b.Navigation("Routes");

                    b.Navigation("SalesOrderLines");

                    b.Navigation("SalesOrders");

                    b.Navigation("SalesPropositionLines");

                    b.Navigation("SalesPropositions");

                    b.Navigation("UnitSets");
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.ProductionTracking.ProductionTrackings", b =>
                {
                    b.HasOne("TsiErp.Entities.Entities.Employee.Employees", "Employees")
                        .WithMany("ProductionTrackings")
                        .HasForeignKey("EmployeeID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("TsiErp.Entities.Entities.Shift.Shifts", "Shifts")
                        .WithMany("ProductionTrackings")
                        .HasForeignKey("ShiftID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("TsiErp.Entities.Entities.Station.Stations", "Stations")
                        .WithMany("ProductionTrackings")
                        .HasForeignKey("StationID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("TsiErp.Entities.Entities.WorkOrder.WorkOrders", "WorkOrders")
                        .WithMany("ProductionTrackings")
                        .HasForeignKey("WorkOrderID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Employees");

                    b.Navigation("Shifts");

                    b.Navigation("Stations");

                    b.Navigation("WorkOrders");
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.ProductionTrackingHaltLine.ProductionTrackingHaltLines", b =>
                {
                    b.HasOne("TsiErp.Entities.Entities.HaltReason.HaltReasons", "HaltReasons")
                        .WithMany("ProductionTrackingHaltLines")
                        .HasForeignKey("HaltID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("TsiErp.Entities.Entities.ProductionTracking.ProductionTrackings", "ProductionTrackings")
                        .WithMany("ProductionTrackingHaltLines")
                        .HasForeignKey("ProductionTrackingID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HaltReasons");

                    b.Navigation("ProductionTrackings");
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.ProductReferanceNumber.ProductReferanceNumbers", b =>
                {
                    b.HasOne("TsiErp.Entities.Entities.CurrentAccountCard.CurrentAccountCards", "CurrentAccountCards")
                        .WithMany("ProductReferanceNumbers")
                        .HasForeignKey("CurrentAccountCardID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("TsiErp.Entities.Entities.Product.Products", "Products")
                        .WithMany("ProductReferanceNumbers")
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("CurrentAccountCards");

                    b.Navigation("Products");
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.ProductsOperation.ProductsOperations", b =>
                {
                    b.HasOne("TsiErp.Entities.Entities.Product.Products", "Products")
                        .WithMany("ProductsOperations")
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Products");
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.ProductsOperationLine.ProductsOperationLines", b =>
                {
                    b.HasOne("TsiErp.Entities.Entities.ProductsOperation.ProductsOperations", "ProductsOperations")
                        .WithMany("ProductsOperationLines")
                        .HasForeignKey("ProductsOperationID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TsiErp.Entities.Entities.Station.Stations", "Stations")
                        .WithMany("ProductsOperationLines")
                        .HasForeignKey("StationID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("ProductsOperations");

                    b.Navigation("Stations");
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.PurchaseOrder.PurchaseOrders", b =>
                {
                    b.HasOne("TsiErp.Entities.Entities.Branch.Branches", "Branches")
                        .WithMany("PurchaseOrders")
                        .HasForeignKey("BranchID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("TsiErp.Entities.Entities.Currency.Currencies", "Currencies")
                        .WithMany("PurchaseOrders")
                        .HasForeignKey("CurrencyID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("TsiErp.Entities.Entities.CurrentAccountCard.CurrentAccountCards", "CurrentAccountCards")
                        .WithMany("PurchaseOrders")
                        .HasForeignKey("CurrentAccountCardID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("TsiErp.Entities.Entities.PaymentPlan.PaymentPlans", "PaymentPlan")
                        .WithMany("PurchaseOrders")
                        .HasForeignKey("PaymentPlanID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("TsiErp.Entities.Entities.ShippingAdress.ShippingAdresses", "ShippingAdresses")
                        .WithMany("PurchaseOrders")
                        .HasForeignKey("ShippingAdressID")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("TsiErp.Entities.Entities.WareHouse.Warehouses", "Warehouses")
                        .WithMany("PurchaseOrders")
                        .HasForeignKey("WarehouseID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Branches");

                    b.Navigation("Currencies");

                    b.Navigation("CurrentAccountCards");

                    b.Navigation("PaymentPlan");

                    b.Navigation("ShippingAdresses");

                    b.Navigation("Warehouses");
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.PurchaseOrderLine.PurchaseOrderLines", b =>
                {
                    b.HasOne("TsiErp.Entities.Entities.PaymentPlan.PaymentPlans", "PaymentPlans")
                        .WithMany("PurchaseOrderLines")
                        .HasForeignKey("PaymentPlanID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("TsiErp.Entities.Entities.Product.Products", "Products")
                        .WithMany("PurchaseOrderLines")
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("TsiErp.Entities.Entities.PurchaseOrder.PurchaseOrders", "PurchaseOrders")
                        .WithMany("PurchaseOrderLines")
                        .HasForeignKey("PurchaseOrderID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TsiErp.Entities.Entities.UnitSet.UnitSets", "UnitSets")
                        .WithMany("PurchaseOrderLines")
                        .HasForeignKey("UnitSetID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("PaymentPlans");

                    b.Navigation("Products");

                    b.Navigation("PurchaseOrders");

                    b.Navigation("UnitSets");
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.PurchasePrice.PurchasePrices", b =>
                {
                    b.HasOne("TsiErp.Entities.Entities.Branch.Branches", "Branches")
                        .WithMany("PurchasePrices")
                        .HasForeignKey("BranchID")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("TsiErp.Entities.Entities.Currency.Currencies", "Currencies")
                        .WithMany("PurchasePrices")
                        .HasForeignKey("CurrencyID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("TsiErp.Entities.Entities.CurrentAccountCard.CurrentAccountCards", "CurrentAccountCards")
                        .WithMany("PurchasePrices")
                        .HasForeignKey("CurrentAccountCardID")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("TsiErp.Entities.Entities.WareHouse.Warehouses", "Warehouses")
                        .WithMany("PurchasePrices")
                        .HasForeignKey("WarehouseID")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Branches");

                    b.Navigation("Currencies");

                    b.Navigation("CurrentAccountCards");

                    b.Navigation("Warehouses");
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.PurchasePriceLine.PurchasePriceLines", b =>
                {
                    b.HasOne("TsiErp.Entities.Entities.Currency.Currencies", "Currencies")
                        .WithMany("PurchasePriceLines")
                        .HasForeignKey("CurrencyID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("TsiErp.Entities.Entities.Product.Products", "Products")
                        .WithMany("PurchasePriceLines")
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("TsiErp.Entities.Entities.PurchasePrice.PurchasePrices", "PurchasePrices")
                        .WithMany("PurchasePriceLines")
                        .HasForeignKey("PurchasePriceID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Currencies");

                    b.Navigation("Products");

                    b.Navigation("PurchasePrices");
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.PurchaseRequest.PurchaseRequests", b =>
                {
                    b.HasOne("TsiErp.Entities.Entities.Branch.Branches", "Branches")
                        .WithMany("PurchaseRequests")
                        .HasForeignKey("BranchID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("TsiErp.Entities.Entities.Currency.Currencies", "Currencies")
                        .WithMany("PurchaseRequests")
                        .HasForeignKey("CurrencyID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("TsiErp.Entities.Entities.CurrentAccountCard.CurrentAccountCards", "CurrentAccountCards")
                        .WithMany("PurchaseRequests")
                        .HasForeignKey("CurrentAccountCardID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("TsiErp.Entities.Entities.PaymentPlan.PaymentPlans", "PaymentPlan")
                        .WithMany("PurchaseRequests")
                        .HasForeignKey("PaymentPlanID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("TsiErp.Entities.Entities.ShippingAdress.ShippingAdresses", "ShippingAdresses")
                        .WithMany("PurchaseRequests")
                        .HasForeignKey("ShippingAdressID")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("TsiErp.Entities.Entities.WareHouse.Warehouses", "Warehouses")
                        .WithMany("PurchaseRequests")
                        .HasForeignKey("WarehouseID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Branches");

                    b.Navigation("Currencies");

                    b.Navigation("CurrentAccountCards");

                    b.Navigation("PaymentPlan");

                    b.Navigation("ShippingAdresses");

                    b.Navigation("Warehouses");
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.PurchaseRequestLine.PurchaseRequestLines", b =>
                {
                    b.HasOne("TsiErp.Entities.Entities.PaymentPlan.PaymentPlans", "PaymentPlans")
                        .WithMany("PurchaseRequestLines")
                        .HasForeignKey("PaymentPlanID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("TsiErp.Entities.Entities.Product.Products", "Products")
                        .WithMany("PurchaseRequestLines")
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("TsiErp.Entities.Entities.PurchaseRequest.PurchaseRequests", "PurchaseRequests")
                        .WithMany("PurchaseRequestLines")
                        .HasForeignKey("PurchaseRequestID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TsiErp.Entities.Entities.UnitSet.UnitSets", "UnitSets")
                        .WithMany("PurchaseRequestLines")
                        .HasForeignKey("UnitSetID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("PaymentPlans");

                    b.Navigation("Products");

                    b.Navigation("PurchaseRequests");

                    b.Navigation("UnitSets");
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.PurchaseUnsuitabilityReport.PurchaseUnsuitabilityReports", b =>
                {
                    b.HasOne("TsiErp.Entities.Entities.CurrentAccountCard.CurrentAccountCards", "CurrentAccountCards")
                        .WithMany("PurchaseUnsuitabilityReports")
                        .HasForeignKey("CurrentAccountCardID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("TsiErp.Entities.Entities.PurchaseOrder.PurchaseOrders", "PurchaseOrders")
                        .WithMany("PurchaseUnsuitabilityReports")
                        .HasForeignKey("OrderID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("TsiErp.Entities.Entities.Product.Products", "Products")
                        .WithMany("PurchaseUnsuitabilityReports")
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("CurrentAccountCards");

                    b.Navigation("Products");

                    b.Navigation("PurchaseOrders");
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.Route.Routes", b =>
                {
                    b.HasOne("TsiErp.Entities.Entities.Product.Products", "Products")
                        .WithMany("Routes")
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Products");
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.RouteLine.RouteLines", b =>
                {
                    b.HasOne("TsiErp.Entities.Entities.Product.Products", "Products")
                        .WithMany("RouteLines")
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("TsiErp.Entities.Entities.ProductsOperation.ProductsOperations", "ProductsOperations")
                        .WithMany("RouteLines")
                        .HasForeignKey("ProductsOperationID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("TsiErp.Entities.Entities.Route.Routes", "Routes")
                        .WithMany("RouteLines")
                        .HasForeignKey("RouteID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Products");

                    b.Navigation("ProductsOperations");

                    b.Navigation("Routes");
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.SalesOrder.SalesOrders", b =>
                {
                    b.HasOne("TsiErp.Entities.Entities.Branch.Branches", "Branches")
                        .WithMany("SalesOrders")
                        .HasForeignKey("BranchID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("TsiErp.Entities.Entities.Currency.Currencies", "Currencies")
                        .WithMany("SalesOrders")
                        .HasForeignKey("CurrencyID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("TsiErp.Entities.Entities.CurrentAccountCard.CurrentAccountCards", "CurrentAccountCards")
                        .WithMany("SalesOrders")
                        .HasForeignKey("CurrentAccountCardID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("TsiErp.Entities.Entities.PaymentPlan.PaymentPlans", "PaymentPlan")
                        .WithMany("SalesOrders")
                        .HasForeignKey("PaymentPlanID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("TsiErp.Entities.Entities.ShippingAdress.ShippingAdresses", "ShippingAdresses")
                        .WithMany("SalesOrders")
                        .HasForeignKey("ShippingAdressID")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("TsiErp.Entities.Entities.WareHouse.Warehouses", "Warehouses")
                        .WithMany("SalesOrders")
                        .HasForeignKey("WarehouseID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Branches");

                    b.Navigation("Currencies");

                    b.Navigation("CurrentAccountCards");

                    b.Navigation("PaymentPlan");

                    b.Navigation("ShippingAdresses");

                    b.Navigation("Warehouses");
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.SalesOrderLine.SalesOrderLines", b =>
                {
                    b.HasOne("TsiErp.Entities.Entities.PaymentPlan.PaymentPlans", "PaymentPlans")
                        .WithMany("SalesOrderLines")
                        .HasForeignKey("PaymentPlanID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("TsiErp.Entities.Entities.Product.Products", "Products")
                        .WithMany("SalesOrderLines")
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("TsiErp.Entities.Entities.SalesOrder.SalesOrders", "SalesOrders")
                        .WithMany("SalesOrderLines")
                        .HasForeignKey("SalesOrderID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TsiErp.Entities.Entities.SalesPropositionLine.SalesPropositionLines", "SalesPropositionLines")
                        .WithMany()
                        .HasForeignKey("SalesPropositionLinesId");

                    b.HasOne("TsiErp.Entities.Entities.UnitSet.UnitSets", "UnitSets")
                        .WithMany("SalesOrderLines")
                        .HasForeignKey("UnitSetID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("PaymentPlans");

                    b.Navigation("Products");

                    b.Navigation("SalesOrders");

                    b.Navigation("SalesPropositionLines");

                    b.Navigation("UnitSets");
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.SalesPrice.SalesPrices", b =>
                {
                    b.HasOne("TsiErp.Entities.Entities.Branch.Branches", "Branches")
                        .WithMany("SalesPrices")
                        .HasForeignKey("BranchID")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("TsiErp.Entities.Entities.Currency.Currencies", "Currencies")
                        .WithMany("SalesPrices")
                        .HasForeignKey("CurrencyID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("TsiErp.Entities.Entities.CurrentAccountCard.CurrentAccountCards", "CurrentAccountCards")
                        .WithMany("SalesPrices")
                        .HasForeignKey("CurrentAccountCardID")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("TsiErp.Entities.Entities.WareHouse.Warehouses", "Warehouses")
                        .WithMany("SalesPrices")
                        .HasForeignKey("WarehouseID")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Branches");

                    b.Navigation("Currencies");

                    b.Navigation("CurrentAccountCards");

                    b.Navigation("Warehouses");
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.SalesPriceLine.SalesPriceLines", b =>
                {
                    b.HasOne("TsiErp.Entities.Entities.Currency.Currencies", "Currencies")
                        .WithMany("SalesPriceLines")
                        .HasForeignKey("CurrencyID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("TsiErp.Entities.Entities.Product.Products", "Products")
                        .WithMany("SalesPriceLines")
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("TsiErp.Entities.Entities.SalesPrice.SalesPrices", "SalesPrices")
                        .WithMany("SalesPriceLines")
                        .HasForeignKey("SalesPriceID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Currencies");

                    b.Navigation("Products");

                    b.Navigation("SalesPrices");
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.SalesProposition.SalesPropositions", b =>
                {
                    b.HasOne("TsiErp.Entities.Entities.Branch.Branches", "Branches")
                        .WithMany("SalesPropositions")
                        .HasForeignKey("BranchID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("TsiErp.Entities.Entities.Currency.Currencies", "Currencies")
                        .WithMany("SalesPropositions")
                        .HasForeignKey("CurrencyID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("TsiErp.Entities.Entities.CurrentAccountCard.CurrentAccountCards", "CurrentAccountCards")
                        .WithMany("SalesPropositions")
                        .HasForeignKey("CurrentAccountCardID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("TsiErp.Entities.Entities.PaymentPlan.PaymentPlans", "PaymentPlan")
                        .WithMany("SalesPropositions")
                        .HasForeignKey("PaymentPlanID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("TsiErp.Entities.Entities.ShippingAdress.ShippingAdresses", "ShippingAdresses")
                        .WithMany("SalesPropositions")
                        .HasForeignKey("ShippingAdressID")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("TsiErp.Entities.Entities.WareHouse.Warehouses", "Warehouses")
                        .WithMany("SalesPropositions")
                        .HasForeignKey("WarehouseID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Branches");

                    b.Navigation("Currencies");

                    b.Navigation("CurrentAccountCards");

                    b.Navigation("PaymentPlan");

                    b.Navigation("ShippingAdresses");

                    b.Navigation("Warehouses");
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.SalesPropositionLine.SalesPropositionLines", b =>
                {
                    b.HasOne("TsiErp.Entities.Entities.PaymentPlan.PaymentPlans", "PaymentPlans")
                        .WithMany("SalesPropositionLines")
                        .HasForeignKey("PaymentPlanID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("TsiErp.Entities.Entities.Product.Products", "Products")
                        .WithMany("SalesPropositionLines")
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("TsiErp.Entities.Entities.PurchaseRequest.PurchaseRequests", "PurchaseRequests")
                        .WithMany()
                        .HasForeignKey("PurchaseRequestsId");

                    b.HasOne("TsiErp.Entities.Entities.SalesProposition.SalesPropositions", "SalesPropositions")
                        .WithMany("SalesPropositionLines")
                        .HasForeignKey("SalesPropositionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TsiErp.Entities.Entities.UnitSet.UnitSets", "UnitSets")
                        .WithMany("SalesPropositionLines")
                        .HasForeignKey("UnitSetID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("PaymentPlans");

                    b.Navigation("Products");

                    b.Navigation("PurchaseRequests");

                    b.Navigation("SalesPropositions");

                    b.Navigation("UnitSets");
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.ShiftLine.ShiftLines", b =>
                {
                    b.HasOne("TsiErp.Entities.Entities.Shift.Shifts", "Shifts")
                        .WithMany("ShiftLines")
                        .HasForeignKey("ShiftID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Shifts");
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.ShippingAdress.ShippingAdresses", b =>
                {
                    b.HasOne("TsiErp.Entities.Entities.CurrentAccountCard.CurrentAccountCards", "CurrentAccountCards")
                        .WithMany("ShippingAdresses")
                        .HasForeignKey("CustomerCardID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("CurrentAccountCards");
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.Station.Stations", b =>
                {
                    b.HasOne("TsiErp.Entities.Entities.StationGroup.StationGroups", "StationGroups")
                        .WithMany("Stations")
                        .HasForeignKey("GroupID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("StationGroups");
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.StationInventory.StationInventories", b =>
                {
                    b.HasOne("TsiErp.Entities.Entities.Station.Stations", "Stations")
                        .WithMany("StationInventories")
                        .HasForeignKey("StationID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Stations");
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.TechnicalDrawing.TechnicalDrawings", b =>
                {
                    b.HasOne("TsiErp.Entities.Entities.Product.Products", "Products")
                        .WithMany("TechnicalDrawings")
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Products");
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.TemplateOperationLine.TemplateOperationLines", b =>
                {
                    b.HasOne("TsiErp.Entities.Entities.Station.Stations", "Stations")
                        .WithMany("TemplateOperationLines")
                        .HasForeignKey("StationID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("TsiErp.Entities.Entities.TemplateOperation.TemplateOperations", "TemplateOperations")
                        .WithMany("TemplateOperationLines")
                        .HasForeignKey("TemplateOperationID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Stations");

                    b.Navigation("TemplateOperations");
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.UnplannedMaintenance.UnplannedMaintenances", b =>
                {
                    b.HasOne("TsiErp.Entities.Entities.MaintenancePeriod.MaintenancePeriods", "MaintenancePeriods")
                        .WithMany("UnplannedMaintenances")
                        .HasForeignKey("PeriodID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("TsiErp.Entities.Entities.Station.Stations", "Stations")
                        .WithMany("UnplannedMaintenances")
                        .HasForeignKey("StationID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("MaintenancePeriods");

                    b.Navigation("Stations");
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.UnplannedMaintenanceLine.UnplannedMaintenanceLines", b =>
                {
                    b.HasOne("TsiErp.Entities.Entities.Product.Products", "Products")
                        .WithMany("UnplannedMaintenanceLines")
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("TsiErp.Entities.Entities.UnitSet.UnitSets", "UnitSets")
                        .WithMany("UnplannedMaintenanceLines")
                        .HasForeignKey("UnitSetID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("TsiErp.Entities.Entities.UnplannedMaintenance.UnplannedMaintenances", "UnplannedMaintenances")
                        .WithMany("UnplannedMaintenanceLines")
                        .HasForeignKey("UnplannedMaintenanceID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Products");

                    b.Navigation("UnitSets");

                    b.Navigation("UnplannedMaintenances");
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.User.Users", b =>
                {
                    b.HasOne("TsiErp.Entities.Entities.UserGroup.UserGroups", "UserGroups")
                        .WithMany("Users")
                        .HasForeignKey("GroupID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("UserGroups");
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.WorkOrder.WorkOrders", b =>
                {
                    b.HasOne("TsiErp.Entities.Entities.CurrentAccountCard.CurrentAccountCards", "CurrentAccountCards")
                        .WithMany("WorkOrders")
                        .HasForeignKey("CurrentAccountCardID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("TsiErp.Entities.Entities.Product.Products", "Products")
                        .WithMany("WorkOrders")
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("TsiErp.Entities.Entities.ProductionOrder.ProductionOrders", "ProductionOrders")
                        .WithMany("WorkOrders")
                        .HasForeignKey("ProductionOrderID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("TsiErp.Entities.Entities.ProductsOperation.ProductsOperations", "ProductsOperations")
                        .WithMany("WorkOrders")
                        .HasForeignKey("ProductsOperationID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("TsiErp.Entities.Entities.SalesProposition.SalesPropositions", "SalesPropositions")
                        .WithMany("WorkOrders")
                        .HasForeignKey("PropositionID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("TsiErp.Entities.Entities.Route.Routes", "Routes")
                        .WithMany("WorkOrders")
                        .HasForeignKey("RouteID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("TsiErp.Entities.Entities.StationGroup.StationGroups", "StationGroups")
                        .WithMany("WorkOrders")
                        .HasForeignKey("StationGroupID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("TsiErp.Entities.Entities.Station.Stations", "Stations")
                        .WithMany("WorkOrders")
                        .HasForeignKey("StationID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("CurrentAccountCards");

                    b.Navigation("ProductionOrders");

                    b.Navigation("Products");

                    b.Navigation("ProductsOperations");

                    b.Navigation("Routes");

                    b.Navigation("SalesPropositions");

                    b.Navigation("StationGroups");

                    b.Navigation("Stations");
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.BillsofMaterial.BillsofMaterials", b =>
                {
                    b.Navigation("BillsofMaterialLines");

                    b.Navigation("ProductionOrders");
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.Branch.Branches", b =>
                {
                    b.Navigation("ByDateStockMovements");

                    b.Navigation("Forecasts");

                    b.Navigation("GrandTotalStockMovements");

                    b.Navigation("Periods");

                    b.Navigation("PurchaseOrders");

                    b.Navigation("PurchasePrices");

                    b.Navigation("PurchaseRequests");

                    b.Navigation("SalesOrders");

                    b.Navigation("SalesPrices");

                    b.Navigation("SalesPropositions");
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.Calendar.Calendars", b =>
                {
                    b.Navigation("CalendarDays");

                    b.Navigation("CalendarLines");
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.Currency.Currencies", b =>
                {
                    b.Navigation("CurrentAccountCards");

                    b.Navigation("ExchangeRates");

                    b.Navigation("PurchaseOrders");

                    b.Navigation("PurchasePriceLines");

                    b.Navigation("PurchasePrices");

                    b.Navigation("PurchaseRequests");

                    b.Navigation("SalesOrders");

                    b.Navigation("SalesPriceLines");

                    b.Navigation("SalesPrices");

                    b.Navigation("SalesPropositions");
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.CurrentAccountCard.CurrentAccountCards", b =>
                {
                    b.Navigation("ContractProductionTrackings");

                    b.Navigation("Forecasts");

                    b.Navigation("ProductReferanceNumbers");

                    b.Navigation("ProductionOrders");

                    b.Navigation("PurchaseOrders");

                    b.Navigation("PurchasePrices");

                    b.Navigation("PurchaseRequests");

                    b.Navigation("PurchaseUnsuitabilityReports");

                    b.Navigation("SalesOrders");

                    b.Navigation("SalesPrices");

                    b.Navigation("SalesPropositions");

                    b.Navigation("ShippingAdresses");

                    b.Navigation("WorkOrders");
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.Department.Departments", b =>
                {
                    b.Navigation("Employees");

                    b.Navigation("EquipmentRecords");
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.Employee.Employees", b =>
                {
                    b.Navigation("ContractProductionTrackings");

                    b.Navigation("FinalControlUnsuitabilityReports");

                    b.Navigation("OperationUnsuitabilityReports");

                    b.Navigation("ProductionTrackings");
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.EquipmentRecord.EquipmentRecords", b =>
                {
                    b.Navigation("CalibrationRecords");

                    b.Navigation("CalibrationVerifications");
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.Forecast.Forecasts", b =>
                {
                    b.Navigation("ForecastLines");
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.HaltReason.HaltReasons", b =>
                {
                    b.Navigation("ProductionTrackingHaltLines");
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.MaintenanceInstruction.MaintenanceInstructions", b =>
                {
                    b.Navigation("MaintenanceInstructionLines");
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.MaintenancePeriod.MaintenancePeriods", b =>
                {
                    b.Navigation("MaintenanceInstructions");

                    b.Navigation("PlannedMaintenances");

                    b.Navigation("UnplannedMaintenances");
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.PaymentPlan.PaymentPlans", b =>
                {
                    b.Navigation("PurchaseOrderLines");

                    b.Navigation("PurchaseOrders");

                    b.Navigation("PurchaseRequestLines");

                    b.Navigation("PurchaseRequests");

                    b.Navigation("SalesOrderLines");

                    b.Navigation("SalesOrders");

                    b.Navigation("SalesPropositionLines");

                    b.Navigation("SalesPropositions");
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.Period.Periods", b =>
                {
                    b.Navigation("Forecasts");
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.PlannedMaintenance.PlannedMaintenances", b =>
                {
                    b.Navigation("PlannedMaintenanceLines");
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.Product.Products", b =>
                {
                    b.Navigation("BillsofMaterialLines");

                    b.Navigation("BillsofMaterials");

                    b.Navigation("ByDateStockMovements");

                    b.Navigation("ContractProductionTrackings");

                    b.Navigation("FinalControlUnsuitabilityReports");

                    b.Navigation("ForecastLines");

                    b.Navigation("GrandTotalStockMovements");

                    b.Navigation("MaintenanceInstructionLines");

                    b.Navigation("OperationUnsuitabilityReports");

                    b.Navigation("PlannedMaintenanceLines");

                    b.Navigation("ProductReferanceNumbers");

                    b.Navigation("ProductionOrders");

                    b.Navigation("ProductsOperations");

                    b.Navigation("PurchaseOrderLines");

                    b.Navigation("PurchasePriceLines");

                    b.Navigation("PurchaseRequestLines");

                    b.Navigation("PurchaseUnsuitabilityReports");

                    b.Navigation("RouteLines");

                    b.Navigation("Routes");

                    b.Navigation("SalesOrderLines");

                    b.Navigation("SalesPriceLines");

                    b.Navigation("SalesPropositionLines");

                    b.Navigation("TechnicalDrawings");

                    b.Navigation("UnplannedMaintenanceLines");

                    b.Navigation("WorkOrders");
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.ProductGroup.ProductGroups", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.ProductionOrder.ProductionOrders", b =>
                {
                    b.Navigation("OperationUnsuitabilityReports");

                    b.Navigation("WorkOrders");
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.ProductionTracking.ProductionTrackings", b =>
                {
                    b.Navigation("ProductionTrackingHaltLines");
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.ProductsOperation.ProductsOperations", b =>
                {
                    b.Navigation("OperationUnsuitabilityReports");

                    b.Navigation("ProductsOperationLines");

                    b.Navigation("RouteLines");

                    b.Navigation("WorkOrders");
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.PurchaseOrder.PurchaseOrders", b =>
                {
                    b.Navigation("PurchaseOrderLines");

                    b.Navigation("PurchaseUnsuitabilityReports");
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.PurchasePrice.PurchasePrices", b =>
                {
                    b.Navigation("PurchasePriceLines");
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.PurchaseRequest.PurchaseRequests", b =>
                {
                    b.Navigation("PurchaseRequestLines");
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.Route.Routes", b =>
                {
                    b.Navigation("ProductionOrders");

                    b.Navigation("RouteLines");

                    b.Navigation("WorkOrders");
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.SalesOrder.SalesOrders", b =>
                {
                    b.Navigation("ProductionOrders");

                    b.Navigation("SalesOrderLines");
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.SalesOrderLine.SalesOrderLines", b =>
                {
                    b.Navigation("ProductionOrders");
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.SalesPrice.SalesPrices", b =>
                {
                    b.Navigation("SalesPriceLines");
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.SalesProposition.SalesPropositions", b =>
                {
                    b.Navigation("ProductionOrders");

                    b.Navigation("SalesPropositionLines");

                    b.Navigation("WorkOrders");
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.SalesPropositionLine.SalesPropositionLines", b =>
                {
                    b.Navigation("ProductionOrders");
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.Shift.Shifts", b =>
                {
                    b.Navigation("CalendarLines");

                    b.Navigation("ContractProductionTrackings");

                    b.Navigation("ProductionTrackings");

                    b.Navigation("ShiftLines");
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.ShippingAdress.ShippingAdresses", b =>
                {
                    b.Navigation("PurchaseOrders");

                    b.Navigation("PurchaseRequests");

                    b.Navigation("SalesOrders");

                    b.Navigation("SalesPropositions");
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.Station.Stations", b =>
                {
                    b.Navigation("CalendarLines");

                    b.Navigation("ContractProductionTrackings");

                    b.Navigation("MaintenanceInstructions");

                    b.Navigation("OperationUnsuitabilityReports");

                    b.Navigation("PlannedMaintenances");

                    b.Navigation("ProductionTrackings");

                    b.Navigation("ProductsOperationLines");

                    b.Navigation("StationInventories");

                    b.Navigation("TemplateOperationLines");

                    b.Navigation("UnplannedMaintenances");

                    b.Navigation("WorkOrders");
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.StationGroup.StationGroups", b =>
                {
                    b.Navigation("OperationUnsuitabilityReports");

                    b.Navigation("Stations");

                    b.Navigation("WorkOrders");
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.TemplateOperation.TemplateOperations", b =>
                {
                    b.Navigation("TemplateOperationLines");
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.UnitSet.UnitSets", b =>
                {
                    b.Navigation("BillsofMaterialLines");

                    b.Navigation("MaintenanceInstructionLines");

                    b.Navigation("PlannedMaintenanceLines");

                    b.Navigation("ProductionOrders");

                    b.Navigation("Products");

                    b.Navigation("PurchaseOrderLines");

                    b.Navigation("PurchaseRequestLines");

                    b.Navigation("SalesOrderLines");

                    b.Navigation("SalesPropositionLines");

                    b.Navigation("UnplannedMaintenanceLines");
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.UnplannedMaintenance.UnplannedMaintenances", b =>
                {
                    b.Navigation("UnplannedMaintenanceLines");
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.UserGroup.UserGroups", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.WareHouse.Warehouses", b =>
                {
                    b.Navigation("ByDateStockMovements");

                    b.Navigation("GrandTotalStockMovements");

                    b.Navigation("PurchaseOrders");

                    b.Navigation("PurchasePrices");

                    b.Navigation("PurchaseRequests");

                    b.Navigation("SalesOrders");

                    b.Navigation("SalesPrices");

                    b.Navigation("SalesPropositions");
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.WorkOrder.WorkOrders", b =>
                {
                    b.Navigation("ContractProductionTrackings");

                    b.Navigation("OperationUnsuitabilityReports");

                    b.Navigation("ProductionTrackings");
                });
#pragma warning restore 612, 618
        }
    }
}
