// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TsiErp.DataAccess.EntityFrameworkCore;

#nullable disable

namespace TsiErp.DataAccess.Migrations
{
    [DbContext(typeof(TsiErpDbContext))]
    partial class TsiErpDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Tsi.Authentication.Entities.Menus.TsiMenus", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("UniqueIdentifier");

                    b.Property<string>("MenuName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("NVarChar(250)");

                    b.Property<Guid>("ParentMenutId")
                        .HasColumnType("UniqueIdentifier");

                    b.HasKey("Id");

                    b.ToTable("TsiMenus", (string)null);
                });

            modelBuilder.Entity("Tsi.Authentication.Entities.RolePermissions.TsiRolePermissions", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<DateTime?>("CreationTime")
                        .IsRequired()
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<Guid>("MenuId")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("UniqueIdentifier");

                    b.HasKey("Id");

                    b.HasIndex("MenuId");

                    b.HasIndex("RoleId");

                    b.ToTable("TsiRolePermissions", (string)null);
                });

            modelBuilder.Entity("Tsi.Authentication.Entities.Roles.TsiRoles", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<DateTime?>("CreationTime")
                        .IsRequired()
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("NVarChar(250)");

                    b.HasKey("Id");

                    b.ToTable("TsiRoles", (string)null);
                });

            modelBuilder.Entity("Tsi.Authentication.Entities.UserRoles.TsiUserRoles", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<DateTime?>("CreationTime")
                        .IsRequired()
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("UniqueIdentifier");

                    b.HasKey("Id");

                    b.ToTable("TsiUserRoles", (string)null);
                });

            modelBuilder.Entity("Tsi.Authentication.Entities.Users.TsiUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<DateTime?>("CreationTime")
                        .IsRequired()
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("NVarChar(250)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("Bit");

                    b.Property<bool>("IsActive")
                        .HasColumnType("Bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("NVarChar(250)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(95)
                        .HasColumnType("NVarChar(95)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("NVarChar(250)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("NVarChar(250)");

                    b.HasKey("Id");

                    b.ToTable("TsiUser", (string)null);
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.Branch.Branches", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(17)
                        .HasColumnType("NVarChar(17)");

                    b.Property<DateTime?>("CreationTime")
                        .IsRequired()
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("Description_")
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("Bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("NVarChar(200)");

                    b.HasKey("Id");

                    b.HasIndex("Code");

                    b.ToTable("Branches", (string)null);
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.CalibrationRecord.CalibrationRecords", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(17)
                        .HasColumnType("NVarChar(17)");

                    b.Property<DateTime?>("CreationTime")
                        .IsRequired()
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<DateTime>("Date")
                        .HasColumnType("DateTime");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<Guid>("EquipmentID")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<string>("InfinitiveCertificateNo")
                        .HasMaxLength(50)
                        .HasColumnType("NVarChar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("NVarChar(200)");

                    b.Property<DateTime>("NextControl")
                        .HasColumnType("DateTime");

                    b.Property<string>("ReceiptNo")
                        .HasMaxLength(50)
                        .HasColumnType("NVarChar(50)");

                    b.Property<string>("Result")
                        .HasColumnType("nvarchar(MAX)");

                    b.HasKey("Id");

                    b.HasIndex("Code");

                    b.HasIndex("EquipmentID");

                    b.ToTable("CalibrationRecords", (string)null);
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.CalibrationVerification.CalibrationVerifications", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(17)
                        .HasColumnType("NVarChar(17)");

                    b.Property<DateTime?>("CreationTime")
                        .IsRequired()
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<DateTime>("Date")
                        .HasColumnType("DateTime");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<Guid>("EquipmentID")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<string>("InfinitiveCertificateNo")
                        .HasMaxLength(50)
                        .HasColumnType("NVarChar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("NVarChar(200)");

                    b.Property<DateTime>("NextControl")
                        .HasColumnType("DateTime");

                    b.Property<string>("ReceiptNo")
                        .HasMaxLength(50)
                        .HasColumnType("NVarChar(50)");

                    b.Property<string>("Result")
                        .HasColumnType("nvarchar(MAX)");

                    b.HasKey("Id");

                    b.HasIndex("Code");

                    b.HasIndex("EquipmentID");

                    b.ToTable("CalibrationVerifications", (string)null);
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.ContractUnsuitabilityItem.ContractUnsuitabilityItems", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(17)
                        .HasColumnType("NVarChar(17)");

                    b.Property<DateTime?>("CreationTime")
                        .IsRequired()
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<int>("Detection")
                        .HasColumnType("Int");

                    b.Property<byte[]>("Image")
                        .HasColumnType("varbinary(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("Bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("NVarChar(200)");

                    b.Property<bool>("PerProductivityAnalysis")
                        .HasColumnType("Bit");

                    b.Property<int>("Severity")
                        .HasColumnType("Int");

                    b.Property<bool>("StaProductivityAnalysis")
                        .HasColumnType("Bit");

                    b.HasKey("Id");

                    b.HasIndex("Code");

                    b.ToTable("ContractUnsuitabilityItems", (string)null);
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.Currency.Currencies", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(17)
                        .HasColumnType("NVarChar(17)");

                    b.Property<DateTime?>("CreationTime")
                        .IsRequired()
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<bool>("IsActive")
                        .HasColumnType("Bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("NVarChar(200)");

                    b.HasKey("Id");

                    b.HasIndex("Code");

                    b.ToTable("Currencies", (string)null);
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.CurrentAccountCard.CurrentAccountCards", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<string>("Address1")
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("Address2")
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("City")
                        .HasMaxLength(50)
                        .HasColumnType("NVarChar(50)");

                    b.Property<bool>("CoatingCustomer")
                        .HasColumnType("Bit");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(17)
                        .HasColumnType("NVarChar(17)");

                    b.Property<bool>("ContractSupplier")
                        .HasColumnType("Bit");

                    b.Property<string>("Country")
                        .HasMaxLength(50)
                        .HasColumnType("NVarChar(50)");

                    b.Property<DateTime?>("CreationTime")
                        .IsRequired()
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid>("CurrencyID")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("District")
                        .HasMaxLength(50)
                        .HasColumnType("NVarChar(50)");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("NVarChar(50)");

                    b.Property<string>("Fax")
                        .HasMaxLength(50)
                        .HasColumnType("NVarChar(50)");

                    b.Property<string>("IDnumber")
                        .HasMaxLength(11)
                        .HasColumnType("NVarChar(11)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("Bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("NVarChar(200)");

                    b.Property<int>("PlusPercentage")
                        .HasColumnType("Int");

                    b.Property<string>("PostCode")
                        .HasMaxLength(50)
                        .HasColumnType("NVarChar(50)");

                    b.Property<string>("PrivateCode1")
                        .HasMaxLength(50)
                        .HasColumnType("NVarChar(50)");

                    b.Property<string>("PrivateCode2")
                        .HasMaxLength(50)
                        .HasColumnType("NVarChar(50)");

                    b.Property<string>("PrivateCode3")
                        .HasMaxLength(50)
                        .HasColumnType("NVarChar(50)");

                    b.Property<string>("PrivateCode4")
                        .HasMaxLength(50)
                        .HasColumnType("NVarChar(50)");

                    b.Property<string>("PrivateCode5")
                        .HasMaxLength(50)
                        .HasColumnType("NVarChar(50)");

                    b.Property<string>("Responsible")
                        .HasMaxLength(50)
                        .HasColumnType("NVarChar(50)");

                    b.Property<string>("SaleContract")
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("ShippingAddress")
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<bool>("SoleProprietorship")
                        .HasColumnType("Bit");

                    b.Property<bool>("Supplier")
                        .HasColumnType("Bit");

                    b.Property<string>("SupplierNo")
                        .HasMaxLength(50)
                        .HasColumnType("NVarChar(50)");

                    b.Property<string>("TaxAdministration")
                        .IsRequired()
                        .HasMaxLength(75)
                        .HasColumnType("NVarChar(75)");

                    b.Property<string>("TaxNumber")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("NVarChar(10)");

                    b.Property<string>("Tel1")
                        .HasMaxLength(50)
                        .HasColumnType("NVarChar(50)");

                    b.Property<string>("Tel2")
                        .HasMaxLength(50)
                        .HasColumnType("NVarChar(50)");

                    b.Property<int>("Type")
                        .HasColumnType("Int");

                    b.Property<string>("Web")
                        .HasMaxLength(50)
                        .HasColumnType("NVarChar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Code");

                    b.HasIndex("CurrencyID");

                    b.ToTable("CurrentAccountCards", (string)null);
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.CustomerComplaintItem.CustomerComplaintItems", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(17)
                        .HasColumnType("NVarChar(17)");

                    b.Property<DateTime?>("CreationTime")
                        .IsRequired()
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<int>("Detection")
                        .HasColumnType("Int");

                    b.Property<byte[]>("Image")
                        .HasColumnType("varbinary(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("Bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("NVarChar(200)");

                    b.Property<bool>("PerProductivityAnalysis")
                        .HasColumnType("Bit");

                    b.Property<int>("Severity")
                        .HasColumnType("Int");

                    b.Property<bool>("StaProductivityAnalysis")
                        .HasColumnType("Bit");

                    b.HasKey("Id");

                    b.HasIndex("Code");

                    b.ToTable("CustomerComplaintItems", (string)null);
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.Department.Departments", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(17)
                        .HasColumnType("NVarChar(17)");

                    b.Property<DateTime?>("CreationTime")
                        .IsRequired()
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<bool>("IsActive")
                        .HasColumnType("Bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("NVarChar(200)");

                    b.HasKey("Id");

                    b.HasIndex("Code");

                    b.ToTable("Departments", (string)null);
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.Employee.Employees", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<string>("Address")
                        .HasMaxLength(200)
                        .HasColumnType("NVarChar(200)");

                    b.Property<DateTime?>("Birthday")
                        .HasColumnType("DateTime");

                    b.Property<int>("BloodType")
                        .HasColumnType("Int");

                    b.Property<string>("CellPhone")
                        .HasMaxLength(100)
                        .HasColumnType("NVarChar(100)");

                    b.Property<string>("City")
                        .HasMaxLength(100)
                        .HasColumnType("NVarChar(100)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(17)
                        .HasColumnType("NVarChar(17)");

                    b.Property<DateTime?>("CreationTime")
                        .IsRequired()
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<Guid>("DepartmentID")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<string>("District")
                        .HasMaxLength(100)
                        .HasColumnType("NVarChar(100)");

                    b.Property<string>("Email")
                        .HasMaxLength(200)
                        .HasColumnType("NVarChar(200)");

                    b.Property<string>("HomePhone")
                        .HasMaxLength(100)
                        .HasColumnType("NVarChar(100)");

                    b.Property<string>("IDnumber")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("NVarChar(11)");

                    b.Property<byte[]>("Image")
                        .HasColumnType("varbinary(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("Bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("NVarChar(200)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVarChar(100)");

                    b.HasKey("Id");

                    b.HasIndex("Code");

                    b.HasIndex("DepartmentID");

                    b.ToTable("Employees", (string)null);
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.EquipmentRecord.EquipmentRecords", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<bool>("Cancel")
                        .HasColumnType("Bit");

                    b.Property<DateTime?>("CancellationDate")
                        .HasColumnType("DateTime");

                    b.Property<string>("CancellationReason")
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(17)
                        .HasColumnType("NVarChar(17)");

                    b.Property<DateTime?>("CreationTime")
                        .IsRequired()
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<Guid>("Department")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<string>("EquipmentSerialNo")
                        .HasMaxLength(250)
                        .HasColumnType("NVarChar(250)");

                    b.Property<string>("Frequency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("Bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("MeasuringAccuracy")
                        .HasMaxLength(50)
                        .HasColumnType("NVarChar(50)");

                    b.Property<string>("MeasuringRange")
                        .HasMaxLength(150)
                        .HasColumnType("NVarChar(150)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("NVarChar(200)");

                    b.Property<DateTime>("RecordDate")
                        .HasColumnType("DateTime");

                    b.Property<string>("Responsible")
                        .HasMaxLength(150)
                        .HasColumnType("NVarChar(150)");

                    b.HasKey("Id");

                    b.HasIndex("Code");

                    b.HasIndex("Department");

                    b.ToTable("EquipmentRecords", (string)null);
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.ExchangeRate.ExchangeRates", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<decimal>("BuyingRate")
                        .HasPrecision(18, 6)
                        .HasColumnType("Decimal(18,6)");

                    b.Property<DateTime?>("CreationTime")
                        .IsRequired()
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid>("CurrencyID")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<DateTime>("Date")
                        .HasColumnType("DateTime");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<decimal>("EffectiveBuyingRate")
                        .HasPrecision(18, 6)
                        .HasColumnType("Decimal(18,6)");

                    b.Property<decimal>("EffectiveSaleRate")
                        .HasPrecision(18, 6)
                        .HasColumnType("Decimal(18,6)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<decimal>("SaleRate")
                        .HasPrecision(18, 6)
                        .HasColumnType("Decimal(18,6)");

                    b.HasKey("Id");

                    b.HasIndex("CurrencyID");

                    b.HasIndex("Date");

                    b.ToTable("ExchangeRates", (string)null);
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.FinalControlUnsuitabilityItem.FinalControlUnsuitabilityItems", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(17)
                        .HasColumnType("NVarChar(17)");

                    b.Property<DateTime?>("CreationTime")
                        .IsRequired()
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<int>("Detection")
                        .HasColumnType("Int");

                    b.Property<byte[]>("Image")
                        .HasColumnType("varbinary(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("Bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("NVarChar(200)");

                    b.Property<bool>("PerProductivityAnalysis")
                        .HasColumnType("Bit");

                    b.Property<int>("Severity")
                        .HasColumnType("Int");

                    b.Property<bool>("StaProductivityAnalysis")
                        .HasColumnType("Bit");

                    b.HasKey("Id");

                    b.HasIndex("Code");

                    b.ToTable("FinalControlUnsuitabilityItems", (string)null);
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.Logging.Logs", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("UniqueIdentifier");

                    b.Property<object>("AfterValues")
                        .IsRequired()
                        .HasMaxLength(5000)
                        .HasColumnType("sql_variant");

                    b.Property<object>("BeforeValues")
                        .IsRequired()
                        .HasMaxLength(5000)
                        .HasColumnType("sql_variant");

                    b.Property<DateTime>("Date_")
                        .HasMaxLength(200)
                        .HasColumnType("DateTime");

                    b.Property<string>("LogLevel_")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVarChar(50)");

                    b.Property<string>("MethodName_")
                        .IsRequired()
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("UniqueIdentifier");

                    b.HasKey("Id");

                    b.ToTable("Logs", (string)null);
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.Operation.Operations", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(17)
                        .HasColumnType("NVarChar(17)");

                    b.Property<DateTime?>("CreationTime")
                        .IsRequired()
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<bool>("IsActive")
                        .HasColumnType("Bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("NVarChar(200)");

                    b.Property<Guid>("ProductionPoolID")
                        .HasColumnType("UniqueIdentifier");

                    b.HasKey("Id");

                    b.HasIndex("Code");

                    b.ToTable("Operations", (string)null);
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.OperationLine.OperationLines", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<int>("AdjustmentAndControlTime")
                        .HasColumnType("Int");

                    b.Property<bool>("Alternative")
                        .HasColumnType("Bit");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(17)
                        .HasColumnType("NVarChar(17)");

                    b.Property<DateTime?>("CreationTime")
                        .IsRequired()
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<int>("LineNr")
                        .HasColumnType("Int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("NVarChar(200)");

                    b.Property<Guid>("OperationID")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<int>("Priority")
                        .HasColumnType("Int");

                    b.Property<int>("ProcessQuantity")
                        .HasColumnType("Int");

                    b.Property<Guid>("StationID")
                        .HasColumnType("UniqueIdentifier");

                    b.HasKey("Id");

                    b.HasIndex("Code");

                    b.HasIndex("OperationID");

                    b.HasIndex("StationID");

                    b.ToTable("OperationLines", (string)null);
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.OperationUnsuitabilityItem.OperationUnsuitabilityItems", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(17)
                        .HasColumnType("NVarChar(17)");

                    b.Property<DateTime?>("CreationTime")
                        .IsRequired()
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<int>("Detection")
                        .HasColumnType("Int");

                    b.Property<byte[]>("Image")
                        .HasColumnType("varbinary(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("Bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("NVarChar(200)");

                    b.Property<bool>("PerProductivityAnalysis")
                        .HasColumnType("Bit");

                    b.Property<int>("Severity")
                        .HasColumnType("Int");

                    b.Property<bool>("StaProductivityAnalysis")
                        .HasColumnType("Bit");

                    b.HasKey("Id");

                    b.HasIndex("Code");

                    b.ToTable("OperationUnsuitabilityItems", (string)null);
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.PaymentPlan.PaymentPlans", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(17)
                        .HasColumnType("NVarChar(17)");

                    b.Property<DateTime?>("CreationTime")
                        .IsRequired()
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<int>("Days_")
                        .HasColumnType("Int");

                    b.Property<decimal>("DelayMaturityDifference")
                        .HasPrecision(18, 6)
                        .HasColumnType("Decimal(18,6)");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<bool>("IsActive")
                        .HasColumnType("Bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("NVarChar(200)");

                    b.HasKey("Id");

                    b.HasIndex("Code");

                    b.ToTable("PaymentPlans", (string)null);
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.Period.Periods", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<Guid>("BranchID")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(17)
                        .HasColumnType("NVarChar(17)");

                    b.Property<DateTime?>("CreationTime")
                        .IsRequired()
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("Description_")
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("Bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("NVarChar(200)");

                    b.HasKey("Id");

                    b.HasIndex("BranchID");

                    b.HasIndex("Code");

                    b.ToTable("Periods", (string)null);
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.Product.Products", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<decimal>("CoatingWeight")
                        .HasPrecision(18, 6)
                        .HasColumnType("Decimal(18,6)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(17)
                        .HasColumnType("NVarChar(17)");

                    b.Property<bool>("Confirmation")
                        .HasColumnType("Bit");

                    b.Property<DateTime?>("CreationTime")
                        .IsRequired()
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("EnglishDefinition")
                        .HasMaxLength(201)
                        .HasColumnType("NVarChar(201)");

                    b.Property<string>("ExportCatNo")
                        .HasMaxLength(50)
                        .HasColumnType("NVarChar(50)");

                    b.Property<Guid>("FeatureSetID")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<string>("GTIP")
                        .HasMaxLength(50)
                        .HasColumnType("NVarChar(50)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("Bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("ManufacturerCode")
                        .HasMaxLength(50)
                        .HasColumnType("NVarChar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("NVarChar(200)");

                    b.Property<string>("OemRefNo")
                        .HasMaxLength(50)
                        .HasColumnType("NVarChar(50)");

                    b.Property<string>("OemRefNo2")
                        .HasMaxLength(50)
                        .HasColumnType("NVarChar(50)");

                    b.Property<string>("OemRefNo3")
                        .HasMaxLength(50)
                        .HasColumnType("NVarChar(50)");

                    b.Property<int>("PlannedWastage")
                        .HasColumnType("Int");

                    b.Property<string>("ProductDescription")
                        .HasMaxLength(500)
                        .HasColumnType("NVarChar(500)");

                    b.Property<Guid>("ProductGrpID")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<decimal>("ProductSize")
                        .HasPrecision(18, 6)
                        .HasColumnType("Decimal(18,6)");

                    b.Property<int>("ProductType")
                        .HasColumnType("Int");

                    b.Property<int>("PurchaseVAT")
                        .HasColumnType("Int");

                    b.Property<int>("SaleVAT")
                        .HasColumnType("Int");

                    b.Property<decimal>("SawWastage")
                        .HasPrecision(18, 6)
                        .HasColumnType("Decimal(18,6)");

                    b.Property<int>("SupplyForm")
                        .HasColumnType("Int");

                    b.Property<bool>("TechnicalConfirmation")
                        .HasColumnType("Bit");

                    b.Property<Guid>("UnitSetID")
                        .HasColumnType("UniqueIdentifier");

                    b.HasKey("Id");

                    b.HasIndex("Code");

                    b.HasIndex("ProductGrpID");

                    b.HasIndex("UnitSetID");

                    b.ToTable("Products", (string)null);
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.ProductGroup.ProductGroups", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(17)
                        .HasColumnType("NVarChar(17)");

                    b.Property<DateTime?>("CreationTime")
                        .IsRequired()
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<bool>("IsActive")
                        .HasColumnType("Bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("NVarChar(200)");

                    b.HasKey("Id");

                    b.HasIndex("Code");

                    b.ToTable("ProductGroups", (string)null);
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.ProductionOrderChangeItem.ProductionOrderChangeItems", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(17)
                        .HasColumnType("NVarChar(17)");

                    b.Property<DateTime?>("CreationTime")
                        .IsRequired()
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<int>("Detection")
                        .HasColumnType("Int");

                    b.Property<byte[]>("Image")
                        .HasColumnType("varbinary(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("Bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("NVarChar(200)");

                    b.Property<bool>("PerProductivityAnalysis")
                        .HasColumnType("Bit");

                    b.Property<int>("Severity")
                        .HasColumnType("Int");

                    b.Property<bool>("StaProductivityAnalysis")
                        .HasColumnType("Bit");

                    b.HasKey("Id");

                    b.HasIndex("Code");

                    b.ToTable("ProductionOrderChangeItems", (string)null);
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.PurchasingUnsuitabilityItem.PurchasingUnsuitabilityItems", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(17)
                        .HasColumnType("NVarChar(17)");

                    b.Property<DateTime?>("CreationTime")
                        .IsRequired()
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<int>("Detection")
                        .HasColumnType("Int");

                    b.Property<byte[]>("Image")
                        .HasColumnType("varbinary(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("Bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("NVarChar(200)");

                    b.Property<bool>("PerProductivityAnalysis")
                        .HasColumnType("Bit");

                    b.Property<int>("Severity")
                        .HasColumnType("Int");

                    b.Property<bool>("StaProductivityAnalysis")
                        .HasColumnType("Bit");

                    b.HasKey("Id");

                    b.HasIndex("Code");

                    b.ToTable("PurchasingUnsuitabilityItems", (string)null);
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.Route.Routes", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<bool>("Approval")
                        .HasColumnType("Bit");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(17)
                        .HasColumnType("NVarChar(17)");

                    b.Property<DateTime?>("CreationTime")
                        .IsRequired()
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<bool>("IsActive")
                        .HasColumnType("Bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("NVarChar(200)");

                    b.Property<Guid>("ProductID")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<string>("ProductionStart")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("NVarChar(200)");

                    b.Property<bool>("TechnicalApproval")
                        .HasColumnType("Bit");

                    b.HasKey("Id");

                    b.HasIndex("Code");

                    b.HasIndex("ProductID")
                        .IsUnique();

                    b.ToTable("Routes", (string)null);
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.RouteLine.RouteLines", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<int>("AdjustmentAndControlTime")
                        .HasColumnType("Int");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(17)
                        .HasColumnType("NVarChar(17)");

                    b.Property<DateTime?>("CreationTime")
                        .IsRequired()
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<int>("LineNr")
                        .HasColumnType("Int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("NVarChar(200)");

                    b.Property<Guid>("OperationID")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<byte[]>("OperationPicture")
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("OperationTime")
                        .HasColumnType("Int");

                    b.Property<int>("Priority")
                        .HasColumnType("Int");

                    b.Property<Guid>("ProductID")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<string>("ProductionPoolDescription")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("NVarChar(200)");

                    b.Property<Guid>("ProductionPoolID")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<Guid>("RouteID")
                        .HasColumnType("UniqueIdentifier");

                    b.HasKey("Id");

                    b.HasIndex("Code");

                    b.HasIndex("OperationID");

                    b.HasIndex("ProductID");

                    b.HasIndex("RouteID");

                    b.ToTable("RouteLines", (string)null);
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.SalesProposition.SalesPropositions", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BranchID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BranchesId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CurrenciesId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CurrencyID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CurrentAccountCardID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CurrentAccountCardsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Date_")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description_")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("ExchangeRate")
                        .HasPrecision(18, 6)
                        .HasColumnType("decimal(18,6)");

                    b.Property<string>("FicheNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("GrossAmount")
                        .HasPrecision(18, 6)
                        .HasColumnType("decimal(18,6)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("LinkedSalesPropositionID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("NetAmount")
                        .HasPrecision(18, 6)
                        .HasColumnType("decimal(18,6)");

                    b.Property<Guid>("PaymentPlanID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PropositionRevisionNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("RevisionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RevisionTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SalesPropositionState")
                        .HasColumnType("int");

                    b.Property<Guid?>("ShippingAdressID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ShippingAdressesId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SpecialCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Time_")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TotalDiscountAmount")
                        .HasPrecision(18, 6)
                        .HasColumnType("decimal(18,6)");

                    b.Property<decimal>("TotalVatAmount")
                        .HasPrecision(18, 6)
                        .HasColumnType("decimal(18,6)");

                    b.Property<decimal>("TotalVatExcludedAmount")
                        .HasPrecision(18, 6)
                        .HasColumnType("decimal(18,6)");

                    b.Property<DateTime>("ValidityDate_")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("WarehouseID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("WarehousesId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("BranchesId");

                    b.HasIndex("CurrenciesId");

                    b.HasIndex("CurrentAccountCardsId");

                    b.HasIndex("PaymentPlanID");

                    b.HasIndex("ShippingAdressesId");

                    b.HasIndex("WarehousesId");

                    b.ToTable("SalesPropositions");
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.SalesPropositionLine.SalesPropositionLines", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BranchID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BranchesId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("DiscountAmount")
                        .HasPrecision(18, 6)
                        .HasColumnType("decimal(18,6)");

                    b.Property<decimal>("DiscountRate")
                        .HasPrecision(18, 6)
                        .HasColumnType("decimal(18,6)");

                    b.Property<decimal>("ExchangeRate")
                        .HasPrecision(18, 6)
                        .HasColumnType("decimal(18,6)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("LineAmount")
                        .HasPrecision(18, 6)
                        .HasColumnType("decimal(18,6)");

                    b.Property<string>("LineDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LineNr")
                        .HasColumnType("int");

                    b.Property<decimal>("LineTotalAmount")
                        .HasPrecision(18, 6)
                        .HasColumnType("decimal(18,6)");

                    b.Property<DateTime?>("OrderConversionDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("PaymentPlanID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("PaymentPlansId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProductID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ProductsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Quantity")
                        .HasPrecision(18, 6)
                        .HasColumnType("decimal(18,6)");

                    b.Property<Guid>("SalesPropositionID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SalesPropositionLineState")
                        .HasColumnType("int");

                    b.Property<Guid?>("SalesPropositionsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("UnitPrice")
                        .HasPrecision(18, 6)
                        .HasColumnType("decimal(18,6)");

                    b.Property<Guid>("UnitSetID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UnitSetsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("VATamount")
                        .HasPrecision(18, 6)
                        .HasColumnType("decimal(18,6)");

                    b.Property<int>("VATrate")
                        .HasColumnType("int");

                    b.Property<Guid>("WarehouseID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("WarehousesId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("BranchesId");

                    b.HasIndex("PaymentPlansId");

                    b.HasIndex("ProductsId");

                    b.HasIndex("SalesPropositionsId");

                    b.HasIndex("UnitSetsId");

                    b.HasIndex("WarehousesId");

                    b.ToTable("SalesPropositionLines");
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.ShippingAdress.ShippingAdresses", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<string>("Adress1")
                        .IsRequired()
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("Adress2")
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVarChar(50)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(17)
                        .HasColumnType("NVarChar(17)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVarChar(50)");

                    b.Property<DateTime?>("CreationTime")
                        .IsRequired()
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("CustomerCardID")
                        .IsRequired()
                        .HasColumnType("UniqueIdentifier");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("District")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVarChar(50)");

                    b.Property<string>("EMail")
                        .HasMaxLength(200)
                        .HasColumnType("NVarChar(200)");

                    b.Property<string>("Fax")
                        .HasMaxLength(100)
                        .HasColumnType("NVarChar(100)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("NVarChar(200)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVarChar(100)");

                    b.Property<string>("PostCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVarChar(50)");

                    b.Property<decimal>("_Default")
                        .HasColumnType("Decimal");

                    b.HasKey("Id");

                    b.HasIndex("Code");

                    b.HasIndex("CustomerCardID");

                    b.ToTable("ShippingAdresses", (string)null);
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.Station.Stations", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<int>("Amortization")
                        .HasColumnType("Int");

                    b.Property<decimal>("AreaCovered")
                        .HasPrecision(18, 6)
                        .HasColumnType("Decimal(18,6)");

                    b.Property<string>("Brand")
                        .HasMaxLength(50)
                        .HasColumnType("NVarChar(50)");

                    b.Property<string>("Capacity")
                        .HasMaxLength(85)
                        .HasColumnType("NVarChar(85)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(17)
                        .HasColumnType("NVarChar(17)");

                    b.Property<DateTime?>("CreationTime")
                        .IsRequired()
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<Guid>("GroupID")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<bool>("IsActive")
                        .HasColumnType("Bit");

                    b.Property<bool>("IsContract")
                        .HasColumnType("Bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsFixtures")
                        .HasColumnType("Bit");

                    b.Property<decimal>("KWA")
                        .HasPrecision(18, 6)
                        .HasColumnType("decimal(18,6)");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<decimal>("MachineCost")
                        .HasPrecision(18, 6)
                        .HasColumnType("Decimal(18,6)");

                    b.Property<int>("Model")
                        .HasColumnType("Int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("NVarChar(200)");

                    b.Property<decimal>("PowerFactor")
                        .HasPrecision(18, 6)
                        .HasColumnType("Decimal(18,6)");

                    b.Property<int>("Shift")
                        .HasColumnType("Int");

                    b.Property<decimal>("ShiftWorkingTime")
                        .HasPrecision(18, 6)
                        .HasColumnType("Decimal(18,6)");

                    b.Property<decimal>("UsageArea")
                        .HasPrecision(18, 6)
                        .HasColumnType("Decimal(18,6)");

                    b.Property<byte[]>("UsageInstruction")
                        .HasColumnType("varbinary(MAX)");

                    b.Property<byte[]>("WorkSafetyInstruction")
                        .HasColumnType("varbinary(MAX)");

                    b.Property<decimal>("X")
                        .HasPrecision(18, 6)
                        .HasColumnType("Decimal(18,6)");

                    b.Property<decimal>("Y")
                        .HasPrecision(18, 6)
                        .HasColumnType("Decimal(18,6)");

                    b.HasKey("Id");

                    b.HasIndex("Code");

                    b.HasIndex("GroupID");

                    b.ToTable("Stations", (string)null);
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.StationGroup.StationGroups", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(17)
                        .HasColumnType("NVarChar(17)");

                    b.Property<DateTime?>("CreationTime")
                        .IsRequired()
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<bool>("IsActive")
                        .HasColumnType("Bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("NVarChar(200)");

                    b.Property<int>("TotalEmployees")
                        .HasColumnType("Int");

                    b.HasKey("Id");

                    b.HasIndex("Code");

                    b.ToTable("StationGroups", (string)null);
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.UnitSet.UnitSets", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(17)
                        .HasColumnType("NVarChar(17)");

                    b.Property<DateTime?>("CreationTime")
                        .IsRequired()
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<bool>("IsActive")
                        .HasColumnType("Bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("NVarChar(200)");

                    b.HasKey("Id");

                    b.HasIndex("Code");

                    b.ToTable("UnitSets", (string)null);
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.Vsm.VsmSchemas", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("NVarChar(250)");

                    b.Property<DateTime?>("CreationTime")
                        .IsRequired()
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("Description_")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(max)");

                    b.Property<object>("VSMSchema")
                        .IsRequired()
                        .HasMaxLength(25000000)
                        .HasColumnType("sql_variant");

                    b.HasKey("Id");

                    b.ToTable("VsmSchemas", (string)null);
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.WareHouse.Warehouses", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(17)
                        .HasColumnType("NVarChar(17)");

                    b.Property<DateTime?>("CreationTime")
                        .IsRequired()
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<bool>("IsActive")
                        .HasColumnType("Bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("NVarChar(200)");

                    b.HasKey("Id");

                    b.HasIndex("Code");

                    b.ToTable("Warehouses", (string)null);
                });

            modelBuilder.Entity("Tsi.Authentication.Entities.RolePermissions.TsiRolePermissions", b =>
                {
                    b.HasOne("Tsi.Authentication.Entities.Menus.TsiMenus", "TsiMenus")
                        .WithMany("TsiRolePermissions")
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Tsi.Authentication.Entities.Roles.TsiRoles", "TsiRoles")
                        .WithMany("TsiRolePermissions")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("TsiMenus");

                    b.Navigation("TsiRoles");
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.CalibrationRecord.CalibrationRecords", b =>
                {
                    b.HasOne("TsiErp.Entities.Entities.EquipmentRecord.EquipmentRecords", "EquipmentRecords")
                        .WithMany("CalibrationRecords")
                        .HasForeignKey("EquipmentID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("EquipmentRecords");
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.CalibrationVerification.CalibrationVerifications", b =>
                {
                    b.HasOne("TsiErp.Entities.Entities.EquipmentRecord.EquipmentRecords", "EquipmentRecords")
                        .WithMany("CalibrationVerifications")
                        .HasForeignKey("EquipmentID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("EquipmentRecords");
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.CurrentAccountCard.CurrentAccountCards", b =>
                {
                    b.HasOne("TsiErp.Entities.Entities.Currency.Currencies", "Currencies")
                        .WithMany("CurrentAccountCards")
                        .HasForeignKey("CurrencyID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Currencies");
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.Employee.Employees", b =>
                {
                    b.HasOne("TsiErp.Entities.Entities.Department.Departments", "Departments")
                        .WithMany("Employees")
                        .HasForeignKey("DepartmentID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Departments");
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.EquipmentRecord.EquipmentRecords", b =>
                {
                    b.HasOne("TsiErp.Entities.Entities.Department.Departments", "Departments")
                        .WithMany("EquipmentRecords")
                        .HasForeignKey("Department")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Departments");
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.ExchangeRate.ExchangeRates", b =>
                {
                    b.HasOne("TsiErp.Entities.Entities.Currency.Currencies", "Currencies")
                        .WithMany("ExchangeRates")
                        .HasForeignKey("CurrencyID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Currencies");
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.OperationLine.OperationLines", b =>
                {
                    b.HasOne("TsiErp.Entities.Entities.Operation.Operations", "Operations")
                        .WithMany("OperationLines")
                        .HasForeignKey("OperationID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("TsiErp.Entities.Entities.Station.Stations", "Stations")
                        .WithMany("OperationLines")
                        .HasForeignKey("StationID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Operations");

                    b.Navigation("Stations");
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.Period.Periods", b =>
                {
                    b.HasOne("TsiErp.Entities.Entities.Branch.Branches", "Branches")
                        .WithMany("Periods")
                        .HasForeignKey("BranchID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Branches");
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.Product.Products", b =>
                {
                    b.HasOne("TsiErp.Entities.Entities.ProductGroup.ProductGroups", "ProductGroups")
                        .WithMany("Products")
                        .HasForeignKey("ProductGrpID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("TsiErp.Entities.Entities.UnitSet.UnitSets", "UnitSets")
                        .WithMany("Products")
                        .HasForeignKey("UnitSetID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("ProductGroups");

                    b.Navigation("UnitSets");
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.Route.Routes", b =>
                {
                    b.HasOne("TsiErp.Entities.Entities.Product.Products", "Products")
                        .WithOne("Routes")
                        .HasForeignKey("TsiErp.Entities.Entities.Route.Routes", "ProductID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Products");
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.RouteLine.RouteLines", b =>
                {
                    b.HasOne("TsiErp.Entities.Entities.Operation.Operations", "Operations")
                        .WithMany("RouteLines")
                        .HasForeignKey("OperationID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("TsiErp.Entities.Entities.Product.Products", "Products")
                        .WithMany("RouteLines")
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("TsiErp.Entities.Entities.Route.Routes", "Routes")
                        .WithMany("RouteLines")
                        .HasForeignKey("RouteID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Operations");

                    b.Navigation("Products");

                    b.Navigation("Routes");
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.SalesProposition.SalesPropositions", b =>
                {
                    b.HasOne("TsiErp.Entities.Entities.Branch.Branches", "Branches")
                        .WithMany("SalesPropositions")
                        .HasForeignKey("BranchesId");

                    b.HasOne("TsiErp.Entities.Entities.Currency.Currencies", "Currencies")
                        .WithMany("SalesPropositions")
                        .HasForeignKey("CurrenciesId");

                    b.HasOne("TsiErp.Entities.Entities.CurrentAccountCard.CurrentAccountCards", "CurrentAccountCards")
                        .WithMany("SalesPropositions")
                        .HasForeignKey("CurrentAccountCardsId");

                    b.HasOne("TsiErp.Entities.Entities.PaymentPlan.PaymentPlans", "PaymentPlan")
                        .WithMany("SalesPropositions")
                        .HasForeignKey("PaymentPlanID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TsiErp.Entities.Entities.ShippingAdress.ShippingAdresses", "ShippingAdresses")
                        .WithMany("SalesPropositions")
                        .HasForeignKey("ShippingAdressesId");

                    b.HasOne("TsiErp.Entities.Entities.WareHouse.Warehouses", "Warehouses")
                        .WithMany("SalesPropositions")
                        .HasForeignKey("WarehousesId");

                    b.Navigation("Branches");

                    b.Navigation("Currencies");

                    b.Navigation("CurrentAccountCards");

                    b.Navigation("PaymentPlan");

                    b.Navigation("ShippingAdresses");

                    b.Navigation("Warehouses");
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.SalesPropositionLine.SalesPropositionLines", b =>
                {
                    b.HasOne("TsiErp.Entities.Entities.Branch.Branches", "Branches")
                        .WithMany("SalesPropositionLines")
                        .HasForeignKey("BranchesId");

                    b.HasOne("TsiErp.Entities.Entities.PaymentPlan.PaymentPlans", "PaymentPlans")
                        .WithMany("SalesPropositionLines")
                        .HasForeignKey("PaymentPlansId");

                    b.HasOne("TsiErp.Entities.Entities.Product.Products", "Products")
                        .WithMany("SalesPropositionLines")
                        .HasForeignKey("ProductsId");

                    b.HasOne("TsiErp.Entities.Entities.SalesProposition.SalesPropositions", "SalesPropositions")
                        .WithMany("SalesPropositionLines")
                        .HasForeignKey("SalesPropositionsId");

                    b.HasOne("TsiErp.Entities.Entities.UnitSet.UnitSets", "UnitSets")
                        .WithMany("SalesPropositionLines")
                        .HasForeignKey("UnitSetsId");

                    b.HasOne("TsiErp.Entities.Entities.WareHouse.Warehouses", "Warehouses")
                        .WithMany("SalesPropositionLines")
                        .HasForeignKey("WarehousesId");

                    b.Navigation("Branches");

                    b.Navigation("PaymentPlans");

                    b.Navigation("Products");

                    b.Navigation("SalesPropositions");

                    b.Navigation("UnitSets");

                    b.Navigation("Warehouses");
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.ShippingAdress.ShippingAdresses", b =>
                {
                    b.HasOne("TsiErp.Entities.Entities.CurrentAccountCard.CurrentAccountCards", "CurrentAccountCards")
                        .WithMany("ShippingAdresses")
                        .HasForeignKey("CustomerCardID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("CurrentAccountCards");
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.Station.Stations", b =>
                {
                    b.HasOne("TsiErp.Entities.Entities.StationGroup.StationGroups", "StationGroups")
                        .WithMany("Stations")
                        .HasForeignKey("GroupID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("StationGroups");
                });

            modelBuilder.Entity("Tsi.Authentication.Entities.Menus.TsiMenus", b =>
                {
                    b.Navigation("TsiRolePermissions");
                });

            modelBuilder.Entity("Tsi.Authentication.Entities.Roles.TsiRoles", b =>
                {
                    b.Navigation("TsiRolePermissions");
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.Branch.Branches", b =>
                {
                    b.Navigation("Periods");

                    b.Navigation("SalesPropositionLines");

                    b.Navigation("SalesPropositions");
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.Currency.Currencies", b =>
                {
                    b.Navigation("CurrentAccountCards");

                    b.Navigation("ExchangeRates");

                    b.Navigation("SalesPropositions");
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.CurrentAccountCard.CurrentAccountCards", b =>
                {
                    b.Navigation("SalesPropositions");

                    b.Navigation("ShippingAdresses");
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.Department.Departments", b =>
                {
                    b.Navigation("Employees");

                    b.Navigation("EquipmentRecords");
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.EquipmentRecord.EquipmentRecords", b =>
                {
                    b.Navigation("CalibrationRecords");

                    b.Navigation("CalibrationVerifications");
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.Operation.Operations", b =>
                {
                    b.Navigation("OperationLines");

                    b.Navigation("RouteLines");
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.PaymentPlan.PaymentPlans", b =>
                {
                    b.Navigation("SalesPropositionLines");

                    b.Navigation("SalesPropositions");
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.Product.Products", b =>
                {
                    b.Navigation("RouteLines");

                    b.Navigation("Routes");

                    b.Navigation("SalesPropositionLines");
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.ProductGroup.ProductGroups", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.Route.Routes", b =>
                {
                    b.Navigation("RouteLines");
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.SalesProposition.SalesPropositions", b =>
                {
                    b.Navigation("SalesPropositionLines");
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.ShippingAdress.ShippingAdresses", b =>
                {
                    b.Navigation("SalesPropositions");
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.Station.Stations", b =>
                {
                    b.Navigation("OperationLines");
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.StationGroup.StationGroups", b =>
                {
                    b.Navigation("Stations");
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.UnitSet.UnitSets", b =>
                {
                    b.Navigation("Products");

                    b.Navigation("SalesPropositionLines");
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.WareHouse.Warehouses", b =>
                {
                    b.Navigation("SalesPropositionLines");

                    b.Navigation("SalesPropositions");
                });
#pragma warning restore 612, 618
        }
    }
}
