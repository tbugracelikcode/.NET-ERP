// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TsiErp.DataAccess.EntityFrameworkCore;

#nullable disable

namespace TsiErp.DataAccess.Migrations
{
    [DbContext(typeof(TsiErpDbContext))]
    [Migration("20220922123121_Vsm_Table")]
    partial class Vsm_Table
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Tsi.Authentication.Entities.Menus.TsiMenus", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("UniqueIdentifier");

                    b.Property<string>("MenuName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("NVarChar(250)");

                    b.Property<Guid>("ParentMenutId")
                        .HasColumnType("UniqueIdentifier");

                    b.HasKey("Id");

                    b.ToTable("TsiMenus", (string)null);
                });

            modelBuilder.Entity("Tsi.Authentication.Entities.RolePermissions.TsiRolePermissions", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<DateTime?>("CreationTime")
                        .IsRequired()
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<Guid>("MenuId")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("UniqueIdentifier");

                    b.HasKey("Id");

                    b.HasIndex("MenuId");

                    b.HasIndex("RoleId");

                    b.ToTable("TsiRolePermissions", (string)null);
                });

            modelBuilder.Entity("Tsi.Authentication.Entities.Roles.TsiRoles", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<DateTime?>("CreationTime")
                        .IsRequired()
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("NVarChar(250)");

                    b.HasKey("Id");

                    b.ToTable("TsiRoles", (string)null);
                });

            modelBuilder.Entity("Tsi.Authentication.Entities.UserRoles.TsiUserRoles", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<DateTime?>("CreationTime")
                        .IsRequired()
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("UniqueIdentifier");

                    b.HasKey("Id");

                    b.ToTable("TsiUserRoles", (string)null);
                });

            modelBuilder.Entity("Tsi.Authentication.Entities.Users.TsiUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<DateTime?>("CreationTime")
                        .IsRequired()
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("NVarChar(250)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("Bit");

                    b.Property<bool>("IsActive")
                        .HasColumnType("Bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("NVarChar(250)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(95)
                        .HasColumnType("NVarChar(95)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("NVarChar(250)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("NVarChar(250)");

                    b.HasKey("Id");

                    b.ToTable("TsiUser", (string)null);
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.Branch.Branches", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(17)
                        .HasColumnType("NVarChar(17)");

                    b.Property<DateTime?>("CreationTime")
                        .IsRequired()
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("Description_")
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("Bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("NVarChar(200)");

                    b.HasKey("Id");

                    b.HasIndex("Code");

                    b.ToTable("Branches", (string)null);
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.CalibrationRecord.CalibrationRecords", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(17)
                        .HasColumnType("NVarChar(17)");

                    b.Property<DateTime?>("CreationTime")
                        .IsRequired()
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<DateTime>("Date")
                        .HasColumnType("DateTime");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<Guid>("EquipmentID")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<string>("InfinitiveCertificateNo")
                        .HasMaxLength(50)
                        .HasColumnType("NVarChar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("NVarChar(200)");

                    b.Property<DateTime>("NextControl")
                        .HasColumnType("DateTime");

                    b.Property<string>("ReceiptNo")
                        .HasMaxLength(50)
                        .HasColumnType("NVarChar(50)");

                    b.Property<string>("Result")
                        .HasColumnType("nvarchar(MAX)");

                    b.HasKey("Id");

                    b.HasIndex("Code");

                    b.HasIndex("EquipmentID");

                    b.ToTable("CalibrationRecords", (string)null);
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.CalibrationVerification.CalibrationVerifications", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(17)
                        .HasColumnType("NVarChar(17)");

                    b.Property<DateTime?>("CreationTime")
                        .IsRequired()
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<DateTime>("Date")
                        .HasColumnType("DateTime");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<Guid>("EquipmentID")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<string>("InfinitiveCertificateNo")
                        .HasMaxLength(50)
                        .HasColumnType("NVarChar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("NVarChar(200)");

                    b.Property<DateTime>("NextControl")
                        .HasColumnType("DateTime");

                    b.Property<string>("ReceiptNo")
                        .HasMaxLength(50)
                        .HasColumnType("NVarChar(50)");

                    b.Property<string>("Result")
                        .HasColumnType("nvarchar(MAX)");

                    b.HasKey("Id");

                    b.HasIndex("Code");

                    b.HasIndex("EquipmentID");

                    b.ToTable("CalibrationVerifications", (string)null);
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.ContractUnsuitabilityItem.ContractUnsuitabilityItems", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(17)
                        .HasColumnType("NVarChar(17)");

                    b.Property<DateTime?>("CreationTime")
                        .IsRequired()
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<int>("Detection")
                        .HasColumnType("Int");

                    b.Property<byte[]>("Image")
                        .HasColumnType("varbinary(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("Bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("NVarChar(200)");

                    b.Property<bool>("PerProductivityAnalysis")
                        .HasColumnType("Bit");

                    b.Property<int>("Severity")
                        .HasColumnType("Int");

                    b.Property<bool>("StaProductivityAnalysis")
                        .HasColumnType("Bit");

                    b.HasKey("Id");

                    b.HasIndex("Code");

                    b.ToTable("ContractUnsuitabilityItems", (string)null);
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.Department.Departments", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(17)
                        .HasColumnType("NVarChar(17)");

                    b.Property<DateTime?>("CreationTime")
                        .IsRequired()
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<bool>("IsActive")
                        .HasColumnType("Bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("NVarChar(200)");

                    b.HasKey("Id");

                    b.HasIndex("Code");

                    b.ToTable("Departments", (string)null);
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.Employee.Employees", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<string>("Address")
                        .HasMaxLength(200)
                        .HasColumnType("NVarChar(200)");

                    b.Property<DateTime?>("Birthday")
                        .HasColumnType("DateTime");

                    b.Property<int>("BloodType")
                        .HasColumnType("Int");

                    b.Property<string>("CellPhone")
                        .HasMaxLength(100)
                        .HasColumnType("NVarChar(100)");

                    b.Property<string>("City")
                        .HasMaxLength(100)
                        .HasColumnType("NVarChar(100)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(17)
                        .HasColumnType("NVarChar(17)");

                    b.Property<DateTime?>("CreationTime")
                        .IsRequired()
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<Guid>("DepartmentID")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<string>("District")
                        .HasMaxLength(100)
                        .HasColumnType("NVarChar(100)");

                    b.Property<string>("Email")
                        .HasMaxLength(200)
                        .HasColumnType("NVarChar(200)");

                    b.Property<string>("HomePhone")
                        .HasMaxLength(100)
                        .HasColumnType("NVarChar(100)");

                    b.Property<string>("IDnumber")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("NVarChar(11)");

                    b.Property<byte[]>("Image")
                        .HasColumnType("varbinary(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("Bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("NVarChar(200)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVarChar(100)");

                    b.HasKey("Id");

                    b.HasIndex("Code");

                    b.HasIndex("DepartmentID");

                    b.ToTable("Employees", (string)null);
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.EquipmentRecord.EquipmentRecords", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<bool>("Cancel")
                        .HasColumnType("Bit");

                    b.Property<DateTime?>("CancellationDate")
                        .HasColumnType("DateTime");

                    b.Property<string>("CancellationReason")
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(17)
                        .HasColumnType("NVarChar(17)");

                    b.Property<DateTime?>("CreationTime")
                        .IsRequired()
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<Guid>("Department")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<string>("EquipmentSerialNo")
                        .HasMaxLength(250)
                        .HasColumnType("NVarChar(250)");

                    b.Property<string>("Frequency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("Bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("MeasuringAccuracy")
                        .HasMaxLength(50)
                        .HasColumnType("NVarChar(50)");

                    b.Property<string>("MeasuringRange")
                        .HasMaxLength(150)
                        .HasColumnType("NVarChar(150)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("NVarChar(200)");

                    b.Property<DateTime>("RecordDate")
                        .HasColumnType("DateTime");

                    b.Property<string>("Responsible")
                        .HasMaxLength(150)
                        .HasColumnType("NVarChar(150)");

                    b.HasKey("Id");

                    b.HasIndex("Code");

                    b.HasIndex("Department");

                    b.ToTable("EquipmentRecords", (string)null);
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.Logging.Logs", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("UniqueIdentifier");

                    b.Property<object>("AfterValues")
                        .IsRequired()
                        .HasMaxLength(5000)
                        .HasColumnType("sql_variant");

                    b.Property<object>("BeforeValues")
                        .IsRequired()
                        .HasMaxLength(5000)
                        .HasColumnType("sql_variant");

                    b.Property<DateTime>("Date_")
                        .HasMaxLength(200)
                        .HasColumnType("DateTime");

                    b.Property<string>("LogLevel_")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVarChar(50)");

                    b.Property<string>("MethodName_")
                        .IsRequired()
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("UniqueIdentifier");

                    b.HasKey("Id");

                    b.ToTable("Logs", (string)null);
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.Period.Periods", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<Guid>("BranchID")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(17)
                        .HasColumnType("NVarChar(17)");

                    b.Property<DateTime?>("CreationTime")
                        .IsRequired()
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("Description_")
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("Bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("NVarChar(200)");

                    b.HasKey("Id");

                    b.HasIndex("BranchID");

                    b.HasIndex("Code");

                    b.ToTable("Periods", (string)null);
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.Station.Stations", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<int>("Amortization")
                        .HasColumnType("Int");

                    b.Property<decimal>("AreaCovered")
                        .HasColumnType("decimal(18,6)");

                    b.Property<string>("Brand")
                        .HasMaxLength(50)
                        .HasColumnType("NVarChar(50)");

                    b.Property<string>("Capacity")
                        .HasMaxLength(85)
                        .HasColumnType("NVarChar(85)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(17)
                        .HasColumnType("NVarChar(17)");

                    b.Property<DateTime?>("CreationTime")
                        .IsRequired()
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<Guid>("GroupID")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<bool>("IsActive")
                        .HasColumnType("Bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<decimal>("KWA")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<decimal>("MachineCost")
                        .HasColumnType("decimal(18,6)");

                    b.Property<int>("Model")
                        .HasColumnType("Int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("NVarChar(200)");

                    b.Property<decimal>("PowerFactor")
                        .HasColumnType("decimal(18,6)");

                    b.Property<int>("Shift")
                        .HasColumnType("Int");

                    b.Property<decimal>("ShiftWorkingTime")
                        .HasColumnType("decimal(18,6)");

                    b.Property<decimal>("UsageArea")
                        .HasColumnType("decimal(18,6)");

                    b.Property<byte[]>("UsageInstruction")
                        .HasColumnType("varbinary(MAX)");

                    b.Property<byte[]>("WorkSafetyInstruction")
                        .HasColumnType("varbinary(MAX)");

                    b.Property<decimal>("X")
                        .HasColumnType("decimal(18,6)");

                    b.Property<decimal>("Y")
                        .HasColumnType("decimal(18,6)");

                    b.HasKey("Id");

                    b.HasIndex("Code");

                    b.HasIndex("GroupID");

                    b.ToTable("Stations", (string)null);
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.StationGroup.StationGroups", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(17)
                        .HasColumnType("NVarChar(17)");

                    b.Property<DateTime?>("CreationTime")
                        .IsRequired()
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<bool>("IsActive")
                        .HasColumnType("Bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("NVarChar(200)");

                    b.Property<int>("TotalEmployees")
                        .HasColumnType("Int");

                    b.HasKey("Id");

                    b.HasIndex("Code");

                    b.ToTable("StationGroups", (string)null);
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.UnitSet.UnitSets", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(17)
                        .HasColumnType("NVarChar(17)");

                    b.Property<DateTime?>("CreationTime")
                        .IsRequired()
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<bool>("IsActive")
                        .HasColumnType("Bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("NVarChar(200)");

                    b.HasKey("Id");

                    b.HasIndex("Code");

                    b.ToTable("UnitSets", (string)null);
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.Vsm.VsmSchemas", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("NVarChar(250)");

                    b.Property<DateTime?>("CreationTime")
                        .IsRequired()
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("Description_")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(max)");

                    b.Property<object>("VSMSchema")
                        .IsRequired()
                        .HasMaxLength(25000000)
                        .HasColumnType("sql_variant");

                    b.HasKey("Id");

                    b.ToTable("VsmSchemas", (string)null);
                });

            modelBuilder.Entity("Tsi.Authentication.Entities.RolePermissions.TsiRolePermissions", b =>
                {
                    b.HasOne("Tsi.Authentication.Entities.Menus.TsiMenus", "TsiMenus")
                        .WithMany("TsiRolePermissions")
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Tsi.Authentication.Entities.Roles.TsiRoles", "TsiRoles")
                        .WithMany("TsiRolePermissions")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TsiMenus");

                    b.Navigation("TsiRoles");
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.CalibrationRecord.CalibrationRecords", b =>
                {
                    b.HasOne("TsiErp.Entities.Entities.EquipmentRecord.EquipmentRecords", "EquipmentRecords")
                        .WithMany("CalibrationRecords")
                        .HasForeignKey("EquipmentID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("EquipmentRecords");
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.CalibrationVerification.CalibrationVerifications", b =>
                {
                    b.HasOne("TsiErp.Entities.Entities.EquipmentRecord.EquipmentRecords", "EquipmentRecords")
                        .WithMany("CalibrationVerifications")
                        .HasForeignKey("EquipmentID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("EquipmentRecords");
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.Employee.Employees", b =>
                {
                    b.HasOne("TsiErp.Entities.Entities.Department.Departments", "Departments")
                        .WithMany("Employees")
                        .HasForeignKey("DepartmentID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Departments");
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.EquipmentRecord.EquipmentRecords", b =>
                {
                    b.HasOne("TsiErp.Entities.Entities.Department.Departments", "Departments")
                        .WithMany("EquipmentRecords")
                        .HasForeignKey("Department")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Departments");
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.Period.Periods", b =>
                {
                    b.HasOne("TsiErp.Entities.Entities.Branch.Branches", "Branches")
                        .WithMany("Periods")
                        .HasForeignKey("BranchID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Branches");
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.Station.Stations", b =>
                {
                    b.HasOne("TsiErp.Entities.Entities.StationGroup.StationGroups", "StationGroups")
                        .WithMany("Stations")
                        .HasForeignKey("GroupID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("StationGroups");
                });

            modelBuilder.Entity("Tsi.Authentication.Entities.Menus.TsiMenus", b =>
                {
                    b.Navigation("TsiRolePermissions");
                });

            modelBuilder.Entity("Tsi.Authentication.Entities.Roles.TsiRoles", b =>
                {
                    b.Navigation("TsiRolePermissions");
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.Branch.Branches", b =>
                {
                    b.Navigation("Periods");
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.Department.Departments", b =>
                {
                    b.Navigation("Employees");

                    b.Navigation("EquipmentRecords");
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.EquipmentRecord.EquipmentRecords", b =>
                {
                    b.Navigation("CalibrationRecords");

                    b.Navigation("CalibrationVerifications");
                });

            modelBuilder.Entity("TsiErp.Entities.Entities.StationGroup.StationGroups", b =>
                {
                    b.Navigation("Stations");
                });
#pragma warning restore 612, 618
        }
    }
}
