@page "/product-groups"

@inject StokService StokService
<style>
    .GridZebra table tbody tr:nth-child(odd) {
        background-color: #B5B5B5;
    }

    .GridZebra table tbody tr:nth-child(n) {
        text-align: center;
    }

    table {
        font-family: arial, sans-serif;
        border-collapse: collapse;
        width: 80%;
    }

    /* td, th {
                            border: 0px solid #dddddd;
                            text-align: center;
                            padding: 8px;
                        }*/
    .DateTime {
        width: 400px;
    }

</style>


<ContentHeader>
</ContentHeader>
<Card>
    <Body>
        <table>
            <tr>
                <td></td>
                <td>
                    <label>Başlangıç Tarihi:</label>
                    <DxDateEdit CssClass="DateTime" @bind-Date="@startDate"></DxDateEdit>
                </td>
                <td>
                    <label>Bitiş Tarihi:</label>
                    <DxDateEdit CssClass="DateTime" @bind-Date="@endDate"></DxDateEdit>
                </td>
                <td>
                    <label></label>
                    <Button Size="ButtonSize.Medium" OnClick="@OnDateButtonClicked">Filtrele</Button>
                </td>
                <td></td>
            </tr>
        </table>

    </Body>

</Card>
<ContentMain>
    <Card>
        <Title><CardTitle><strong>Stok Analizi > Stok Grupları</strong></CardTitle></Title>
        <Body>
            <DxChart Data="@data" LabelOverlap="ChartLabelOverlap.ShowAll">
                <DxChartTitle Text="Üretim Grafiği">
                </DxChartTitle>
                <DxChartValueAxis>
                    <DxChartAxisTitle Text="Üretim" />
                </DxChartValueAxis>
                <DxChartValueAxis Name="Ürün Grubu">
                </DxChartValueAxis>
                <DxChartBarSeries Color="System.Drawing.Color.DarkRed"
                                  ArgumentField="@((ProductGroupsAnalysis i) => i.ProductGroupName)"
                                  ValueField="@((ProductGroupsAnalysis i) => i.PlannedQuantity)"
                                  Name="Planlanan Adet">
                    <DxChartSeriesLabel Position="RelativePosition.Inside" Visible="true" BackgroundColor="System.Drawing.Color.DarkSlateGray" />
                </DxChartBarSeries>
                <DxChartBarSeries Color="System.Drawing.Color.Gray"
                                  ArgumentField="@((ProductGroupsAnalysis i) => i.ProductGroupName)"
                                  ValueField="@((ProductGroupsAnalysis i) => i.TotalProduction)"
                                  Name="Üretilen Adet">
                    <DxChartSeriesLabel Position="RelativePosition.Outside" Visible="true" BackgroundColor="System.Drawing.Color.DarkSlateGray" />
                </DxChartBarSeries>
                <DxChartLegend Orientation="Orientation.Horizontal"
                               HorizontalAlignment="HorizontalAlignment.Right"
                               Position="RelativePosition.Outside" />
            </DxChart>

        </Body>
    </Card>
    <Card>
        <Body>
            <DxGrid Data="@data"
                    CssClass="GridZebra"
                    ShowGroupPanel="true"
                    ShowFilterRow="true">
                <Columns>
                    <DxGridCommandColumn Width="120px" />
                    <DxGridDataColumn FieldName="ProductGroupName"
                                      Caption="Ürün Grubu"
                                      SortOrder="GridColumnSortOrder.Descending"
                                      SortIndex="1" />
                    <DxGridDataColumn FieldName="PlannedQuantity"
                                      Caption="Planlanan Adet"
                                      Width="120px"
                                      SortOrder="GridColumnSortOrder.Descending"
                                      SortIndex="0"
                                      DisplayFormat="######" />
                    <DxGridDataColumn FieldName="TotalProduction"
                                      Caption="Üretilen Adet"
                                      Width="120px"
                                      SortOrder="GridColumnSortOrder.Descending"
                                      SortIndex="0"
                                      DisplayFormat="######" />
                    <DxGridDataColumn FieldName="TotalScrap"
                                      Caption="Hurda Adet"
                                      SortOrder="GridColumnSortOrder.Descending"
                                      SortIndex="1"
                                      DisplayFormat="######" />
                    <DxGridDataColumn FieldName="Quality"
                                      Caption="Kalite"
                                      Width="120px"
                                      SortOrder="GridColumnSortOrder.Descending"
                                      SortIndex="0"
                                      DisplayFormat="@NumericMask.PercentageMultipliedBy100" />

                </Columns>
            </DxGrid>
        </Body>
    </Card>
</ContentMain>

@code {
    List<ProductGroupsAnalysis> data = new List<ProductGroupsAnalysis>();
    DateTime startDate = DateTime.Today.AddDays(-60);
    DateTime endDate = DateTime.Today;
    DateTime date1 = new DateTime(2022, 06, 01);
    DateTime date2 = new DateTime(2022, 06, 03);

    protected override void OnInitialized()
    {
        data = StokService.GetProductGroupsAnalysis(date1, date2);
    }

    void OnDateButtonClicked()
    {
        data = StokService.GetProductGroupsAnalysis(startDate, endDate);
        StateHasChanged();
    }

}
