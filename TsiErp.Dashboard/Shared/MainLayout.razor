@inherits LayoutComponentBase
@inject NavigationManager NavigationManager
@inject IJSRuntime JS
@inject ILayoutManager layoutManager
@inject NavBarLeftInjectableMenu navBarLeftInjectableMenu
<NavBar>
    <NavBarLeft>
        @navBarLeftInjectableMenu.content <!-- Injectable for custom menu content per page -->

       @* <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>*@
    </NavBarLeft>
</NavBar>
<SideBarContainer>
    <BrandLogo  Elevation="Elevation.Three" Link="http://tsicenter.com/_demo/"  ImageEffect="ImageEffect.Rounded" Logo="../dist/img/tsi-logo.png"> Dashboard</BrandLogo>
    <br />
    <SideBar>
        <!-- Sidebar user panel (optional) -->
        @*<SideBarUserPanel ImageEffect="ImageEffect.Circle" Link="/" Elevation="Elevation.Three" UserImage="../dist/img/dashboard.jpg">Dashboard</SideBarUserPanel>*@
        @*<SideBarSearch></SideBarSearch>*@
        <SideBarMenu>
            <SideBarTreeView Icon="fas fa-cogs">
                <Title>Makine Analizi</Title>
                <Items>
                    <SideBarMenuItem Icon="fas fa-angle-right" Link="/machine-analysis-general">
                        Genel Makina Analizi
                    </SideBarMenuItem>
                    <SideBarMenuItem Icon="fas fa-angle-right" Link="/machine-analysis-hold">
                        Makina Duruş Analizi
                    </SideBarMenuItem>
                    <SideBarMenuItem Icon="fas fa-angle-right" Link="/machine-analysis-oee">
                        Makina OEE Analizi
                    </SideBarMenuItem>
                </Items>
            </SideBarTreeView>
            <SideBarTreeView Icon="fas fa-users">
                <Title>Personel Analizi</Title>
                <Items>
                    <SideBarMenuItem Icon="fas fa-angle-right" Link="/employee-analysis-general">
                        Genel Personel Analizi
                    </SideBarMenuItem>
                    <SideBarMenuItem Icon="fas fa-angle-right" Link="/employee-analysis-hold">
                        Personel Duruş Analizi
                    </SideBarMenuItem>
                </Items>
            </SideBarTreeView>
            <SideBarTreeView Icon="fas fa-cubes">
                <Title>Stok Analizi</Title>
                <Items>
                    <SideBarMenuItem Icon="fas fa-angle-right" Link="/product-groups">
                        Stok Grupları
                    </SideBarMenuItem>
                    <SideBarMenuItem Icon="fas fa-angle-right" Link="/general-scrap-analysis">
                        Genel Hurda Analizi
                    </SideBarMenuItem>
                </Items>
            </SideBarTreeView>
            <SideBarMenuItem Link="/production-unsuitability-analysis" Icon="fas fa-exclamation-circle">
                Üretim Uygunsuzluk Analizi
            </SideBarMenuItem>
            <SideBarMenuItem Link="/manufacturer-unsuitability-analysis" Icon="fas fa-exclamation-circle">
                Tedarikçi Uygunsuzluk Analizi
            </SideBarMenuItem>
            <SideBarMenuItem Link="/contract-unsuitability-analysis" Icon="fas fa-exclamation-circle">
                Fason Uygunsuzluk Analizi
            </SideBarMenuItem>
            <SideBarMenuItem Link="/maintenance" Icon="fas fa-wrench">
                Bakım
            </SideBarMenuItem>

        </SideBarMenu>
    </SideBar>
</SideBarContainer>
<ContentWrapper>
    @Body
</ContentWrapper>
<ControlSideBar></ControlSideBar>
<MainFooter>
    <Default>
        <strong>TSI Technology Software IoT Solutions </strong><strong><a href="http://tsicenter.com/_demo/">    TSICenter.com</a></strong>
    </Default>
    <Right> </Right>
</MainFooter>
@code {

    #region Custom Collapse
    // private bool collapseNavMenu = true;

    //private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    //private void ToggleNavMenu()
    //{
    //    collapseNavMenu = !collapseNavMenu;
    //}
    #endregion

    protected override void OnParametersSet()
    {
        // content = null; for refreshing custom menu injectables per page.
        // no override; reset default to show parent menu content items.
        navBarLeftInjectableMenu.SetContent(null, false);
    }

    private DateTime dt = DateTime.Now;

    private void SeeAllMessages(Tuple<IDropdownFooter, MouseEventArgs> args)
    {
        NavigationManager.NavigateTo("messages/see-all-messages");
    }

    private void HandleContent(Tuple<INavBarMenuItem, MouseEventArgs> args)
    {
        NavigationManager.NavigateTo("messages/see-all-messages");
    }

    private void SeeAllNotifications(Tuple<IDropdownFooter, MouseEventArgs> args)
    {
        NavigationManager.NavigateTo("messages/see-all-notifications");
    }

    protected override void OnAfterRender(bool isFirstRender)
    {
        layoutManager.IsFooterFixed = true;
        layoutManager.IsNavBarFixed = true;
        layoutManager.IsSideBarFixed = true;
        base.OnAfterRender(isFirstRender);
    }
}